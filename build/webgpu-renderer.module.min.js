/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{DynamicDrawUsage as e,Uint32BufferAttribute as t,Uint16BufferAttribute as s,Color as r,Vector2 as n,Vector3 as i,Vector4 as o,Matrix3 as a,Matrix4 as u,EventDispatcher as l,MathUtils as c,LinearSRGBColorSpace as d,SRGBColorSpace as h,StaticDrawUsage as p,InterleavedBuffer as m,InterleavedBufferAttribute as g,InstancedInterleavedBuffer as f,DataArrayTexture as x,FloatType as b,DepthTexture as T,NearestFilter as _,LessCompare as y,WebGPUCoordinateSystem as N,FramebufferTexture as v,LinearMipmapLinearFilter as S,NearestMipmapNearestFilter as A,UnsignedIntType as R,DepthFormat as C,ShaderMaterial as E,NoColorSpace as w,Material as M,WebGLCubeRenderTarget as O,BoxGeometry as F,BackSide as B,NoBlending as U,Mesh as I,Scene as L,LinearFilter as D,CubeCamera as P,RenderTarget as G,sRGBEncoding as k,LinearEncoding as V,Float16BufferAttribute as z,REVISION as $,TangentSpaceNormalMap as H,ObjectSpaceNormalMap as W,NoToneMapping as j,LinearToneMapping as q,ReinhardToneMapping as X,CineonToneMapping as Y,ACESFilmicToneMapping as K,PointLight as Q,DirectionalLight as Z,SpotLight as J,AmbientLight as ee,HemisphereLight as te,Loader as se,FileLoader as re,PointsMaterial as ne,LineBasicMaterial as ie,LineDashedMaterial as oe,MeshNormalMaterial as ae,MeshBasicMaterial as ue,MeshLambertMaterial as le,MeshPhongMaterial as ce,MeshStandardMaterial as de,MeshPhysicalMaterial as he,SpriteMaterial as pe,MaterialLoader as me,ObjectLoader as ge,DepthStencilFormat as fe,UnsignedInt248Type as xe,EquirectangularReflectionMapping as be,EquirectangularRefractionMapping as Te,CubeReflectionMapping as _e,CubeRefractionMapping as ye,SphereGeometry as Ne,Frustum as ve,DoubleSide as Se,FrontSide as Ae,IntType as Re,createCanvasElement as Ce,AddEquation as Ee,SubtractEquation as we,ReverseSubtractEquation as Me,ZeroFactor as Oe,OneFactor as Fe,SrcColorFactor as Be,SrcAlphaFactor as Ue,SrcAlphaSaturateFactor as Ie,DstColorFactor as Le,DstAlphaFactor as De,OneMinusSrcColorFactor as Pe,OneMinusSrcAlphaFactor as Ge,OneMinusDstColorFactor as ke,OneMinusDstAlphaFactor as Ve,CullFaceNone as ze,CullFaceBack as $e,CullFaceFront as He,CustomBlending as We,MultiplyBlending as je,SubtractiveBlending as qe,AdditiveBlending as Xe,NormalBlending as Ye,NotEqualDepth as Ke,GreaterDepth as Qe,GreaterEqualDepth as Ze,EqualDepth as Je,LessEqualDepth as et,LessDepth as tt,AlwaysDepth as st,NeverDepth as rt,UnsignedByteType as nt,UnsignedShort4444Type as it,UnsignedShort5551Type as ot,ByteType as at,ShortType as ut,UnsignedShortType as lt,HalfFloatType as ct,AlphaFormat as dt,RGBAFormat as ht,LuminanceFormat as pt,LuminanceAlphaFormat as mt,RedFormat as gt,RedIntegerFormat as ft,RGFormat as xt,RGIntegerFormat as bt,RGBAIntegerFormat as Tt,RGB_S3TC_DXT1_Format as _t,RGBA_S3TC_DXT1_Format as yt,RGBA_S3TC_DXT3_Format as Nt,RGBA_S3TC_DXT5_Format as vt,RGB_PVRTC_4BPPV1_Format as St,RGB_PVRTC_2BPPV1_Format as At,RGBA_PVRTC_4BPPV1_Format as Rt,RGBA_PVRTC_2BPPV1_Format as Ct,RGB_ETC1_Format as Et,RGB_ETC2_Format as wt,RGBA_ETC2_EAC_Format as Mt,RGBA_ASTC_4x4_Format as Ot,RGBA_ASTC_5x4_Format as Ft,RGBA_ASTC_5x5_Format as Bt,RGBA_ASTC_6x5_Format as Ut,RGBA_ASTC_6x6_Format as It,RGBA_ASTC_8x5_Format as Lt,RGBA_ASTC_8x6_Format as Dt,RGBA_ASTC_8x8_Format as Pt,RGBA_ASTC_10x5_Format as Gt,RGBA_ASTC_10x6_Format as kt,RGBA_ASTC_10x8_Format as Vt,RGBA_ASTC_10x10_Format as zt,RGBA_ASTC_12x10_Format as $t,RGBA_ASTC_12x12_Format as Ht,RGBA_BPTC_Format as Wt,RED_RGTC1_Format as jt,SIGNED_RED_RGTC1_Format as qt,RED_GREEN_RGTC2_Format as Xt,SIGNED_RED_GREEN_RGTC2_Format as Yt,RepeatWrapping as Kt,ClampToEdgeWrapping as Qt,MirroredRepeatWrapping as Zt,NearestMipmapLinearFilter as Jt,LinearMipmapNearestFilter as es,NeverCompare as ts,AlwaysCompare as ss,LessEqualCompare as rs,EqualCompare as ns,GreaterEqualCompare as is,GreaterCompare as os,NotEqualCompare as as,WebGLCoordinateSystem as us,Texture as ls,CubeTexture as cs,NotEqualStencilFunc as ds,GreaterStencilFunc as hs,GreaterEqualStencilFunc as ps,EqualStencilFunc as ms,LessEqualStencilFunc as gs,LessStencilFunc as fs,AlwaysStencilFunc as xs,NeverStencilFunc as bs,DecrementWrapStencilOp as Ts,IncrementWrapStencilOp as _s,DecrementStencilOp as ys,IncrementStencilOp as Ns,InvertStencilOp as vs,ReplaceStencilOp as Ss,ZeroStencilOp as As,KeepStencilOp as Rs,MaxEquation as Cs,MinEquation as Es}from"three";void 0===window.GPUShaderStage&&(window.GPUShaderStage={VERTEX:1,FRAGMENT:2,COMPUTE:4});let ws=!1;if(void 0!==navigator.gpu){null!==await navigator.gpu.requestAdapter()&&(ws=!0)}class Ms{static isAvailable(){return ws}static getErrorMessage(){const e=document.createElement("div");return e.id="webgpumessage",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.maxWidth="400px",e.style.margin="5em auto 0",e.innerHTML='Your browser does not support <a href="https://gpuweb.github.io/gpuweb/" style="color:blue">WebGPU</a> yet',e}}class Os{constructor(e,t){this.nodes=e,this.info=t,this.animationLoop=null,this.requestId=null,this._init()}_init(){const e=(t,s)=>{this.requestId=self.requestAnimationFrame(e),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this.animationLoop&&this.animationLoop(t,s)};e()}dispose(){self.cancelAnimationFrame(this.requestId)}setAnimationLoop(e){this.animationLoop=e}}class Fs{constructor(){this.weakMap=new WeakMap}get(e){if(Array.isArray(e)){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return;return t.get(e[e.length-1])}return super.get(e)}set(e,t){if(Array.isArray(e)){let s=this.weakMap;for(let t=0;t<e.length;t++){const r=e[t];!1===s.has(r)&&s.set(r,new WeakMap),s=s.get(r)}return s.set(e[e.length-1],t)}return super.set(e,t)}delete(e){if(Array.isArray(e)){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return!1;return t.delete(e[e.length-1])}return super.delete(e)}dispose(){this.weakMap.clear()}}let Bs=0;class Us{constructor(e,t,s,r,n,i,o,a,u){this._nodes=e,this._geometries=t,this.id=Bs++,this.renderer=s,this.object=r,this.material=n,this.scene=i,this.camera=o,this.lightsNode=a,this.context=u,this.geometry=r.geometry,this.version=n.version,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.initialNodesCacheKey=this.getNodesCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],r=new Set;for(const n of e){const e=n.node&&n.node.attribute?n.node.attribute:t.getAttribute(n.name);s.push(e);const i=e.isInterleavedBufferAttribute?e.data:e;r.add(i)}return this.attributes=s,this.vertexBuffers=Array.from(r.values()),s}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getMaterialCacheKey(){const{object:e,material:t}=this;let s=t.customProgramCacheKey();for(const e in t){if(/^(is[A-Z])|^(visible|version|uuid|name|opacity|userData)$/.test(e))continue;let r=t[e];if(null!==r){const e=typeof r;"number"===e?r=0!==r?"1":"0":"object"===e&&(r="{}")}s+=r+","}return e.morphTargetInfluences&&(s+=e.morphTargetInfluences.length+","),s}get needsUpdate(){return this.initialNodesCacheKey!==this.getNodesCacheKey()}getNodesCacheKey(){return this._nodes.getCacheKey(this.scene,this.lightsNode)}getCacheKey(){return this.getMaterialCacheKey()+","+this.getNodesCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}class Is{constructor(e,t,s,r,n,i){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=r,this.bindings=n,this.info=i,this.chainMaps={}}get(e,t,s,r,n,i,o){const a=this.getChainMap(o),u=[e,t,i,n];let l=a.get(u);return void 0===l?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,r,n,i,o),a.set(u,l)):(l.version!==t.version||l.needsUpdate)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(e,t,s,r,n,i,o)):l.version=t.version),l}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Fs)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,r,n,i,o,a,u,l){const c=this.getChainMap(l),d=new Us(e,t,s,r,n,i,o,a,u);return d.onDispose=()=>{this.pipelines.delete(d),this.bindings.delete(d),this.nodes.delete(d),c.delete(d.getChainArray())},d}}class Ls{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data.clear()}}const Ds=1,Ps=2,Gs=4,ks=16;class Vs extends Ls{constructor(e){super(),this.backend=e}delete(e){void 0!==super.delete(e)&&this.backend.destroyAttribute(e)}update(t,s){const r=this.get(t);if(void 0===r.version)s===Ds?this.backend.createAttribute(t):s===Ps?this.backend.createIndexAttribute(t):s===Gs&&this.backend.createStorageAttribute(t),r.version=this._getBufferAttribute(t).version;else{const s=this._getBufferAttribute(t);(r.version<s.version||s.usage===e)&&(this.backend.updateAttribute(t),r.version=s.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function zs(e){return null!==e.index?e.index.version:e.attributes.position.version}function $s(e){const r=[],n=e.index,i=e.attributes.position;if(null!==n){const e=n.array;for(let t=0,s=e.length;t<s;t+=3){const s=e[t+0],n=e[t+1],i=e[t+2];r.push(s,n,n,i,i,s)}}else{for(let e=0,t=i.array.length/3-1;e<t;e+=3){const t=e+0,s=e+1,n=e+2;r.push(t,s,s,n,n,t)}}const o=new(function(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}(r)?t:s)(r,1);return o.version=zs(e),o}class Hs extends Ls{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const r=t.index,n=e.getAttributes();null!==r&&this.attributes.delete(r);for(const e of n)this.attributes.delete(e);const i=this.wireframes.get(t);void 0!==i&&this.attributes.delete(i),t.removeEventListener("dispose",s)};t.addEventListener("dispose",s)}updateAttributes(e){const t=e.getAttributes();for(const e of t)this.updateAttribute(e,Ds);const s=this.getIndex(e);null!==s&&this.updateAttribute(s,Ps)}updateAttribute(e,t){const s=this.info.render.calls;this.attributeCall.get(e)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e,s))}getIndex(e){const{geometry:t,material:s}=e;let r=t.index;if(!0===s.wireframe){const e=this.wireframes;let s=e.get(t);void 0===s?(s=$s(t),e.set(t,s)):s.version!==zs(t)&&(this.attributes.delete(s),s=$s(t),e.set(t,s)),r=s}return r}}class Ws{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,drawCalls:0,triangles:0,points:0,lines:0},this.compute={calls:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine&&(this.render.lines+=s*(t-1))}reset(){this.render.drawCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.memory.geometries=0,this.memory.textures=0}}class js{constructor(e){this.cacheKey=e,this.usedTimes=0}}class qs extends js{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class Xs extends js{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let Ys=0;class Ks{constructor(e,t){this.id=Ys++,this.code=e,this.stage=t,this.usedTimes=0}}class Qs extends Ls{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,r=this.get(e);if(this._needsComputeUpdate(e)){const n=r.pipeline;n&&(n.usedTimes--,n.computeProgram.usedTimes--);const i=this.nodes.getForCompute(e);let o=this.programs.compute.get(i.computeShader);void 0===o&&(n&&0===n.computeProgram.usedTimes&&this._releaseProgram(n.computeProgram),o=new Ks(i.computeShader,"compute"),this.programs.compute.set(i.computeShader,o),s.createProgram(o));const a=this._getComputeCacheKey(e,o);let u=this.caches.get(a);void 0===u&&(n&&0===n.usedTimes&&this._releasePipeline(e),u=this._getComputePipeline(e,o,a,t)),u.usedTimes++,o.usedTimes++,r.version=e.version,r.pipeline=u}return r.pipeline}getForRender(e){const{backend:t}=this,s=this.get(e);if(this._needsRenderUpdate(e)){const r=s.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const n=e.getNodeBuilderState();let i=this.programs.vertex.get(n.vertexShader);void 0===i&&(r&&0===r.vertexProgram.usedTimes&&this._releaseProgram(r.vertexProgram),i=new Ks(n.vertexShader,"vertex"),this.programs.vertex.set(n.vertexShader,i),t.createProgram(i));let o=this.programs.fragment.get(n.fragmentShader);void 0===o&&(r&&0===r.fragmentProgram.usedTimes&&this._releaseProgram(r.fragmentProgram),o=new Ks(n.fragmentShader,"fragment"),this.programs.fragment.set(n.fragmentShader,o),t.createProgram(o));const a=this._getRenderCacheKey(e,i,o);let u=this.caches.get(a);void 0===u?(r&&0===r.usedTimes&&this._releasePipeline(r),u=this._getRenderPipeline(e,i,o,a)):e.pipeline=u,u.usedTimes++,i.usedTimes++,o.usedTimes++,s.pipeline=u}return s.pipeline}delete(e){const t=this.get(e).pipeline;t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,r){s=s||this._getComputeCacheKey(e,t);let n=this.caches.get(s);return void 0===n&&(n=new Xs(s,t),this.caches.set(s,n),this.backend.createComputePipeline(n,r)),n}_getRenderPipeline(e,t,s,r){r=r||this._getRenderCacheKey(e,t,s);let n=this.caches.get(r);return void 0===n&&(n=new qs(r,t,s),this.caches.set(r,n),e.pipeline=n,this.backend.createRenderPipeline(e)),n}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,s){return t.id+","+s.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){return void 0===this.get(e).pipeline||this.backend.needsRenderUpdate(e)}}class Zs extends Ls{constructor(e,t,s,r,n,i){super(),this.backend=e,this.textures=s,this.pipelines=n,this.attributes=r,this.nodes=t,this.info=i,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings(),s=this.get(e);return s.bindings!==t&&(s.bindings=t,this._init(t),this.backend.createBindings(t)),s.bindings}getForCompute(e){const t=this.get(e);if(void 0===t.bindings){const s=this.nodes.getForCompute(e).bindings.compute;t.bindings=s,this._init(s),this.backend.createBindings(s)}return t.bindings}updateForCompute(e){this._update(e,this.getForCompute(e))}updateForRender(e){this._update(e,this.getForRender(e))}_init(e){for(const t of e)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute;this.attributes.update(e,Gs)}}_update(e,t){const{backend:s}=this;let r=!1;for(const e of t){if(e.isNodeUniformsGroup){if(!this.nodes.updateGroup(e))continue}if(e.isUniformBuffer){e.update()&&s.updateBinding(e)}else if(e.isSampledTexture){e.needsBindingsUpdate&&(r=!0);e.update()&&this.textures.updateTexture(e.texture)}}if(!0===r){const s=this.pipelines.getForRender(e);this.backend.updateBindings(t,s)}}}const Js={VERTEX:"vertex",FRAGMENT:"fragment"},er={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},tr={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX3:"mat3",MATRIX4:"mat4"},sr=["fragment","vertex"],rr=["setup","analyze","generate"],nr=[...sr,"compute"],ir=["x","y","z","w"];function or(e){let t="{";!0===e.isNode&&(t+=e.id);for(const{property:s,childNode:r}of ar(e))t+=","+s.slice(0,-4)+":"+r.getCacheKey();return t+="}",t}function*ar(e,t=!1){for(const s in e){if(!0===s.startsWith("_"))continue;const r=e[s];if(!0===Array.isArray(r))for(let e=0;e<r.length;e++){const n=r[e];n&&(!0===n.isNode||t&&"function"==typeof n.toJSON)&&(yield{property:s,index:e,childNode:n})}else if(r&&!0===r.isNode)yield{property:s,childNode:r};else if("object"==typeof r)for(const e in r){const n=r[e];n&&(!0===n.isNode||t&&"function"==typeof n.toJSON)&&(yield{property:s,index:e,childNode:n})}}}function ur(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function lr(e,...t){const s=e?e.slice(-4):void 0;return 1===t.length&&("vec2"===s?t=[t[0],t[0]]:"vec3"===s?t=[t[0],t[0],t[0]]:"vec4"===s&&(t=[t[0],t[0],t[0],t[0]])),"color"===e?new r(...t):"vec2"===s?new n(...t):"vec3"===s?new i(...t):"vec4"===s?new o(...t):"mat3"===s?new a(...t):"mat4"===s?new u(...t):"bool"===e?t[0]||!1:"float"===e||"int"===e||"uint"===e?t[0]||0:"string"===e?t[0]||"":"ArrayBuffer"===e?dr(t[0]):null}function cr(e){let t="";const s=new Uint8Array(e);for(let e=0;e<s.length;e++)t+=String.fromCharCode(s[e]);return btoa(t)}function dr(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0))).buffer}var hr=Object.freeze({__proto__:null,getCacheKey:or,getNodeChildren:ar,getValueType:ur,getValueFromType:lr,arrayBufferToBase64:cr,base64ToArrayBuffer:dr});const pr=new Map;let mr=0;class gr extends l{constructor(e=null){super(),this.nodeType=e,this.updateType=er.NONE,this.updateBeforeType=er.NONE,this.uuid=c.generateUUID(),this.isNode=!0,Object.defineProperty(this,"id",{value:mr++})}get type(){return this.constructor.type}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return!1}*getChildren(){for(const{childNode:e}of ar(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(){return or(this)}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);for(const e of this.getChildren())t["_node"+e.id]=e;return null}construct(e){return this.setup(e)}analyze(e){const t=e.getDataFromNode(this);if(t.dependenciesCount=void 0===t.dependenciesCount?1:t.dependenciesCount+1,1===t.dependenciesCount){const t=e.getNodeProperties(this);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&!0===s.isNode)return s.build(e,t)}updateBefore(){}update(){}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);e.addNode(this),e.addChain(this);let r=null;const n=e.getBuildStage();if("setup"===n){const t=e.getNodeProperties(this);if(!0!==t.initialized||!1===e.context.tempRead){const s=e.stack.nodes.length;t.initialized=!0,t.outputNode=this.setup(e),null!==t.outputNode&&e.stack.nodes.length!==s&&(t.outputNode=e.stack);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}else if("analyze"===n)this.analyze(e);else if("generate"===n){if(1===this.generate.length){const s=this.getNodeType(e),n=e.getDataFromNode(this);r=n.snippet,void 0===r&&(r=this.generate(e)||"",n.snippet=r),r=e.format(r,s,t)}else r=this.generate(e,t)||""}return e.removeChain(this),r}getSerializeChildren(){return ar(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:r,index:n,childNode:i}of t)void 0!==n?(void 0===s[r]&&(s[r]=Number.isInteger(n)?[]:{}),s[r][n]=i.toJSON(e.meta).uuid):s[r]=i.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const r=[];for(const n of e.inputNodes[s])r.push(t[n]);this[s]=r}else if("object"==typeof e.inputNodes[s]){const r={};for(const n in e.inputNodes[s]){const i=e.inputNodes[s][n];r[n]=t[i]}this[s]=r}else{const r=e.inputNodes[s];this[s]=t[r]}}}toJSON(e){const{uuid:t,type:s}=this,r=void 0===e||"string"==typeof e;r&&(e={textures:{},images:{},nodes:{}});let n=e.nodes[t];function i(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(void 0===n&&(n={uuid:t,type:s,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==r&&(e.nodes[n.uuid]=n),this.serialize(n),delete n.meta),r){const t=i(e.textures),s=i(e.images),r=i(e.nodes);t.length>0&&(n.textures=t),s.length>0&&(n.images=s),r.length>0&&(n.nodes=r)}return n}}function fr(e,t){if("function"!=typeof t||!e)throw new Error(`Node class ${e} is not a class`);if(pr.has(e))throw new Error(`Redefinition of node class ${e}`);pr.set(e,t),t.type=e}function xr(e){const t=pr.get(e);if(void 0!==t)return new t}class br extends gr{constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?ur(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=ur(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=cr(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?lr(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){}}fr("InputNode",br);class Tr extends gr{constructor(e,t=!1){super("string"),this.name=e,this.version=0,this.shared=t,this.isUniformGroup=!0}set needsUpdate(e){!0===e&&this.version++}}const _r=e=>new Tr(e),yr=e=>new Tr(e,!0),Nr=yr("frame"),vr=yr("render"),Sr=_r("object");fr("UniformGroupNode",Tr);class Ar extends gr{constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getNodeType(e)}generate(e){return`${this.node.build(e)}[ ${this.indexNode.build(e,"uint")} ]`}}fr("ArrayElementNode",Ar);class Rr extends gr{constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const r of this.convertTo.split("|"))null!==s&&e.getTypeLength(t)!==e.getTypeLength(r)||(s=r);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,r=this.getNodeType(e),n=s.build(e,r);return e.format(n,r,t)}}fr("ConvertNode",Rr);class Cr extends gr{constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).dependenciesCount>1}build(e,t){if("generate"===e.getBuildStage()){const s=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(!1!==e.context.tempRead&&void 0!==r.propertyName)return e.format(r.propertyName,s,t);if(!1!==e.context.tempWrite&&"void"!==s&&"void"!==t&&this.hasDependencies(e)){const n=super.build(e,s),i=e.getVarFromNode(this,null,s),o=e.getPropertyName(i);return e.addLineFlowCode(`${o} = ${n}`),r.snippet=n,r.propertyName=o,e.format(r.propertyName,s,t)}}return super.build(e,t)}}fr("TempNode",Cr);class Er extends Cr{constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce(((t,s)=>t+e.getTypeLength(s.getNodeType(e))),0))}generate(e,t){const s=this.getNodeType(e),r=this.nodes,n=e.getPrimitiveType(s),i=[];for(const t of r){let s=t.build(e);const r=e.getPrimitiveType(t.getNodeType(e));r!==n&&(s=e.format(s,r,n)),i.push(s)}const o=`${e.getType(s)}( ${i.join(", ")} )`;return e.format(o,s,t)}}fr("JoinNode",Er);const wr=ir.join("");class Mr extends gr{constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(ir.indexOf(t)+1,e);return e}getNodeType(e){return e.getTypeFromLength(this.components.length)}generate(e,t){const s=this.node,r=e.getTypeLength(s.getNodeType(e));let n=null;if(r>1){let i=null;this.getVectorLength()>=r&&(i=e.getTypeFromLength(this.getVectorLength()));const o=s.build(e,i);n=this.components.length===r&&this.components===wr.slice(0,this.components.length)?e.format(o,i,t):e.format(`${o}.${this.components}`,this.getNodeType(e),t)}else n=s.build(e,t);return n}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}fr("SplitNode",Mr);class Or extends Cr{constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:r}=this,n=this.getNodeType(e),i=e.getTypeFromLength(s.length),o=r.build(e,i),a=t.build(e,n),u=e.getTypeLength(n),l=[];for(let e=0;e<u;e++){const t=ir[e];t===s[0]?(l.push(o),e+=s.length-1):l.push(a+"."+t)}return`${e.getType(n)}( ${l.join(", ")} )`}}fr("SetNode",Or);class Fr extends br{constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return e.format(this.generateConst(e),s,t)}}fr("ConstNode",Fr);let Br=null;const Ur=new Map;function Ir(e,t){if(Ur.has(e))throw new Error(`Redefinition of node element ${e}`);if("function"!=typeof t)throw new Error(`Node element ${e} is not a function`);Ur.set(e,t)}const Lr=e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Dr={setup(e,t){const s=t.shift();return e(un(s),...t)},get(e,t,s){if("string"==typeof t&&void 0===e[t]){if(!0!==e.isStackNode&&"assign"===t)return(...e)=>Br.assign(s,...e);if(Ur.has(t)){const r=Ur.get(t);return e.isStackNode?(...e)=>s.add(r(...e)):(...e)=>r(s,...e)}if("self"===t)return e;if(t.endsWith("Assign")&&Ur.has(t.slice(0,t.length-6))){const r=Ur.get(t.slice(0,t.length-6));return e.isStackNode?(...e)=>s.assign(e[0],r(...e)):(...e)=>s.assign(r(s,...e))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=Lr(t),an(new Mr(s,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=(t=Lr(t.slice(3).toLowerCase())).split("").sort().join(""),s=>an(new Or(e,t,s));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),an(new Mr(e,t));if(!0===/^\d+$/.test(t))return an(new Ar(s,new Fr(Number(t),"uint")))}return Reflect.get(e,t,s)},set:(e,t,s,r)=>"string"!=typeof t||void 0!==e[t]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(t)&&"width"!==t&&"height"!==t&&"depth"!==t&&!0!==/^\d+$/.test(t)?Reflect.set(e,t,s,r):(r[t].assign(s),!0)},Pr=new WeakMap,Gr=new WeakMap,kr=function(e,t=null){for(const s in e)e[s]=an(e[s],t);return e},Vr=function(e,t=null){const s=e.length;for(let r=0;r<s;r++)e[r]=an(e[r],t);return e},zr=function(e,t=null,s=null,r=null){const n=e=>an(null!==r?Object.assign(e,r):e);return null===t?(...t)=>n(new e(...ln(t))):null!==s?(s=an(s),(...r)=>n(new e(t,...ln(r),s))):(...s)=>n(new e(t,...ln(s)))},$r=function(e,...t){return an(new e(...ln(t)))};class Hr extends gr{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){const{outputNode:t}=e.getNodeProperties(this);return t?t.getNodeType(e):super.getNodeType(e)}call(e){const{shaderNode:t,inputNodes:s}=this;if(t.layout){let r=Gr.get(e.constructor);void 0===r&&(r=new WeakMap,Gr.set(e.constructor,r));let n=r.get(t);return void 0===n&&(n=an(e.buildFunctionNode(t)),r.set(t,n)),an(n.call(s))}const r=t.jsFunc,n=null!==s?r(s,e.stack,e):r(e.stack,e);return an(n)}setup(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);return null===s?this.call(e).build(e,t):super.generate(e,t)}}class Wr extends gr{constructor(e){super(),this.jsFunc=e,this.layout=null}get isArrayInput(){return/^\(\s+?\[/.test(this.jsFunc.toString())}setLayout(e){return this.layout=e,this}call(e=null){return un(e),an(new Hr(this,e))}setup(){return this.call()}}const jr=[!1,!0],qr=[0,1,2,3],Xr=[-1,-2],Yr=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],Kr=new Map;for(const e of jr)Kr.set(e,new Fr(e));const Qr=new Map;for(const e of qr)Qr.set(e,new Fr(e,"uint"));const Zr=new Map([...Qr].map((e=>new Fr(e.value,"int"))));for(const e of Xr)Zr.set(e,new Fr(e,"int"));const Jr=new Map([...Zr].map((e=>new Fr(e.value))));for(const e of Yr)Jr.set(e,new Fr(e));for(const e of Yr)Jr.set(-e,new Fr(-e));const en={bool:Kr,uint:Qr,ints:Zr,float:Jr},tn=new Map([...Kr,...Jr]),sn=(e,t)=>tn.has(e)?tn.get(e):!0===e.isNode?e:new Fr(e,t),rn=function(e,t=null){return(...s)=>{if((0===s.length||!["bool","float","int","uint"].includes(e)&&s.every((e=>"object"!=typeof e)))&&(s=[lr(e,...s)]),1===s.length&&null!==t&&t.has(s[0]))return an(t.get(s[0]));if(1===s.length){const t=sn(s[0],e);return(e=>{try{return e.getNodeType()}catch(e){return}})(t)===e?an(t):an(new Rr(t,e))}const r=s.map((e=>sn(e)));return an(new Er(r,e))}},nn=e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null;function on(e){return new Proxy(new Wr(e),Dr)}const an=(e,t=null)=>function(e,t=null){const s=ur(e);if("node"===s){let t=Pr.get(e);return void 0===t&&(t=new Proxy(e,Dr),Pr.set(e,t),Pr.set(t,t)),t}return null===t&&("float"===s||"boolean"===s)||s&&"shader"!==s&&"string"!==s?an(sn(e,t)):"shader"===s?pn(e):e}(e,t),un=(e,t=null)=>new kr(e,t),ln=(e,t=null)=>new Vr(e,t),cn=(...e)=>new zr(...e),dn=(...e)=>new $r(...e),hn=e=>new on(e),pn=e=>{const t=new on(e),s=(...e)=>{let s;return un(e),s=e[0]&&e[0].isNode?[...e]:e[0],t.call(s)};return s.shaderNode=t,s.setLayout=e=>(t.setLayout(e),s),s};fr("ShaderNode",on);const mn=e=>Br=e,gn=()=>Br,fn=(...e)=>Br.if(...e);function xn(e){return Br&&Br.add(e),e}Ir("append",xn);const bn=new rn("color"),Tn=new rn("float",en.float),_n=new rn("int",en.int),yn=new rn("uint",en.uint),Nn=new rn("bool",en.bool),vn=new rn("vec2"),Sn=new rn("ivec2"),An=new rn("uvec2"),Rn=new rn("bvec2"),Cn=new rn("vec3"),En=new rn("ivec3"),wn=new rn("uvec3"),Mn=new rn("bvec3"),On=new rn("vec4"),Fn=new rn("ivec4"),Bn=new rn("uvec4"),Un=new rn("bvec4"),In=new rn("mat3"),Ln=new rn("imat3"),Dn=new rn("umat3"),Pn=new rn("bmat3"),Gn=new rn("mat4"),kn=new rn("imat4"),Vn=new rn("umat4"),zn=new rn("bmat4"),$n=(e="")=>an(new Fr(e,"string")),Hn=e=>an(new Fr(e,"ArrayBuffer"));Ir("color",bn),Ir("float",Tn),Ir("int",_n),Ir("uint",yn),Ir("bool",Nn),Ir("vec2",vn),Ir("ivec2",Sn),Ir("uvec2",An),Ir("bvec2",Rn),Ir("vec3",Cn),Ir("ivec3",En),Ir("uvec3",wn),Ir("bvec3",Mn),Ir("vec4",On),Ir("ivec4",Fn),Ir("uvec4",Bn),Ir("bvec4",Un),Ir("mat3",In),Ir("imat3",Ln),Ir("umat3",Dn),Ir("bmat3",Pn),Ir("mat4",Gn),Ir("imat4",kn),Ir("umat4",Vn),Ir("bmat4",zn),Ir("string",$n),Ir("arrayBuffer",Hn);const Wn=cn(Ar),jn=(e,t)=>an(new Rr(an(e),t)),qn=(e,t)=>an(new Mr(an(e),t));Ir("element",Wn),Ir("convert",jn);class Xn extends br{constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.groupNode=Sr}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}generate(e,t){const s=this.getNodeType(e),r=this.getUniformHash(e);let n=e.getNodeFromHash(r);void 0===n&&(e.setHashNode(this,r),n=this);const i=n.getInputType(e),o=e.getUniformFromNode(n,i,e.shaderStage,e.context.label),a=e.getPropertyName(o);return void 0!==e.context.label&&delete e.context.label,e.format(a,s,t)}}const Yn=(e,t)=>{const s=nn(t||e),r=e&&!0===e.isNode?e.node&&e.node.value||e.value:e;return an(new Xn(r,s))};fr("UniformNode",Xn);class Kn extends Xn{constructor(e=[]){super(),this.isArrayUniformNode=!0,this.nodes=e}getNodeType(e){return this.nodes[0].getNodeType(e)}}fr("ArrayUniformNode",Kn);class Qn extends Cr{constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return"void"!==t?this.targetNode.getNodeType(e):"void"}generate(e,t){const s=this.targetNode,r=this.sourceNode,n=s.getNodeType(e),i=s.build(e),o=`${i} = ${r.build(e,n)}`;if("void"!==t){return"void"===r.getNodeType(e)?(e.addLineFlowCode(o),i):e.format(o,n,t)}e.addLineFlowCode(o)}}const Zn=cn(Qn);fr("AssignNode",Qn),Ir("assign",Zn);class Jn extends gr{constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{name:t,node:s}=this,r=this.getNodeType(e),n=e.getVaryingFromNode(this,t,r);n.needsInterpolation||(n.needsInterpolation="fragment"===e.shaderStage);const i=e.getPropertyName(n,Js.VERTEX);return e.flowNodeFromShaderStage(Js.VERTEX,s,r,i),e.getPropertyName(n)}}const ei=cn(Jn);Ir("varying",ei),fr("VaryingNode",Jn);class ti extends gr{constructor(e,t=null){super(t),this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=super.getNodeType(e);if(null===t){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const r=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(r)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const r=e.geometry.getAttribute(t),n=e.getTypeFromAttribute(r),i=e.getAttribute(t,n);if("vertex"===e.shaderStage)return e.format(i.name,n,s);return ei(this).build(e,s)}return e.generateConst(s)}}const si=(e,t)=>an(new ti(e,t));fr("AttributeNode",ti);class ri extends gr{constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t),this.outputNode.build(e)}}const ni=cn(ri);Ir("bypass",ni),fr("BypassNode",ri);let ii=0;class oi{constructor(){this.id=ii++,this.nodesData=new WeakMap}getNodeData(e){return this.nodesData.get(e)}setNodeData(e,t){this.nodesData.set(e,t)}}class ai extends gr{constructor(e,t=new oi){super(),this.isCacheNode=!0,this.node=e,this.cache=t}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const s=e.getCache();e.setCache(this.cache);const r=this.node.build(e,...t);return e.setCache(s),r}}const ui=cn(ai);Ir("cache",ui),fr("CacheNode",ai);class li extends gr{constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.context=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.context});const s=this.node.build(e);return e.setContext(t),s}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.context});const r=this.node.build(e,t);return e.setContext(s),r}}const ci=cn(li),di=(e,t)=>ci(e,{label:t});Ir("context",ci),Ir("label",di),fr("ContextNode",li);class hi extends gr{constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let r,n;if(s===hi.VERTEX)r=e.getVertexIndex();else{if(s!==hi.INSTANCE)throw new Error("THREE.IndexNode: Unknown scope: "+s);r=e.getInstanceIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)n=r;else{n=ei(this).build(e,t)}return n}}hi.VERTEX="vertex",hi.INSTANCE="instance";const pi=dn(hi,hi.VERTEX),mi=dn(hi,hi.INSTANCE);fr("IndexNode",hi);class gi{start(){}finish(){}direct(){}indirectDiffuse(){}indirectSpecular(){}ambientOcclusion(){}}class fi extends gr{constructor(e,t=null){super(),this.node=e,this.name=t}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:s}=this,r=e.getVarFromNode(this,s,e.getVectorType(this.getNodeType(e))),n=e.getPropertyName(r),i=t.build(e,r.type);return e.addLineFlowCode(`${n} = ${i}`),n}}const xi=cn(fi);Ir("temp",xi),Ir("toVar",((...e)=>xi(...e).append())),fr("VarNode",fi);class bi{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class Ti{constructor(e,t,s,r=void 0){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s.getSelf(),this.needsUpdate=r}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class _i{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class yi extends _i{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class Ni{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}class vi{constructor(){this.keywords=[],this.nodes=[],this.keywordsCallback={}}getNode(e){let t=this.nodes[e];return void 0===t&&void 0!==this.keywordsCallback[e]&&(t=this.keywordsCallback[e](e),this.nodes[e]=t),t}addKeyword(e,t){return this.keywords.push(e),this.keywordsCallback[e]=t,this}parse(e){const t=this.keywords,s=new RegExp(`\\b${t.join("\\b|\\b")}\\b`,"g"),r=e.match(s),n=[];if(null!==r)for(const e of r){const t=this.getNode(e);void 0!==t&&-1===n.indexOf(t)&&n.push(t)}return n}include(e,t){const s=this.parse(t);for(const t of s)t.build(e)}}class Si extends gr{constructor(e,t=null,s=!1){super(e),this.name=t,this.varying=s,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return!0===this.varying?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const Ai=(e,t)=>an(new Si(e,t)),Ri=(e,t)=>an(new Si(e,t,!0)),Ci=dn(Si,"vec4","DiffuseColor"),Ei=dn(Si,"float","Roughness"),wi=dn(Si,"float","Metalness"),Mi=dn(Si,"float","Clearcoat"),Oi=dn(Si,"float","ClearcoatRoughness"),Fi=dn(Si,"vec3","Sheen"),Bi=dn(Si,"float","SheenRoughness"),Ui=dn(Si,"float","Iridescence"),Ii=dn(Si,"float","IridescenceIOR"),Li=dn(Si,"float","IridescenceThickness"),Di=dn(Si,"color","SpecularColor"),Pi=dn(Si,"float","Shininess"),Gi=dn(Si,"vec4","Output"),ki=dn(Si,"float","dashSize"),Vi=dn(Si,"float","gapSize"),zi=dn(Si,"float","pointWidth");fr("PropertyNode",Si);class $i extends Si{constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const Hi=(e,t)=>an(new $i(e,t));fr("ParameterNode",$i);class Wi extends ti{constructor(e=0){super(null,"vec2"),this.isUVNode=!0,this.index=e}getAttributeName(){const e=this.index;return"uv"+(e>0?e:"")}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const ji=(...e)=>an(new Wi(...e));fr("UVNode",Wi);class qi extends gr{constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),r=this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${r} )`,this.getNodeType(e),t)}}const Xi=cn(qi);Ir("textureSize",Xi),fr("TextureSizeNode",qi);class Yi extends Cr{constructor(e,t,s,...r){if(super(),this.op=e,r.length>0){let t=s;for(let s=0;s<r.length;s++)t=new Yi(e,t,r[s]);s=t}this.aNode=t,this.bNode=s}getNodeType(e,t){const s=this.op,r=this.aNode,n=this.bNode,i=r.getNodeType(e),o=n.getNodeType(e);if("void"===i||"void"===o)return"void";if("%"===s)return i;if("&"===s||"|"===s||"^"===s||">>"===s||"<<"===s)return e.getIntegerType(i);if("=="===s||"&&"===s||"||"===s||"^^"===s)return"bool";if("<"===s||">"===s||"<="===s||">="===s){const s=t?e.getTypeLength(t):Math.max(e.getTypeLength(i),e.getTypeLength(o));return s>1?`bvec${s}`:"bool"}return"float"===i&&e.isMatrix(o)?o:e.isMatrix(i)&&e.isVector(o)?e.getVectorFromMatrix(i):e.isVector(i)&&e.isMatrix(o)?e.getVectorFromMatrix(o):e.getTypeLength(o)>e.getTypeLength(i)?o:i}generate(e,t){const s=this.op,r=this.aNode,n=this.bNode,i=this.getNodeType(e,t);let o=null,a=null;"void"!==i?(o=r.getNodeType(e),a=n.getNodeType(e),"<"===s||">"===s||"<="===s||">="===s||"=="===s?e.isVector(o)?a=o:o=a="float":">>"===s||"<<"===s?(o=i,a=e.changeComponentType(a,"uint")):e.isMatrix(o)&&e.isVector(a)?a=e.getVectorFromMatrix(o):o=e.isVector(o)&&e.isMatrix(a)?e.getVectorFromMatrix(a):a=i):o=a=i;const u=r.build(e,o),l=n.build(e,a),c=e.getTypeLength(t);return"void"!==t?"<"===s&&c>1?e.format(`${e.getMethod("lessThan")}( ${u}, ${l} )`,i,t):"<="===s&&c>1?e.format(`${e.getMethod("lessThanEqual")}( ${u}, ${l} )`,i,t):">"===s&&c>1?e.format(`${e.getMethod("greaterThan")}( ${u}, ${l} )`,i,t):">="===s&&c>1?e.format(`${e.getMethod("greaterThanEqual")}( ${u}, ${l} )`,i,t):e.format(`( ${u} ${this.op} ${l} )`,i,t):"void"!==o?e.format(`${u} ${this.op} ${l}`,i,t):void 0}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Ki=cn(Yi,"+"),Qi=cn(Yi,"-"),Zi=cn(Yi,"*"),Ji=cn(Yi,"/"),eo=cn(Yi,"%"),to=cn(Yi,"=="),so=cn(Yi,"!="),ro=cn(Yi,"<"),no=cn(Yi,">"),io=cn(Yi,"<="),oo=cn(Yi,">="),ao=cn(Yi,"&&"),uo=cn(Yi,"||"),lo=cn(Yi,"^^"),co=cn(Yi,"&"),ho=cn(Yi,"|"),po=cn(Yi,"^"),mo=cn(Yi,"<<"),go=cn(Yi,">>");Ir("add",Ki),Ir("sub",Qi),Ir("mul",Zi),Ir("div",Ji),Ir("remainder",eo),Ir("equal",to),Ir("notEqual",so),Ir("lessThan",ro),Ir("greaterThan",no),Ir("lessThanEqual",io),Ir("greaterThanEqual",oo),Ir("and",ao),Ir("or",uo),Ir("xor",lo),Ir("bitAnd",co),Ir("bitOr",ho),Ir("bitXor",po),Ir("shiftLeft",mo),Ir("shiftRight",go),fr("OperatorNode",Yi);class fo extends Cr{constructor(e,t,s=null,r=null){super(),this.method=e,this.aNode=t,this.bNode=s,this.cNode=r}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,r=this.cNode?this.cNode.getNodeType(e):null,n=e.isMatrix(t)?0:e.getTypeLength(t),i=e.isMatrix(s)?0:e.getTypeLength(s),o=e.isMatrix(r)?0:e.getTypeLength(r);return n>i&&n>o?t:i>o?s:o>n?r:t}getNodeType(e){const t=this.method;return t===fo.LENGTH||t===fo.DISTANCE||t===fo.DOT?"float":t===fo.CROSS?"vec3":this.getInputType(e)}generate(e,t){const s=this.method,r=this.getNodeType(e),n=this.getInputType(e),i=this.aNode,o=this.bNode,a=this.cNode,u=!0===e.renderer.isWebGLRenderer;if(s===fo.TRANSFORM_DIRECTION){let s=i,r=o;e.isMatrix(s.getNodeType(e))?r=On(Cn(r),0):s=On(Cn(s),0);const n=Zi(s,r).xyz;return wo(n).build(e,t)}if(s===fo.NEGATE)return e.format("( - "+i.build(e,n)+" )",r,t);if(s===fo.ONE_MINUS)return Qi(1,i).build(e,t);if(s===fo.RECIPROCAL)return Ji(1,i).build(e,t);if(s===fo.DIFFERENCE)return Do(Qi(i,o)).build(e,t);{const l=[];return s===fo.CROSS?l.push(i.build(e,r),o.build(e,r)):s===fo.STEP?l.push(i.build(e,1===e.getTypeLength(i.getNodeType(e))?"float":n),o.build(e,n)):u&&(s===fo.MIN||s===fo.MAX)||s===fo.MOD?l.push(i.build(e,n),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":n)):s===fo.REFRACT?l.push(i.build(e,n),o.build(e,n),a.build(e,"float")):s===fo.MIX?l.push(i.build(e,n),o.build(e,n),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":n)):(l.push(i.build(e,n)),null!==o&&l.push(o.build(e,n)),null!==a&&l.push(a.build(e,n))),e.format(`${e.getMethod(s)}( ${l.join(", ")} )`,r,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}fo.RADIANS="radians",fo.DEGREES="degrees",fo.EXP="exp",fo.EXP2="exp2",fo.LOG="log",fo.LOG2="log2",fo.SQRT="sqrt",fo.INVERSE_SQRT="inversesqrt",fo.FLOOR="floor",fo.CEIL="ceil",fo.NORMALIZE="normalize",fo.FRACT="fract",fo.SIN="sin",fo.COS="cos",fo.TAN="tan",fo.ASIN="asin",fo.ACOS="acos",fo.ATAN="atan",fo.ABS="abs",fo.SIGN="sign",fo.LENGTH="length",fo.NEGATE="negate",fo.ONE_MINUS="oneMinus",fo.DFDX="dFdx",fo.DFDY="dFdy",fo.ROUND="round",fo.RECIPROCAL="reciprocal",fo.TRUNC="trunc",fo.FWIDTH="fwidth",fo.ATAN2="atan2",fo.MIN="min",fo.MAX="max",fo.MOD="mod",fo.STEP="step",fo.REFLECT="reflect",fo.DISTANCE="distance",fo.DIFFERENCE="difference",fo.DOT="dot",fo.CROSS="cross",fo.POW="pow",fo.TRANSFORM_DIRECTION="transformDirection",fo.MIX="mix",fo.CLAMP="clamp",fo.REFRACT="refract",fo.SMOOTHSTEP="smoothstep",fo.FACEFORWARD="faceforward";const xo=Tn(1e-6),bo=Tn(1e6),To=cn(fo,fo.RADIANS),_o=cn(fo,fo.DEGREES),yo=cn(fo,fo.EXP),No=cn(fo,fo.EXP2),vo=cn(fo,fo.LOG),So=cn(fo,fo.LOG2),Ao=cn(fo,fo.SQRT),Ro=cn(fo,fo.INVERSE_SQRT),Co=cn(fo,fo.FLOOR),Eo=cn(fo,fo.CEIL),wo=cn(fo,fo.NORMALIZE),Mo=cn(fo,fo.FRACT),Oo=cn(fo,fo.SIN),Fo=cn(fo,fo.COS),Bo=cn(fo,fo.TAN),Uo=cn(fo,fo.ASIN),Io=cn(fo,fo.ACOS),Lo=cn(fo,fo.ATAN),Do=cn(fo,fo.ABS),Po=cn(fo,fo.SIGN),Go=cn(fo,fo.LENGTH),ko=cn(fo,fo.NEGATE),Vo=cn(fo,fo.ONE_MINUS),zo=cn(fo,fo.DFDX),$o=cn(fo,fo.DFDY),Ho=cn(fo,fo.ROUND),Wo=cn(fo,fo.RECIPROCAL),jo=cn(fo,fo.TRUNC),qo=cn(fo,fo.FWIDTH),Xo=cn(fo,fo.ATAN2),Yo=cn(fo,fo.MIN),Ko=cn(fo,fo.MAX),Qo=cn(fo,fo.MOD),Zo=cn(fo,fo.STEP),Jo=cn(fo,fo.REFLECT),ea=cn(fo,fo.DISTANCE),ta=cn(fo,fo.DIFFERENCE),sa=cn(fo,fo.DOT),ra=cn(fo,fo.CROSS),na=cn(fo,fo.POW),ia=cn(fo,fo.POW,2),oa=cn(fo,fo.POW,3),aa=cn(fo,fo.POW,4),ua=cn(fo,fo.TRANSFORM_DIRECTION),la=cn(fo,fo.MIX),ca=(e,t=0,s=1)=>an(new fo(fo.CLAMP,an(e),an(t),an(s))),da=e=>ca(e),ha=cn(fo,fo.REFRACT),pa=cn(fo,fo.SMOOTHSTEP),ma=cn(fo,fo.FACEFORWARD);Ir("radians",To),Ir("degrees",_o),Ir("exp",yo),Ir("exp2",No),Ir("log",vo),Ir("log2",So),Ir("sqrt",Ao),Ir("inverseSqrt",Ro),Ir("floor",Co),Ir("ceil",Eo),Ir("normalize",wo),Ir("fract",Mo),Ir("sin",Oo),Ir("cos",Fo),Ir("tan",Bo),Ir("asin",Uo),Ir("acos",Io),Ir("atan",Lo),Ir("abs",Do),Ir("sign",Po),Ir("length",Go),Ir("negate",ko),Ir("oneMinus",Vo),Ir("dFdx",zo),Ir("dFdy",$o),Ir("round",Ho),Ir("reciprocal",Wo),Ir("trunc",jo),Ir("fwidth",qo),Ir("atan2",Xo),Ir("min",Yo),Ir("max",Ko),Ir("mod",Qo),Ir("step",Zo),Ir("reflect",Jo),Ir("distance",ea),Ir("dot",sa),Ir("cross",ra),Ir("pow",na),Ir("pow2",ia),Ir("pow3",oa),Ir("pow4",aa),Ir("transformDirection",ua),Ir("mix",((e,t,s)=>la(t,s,e))),Ir("clamp",ca),Ir("refract",ha),Ir("smoothstep",((e,t,s)=>pa(t,s,e))),Ir("faceForward",ma),Ir("difference",ta),Ir("saturate",da),fr("MathNode",fo);const ga=pn((e=>{const{value:t}=e,{rgb:s}=t,r=s.mul(.9478672986).add(.0521327014).pow(2.4),n=s.mul(.0773993808),i=s.lessThanEqual(.04045),o=la(r,n,i);return On(o,t.a)})),fa=pn((e=>{const{value:t}=e,{rgb:s}=t,r=s.pow(.41666).mul(1.055).sub(.055),n=s.mul(12.92),i=s.lessThanEqual(.0031308),o=la(r,n,i);return On(o,t.a)})),xa=e=>{let t=null;return e===d?t="Linear":e===h&&(t="sRGB"),t},ba=(e,t)=>xa(e)+"To"+xa(t);class Ta extends Cr{constructor(e,t){super("vec4"),this.method=e,this.node=t}setup(){const{method:e,node:t}=this;return e===Ta.LINEAR_TO_LINEAR?t:_a[e]({value:t})}}Ta.LINEAR_TO_LINEAR="LinearToLinear",Ta.LINEAR_TO_sRGB="LinearTosRGB",Ta.sRGB_TO_LINEAR="sRGBToLinear";const _a={[Ta.LINEAR_TO_sRGB]:fa,[Ta.sRGB_TO_LINEAR]:ga},ya=(e,t)=>an(new Ta(ba(d,t),an(e))),Na=(e,t)=>an(new Ta(ba(t,d),an(e))),va=cn(Ta,Ta.LINEAR_TO_sRGB),Sa=cn(Ta,Ta.sRGB_TO_LINEAR);Ir("linearTosRGB",va),Ir("sRGBToLinear",Sa),Ir("linearToColorSpace",ya),Ir("colorSpaceToLinear",Na),fr("ColorSpaceNode",Ta);class Aa extends gr{constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),r=this.snippet;if("void"!==s)return e.format(`( ${r} )`,s,t);e.addLineFlowCode(r)}}const Ra=cn(Aa);fr("ExpressionNode",Aa);class Ca extends Xn{constructor(e){super(0),this.textureNode=e,this.updateType=er.FRAME}get texture(){return this.textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&void 0!==s.width){const{width:e,height:t}=s;this.value=Math.log2(Math.max(e,t))}}}const Ea=cn(Ca);fr("MaxMipLevelNode",Ca);class wa extends Xn{constructor(e,t=null,s=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.compareNode=null,this.depthNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=er.NONE,this.setUpdateMatrix(null===t)}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":"vec4"}getInputType(){return"texture"}getDefaultUV(){return ji(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){const t=this.value;return Yn(t.matrix).mul(Cn(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?er.FRAME:er.NONE,this}setup(e){const t=e.getNodeProperties(this);let s=this.uvNode;null!==s&&!0!==e.context.forceUVContext||!e.context.getUV||(s=e.context.getUV(this)),s||(s=this.getDefaultUV()),!0===this.updateMatrix&&(s=this.getTransformedUV(s));let r=this.levelNode;null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),null!==r&&void 0!==e.context.getTextureLevelAlgorithm&&(r=e.context.getTextureLevelAlgorithm(this,r)),t.uvNode=s,t.levelNode=r,t.compareNode=this.compareNode,t.depthNode=this.depthNode}generateSnippet(e,t,s,r,n,i){const o=this.value;let a;return a=r?e.generateTextureLevel(o,t,s,r,n):i?e.generateTextureCompare(o,t,s,i,n):!1===this.sampler?e.generateTextureLoad(o,t,s,n):e.generateTexture(o,t,s,n),a}generateUV(e,t){const s=this.value;return(e.isFlipY()&&(!0===s.isFramebufferTexture||!0===s.isDepthTexture)||!1===e.isFlipY()&&!0===s.isRenderTargetTexture)&&(t=t.setY(t.y.fract().oneMinus())),t.build(e,!0===this.sampler?"vec2":"ivec2")}generate(e,t){const s=e.getNodeProperties(this),r=this.value;if(!r||!0!==r.isTexture)throw new Error("TextureNode: Need a three.js texture.");const n=super.generate(e,"property");if("sampler"===t)return n+"_sampler";if(e.isReference(t))return n;{const i=e.getDataFromNode(this);let o=i.propertyName;if(void 0===o){const{uvNode:t,levelNode:r,compareNode:a,depthNode:u}=s,l=this.generateUV(e,t),c=r?r.build(e,"float"):null,d=u?u.build(e,"int"):null,h=a?a.build(e,"float"):null,p=e.getVarFromNode(this);o=e.getPropertyName(p);const m=this.generateSnippet(e,n,l,c,d,h);e.addLineFlowCode(`${o} = ${m}`),!1!==e.context.tempWrite&&(i.snippet=m,i.propertyName=o)}let a=o;const u=this.getNodeType(e);return e.needsColorSpaceToLinear(r)&&(a=Na(Ra(a,u),r.colorSpace).setup(e).build(e,u)),e.format(a,u,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=e,an(t)}blur(e){const t=this.clone();return t.levelNode=e.mul(Ea(t)),an(t)}level(e){const t=this.clone();return t.levelNode=e,t}size(e){return Xi(this,e)}compare(e){const t=this.clone();return t.compareNode=an(e),an(t)}depth(e){const t=this.clone();return t.depthNode=an(e),an(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value]}update(){const e=this.value;!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e}}const Ma=cn(wa),Oa=(...e)=>Ma(...e).setSampler(!1),Fa=e=>(!0===e.isNode?e:Ma(e)).convert("sampler");Ir("texture",Ma),fr("TextureNode",wa);class Ba extends gr{constructor(e,t,s=null){super(),this.property=e,this.index=null,this.uniformType=t,this.object=s,this.reference=null,this.node=null,this.updateType=er.OBJECT,this.setNodeType(t)}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setIndex(e){return this.index=e,this}getIndex(){return this.index}setNodeType(e){let t=null;t="texture"===e?Ma(null):Yn(e),this.node=t}getNodeType(e){return this.node.getNodeType(e)}update(){let e=this.reference[this.property];null!==this.index&&(e=e[this.index]),this.node.value=e}setup(){return this.node}}const Ua=(e,t,s)=>an(new Ba(e,t,s)),Ia=(e,t,s,r)=>an(new Ba(e,s,r).setIndex(t));fr("ReferenceNode",Ba);class La extends Ba{constructor(e,t,s=null){super(e,t,s),this.material=s}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}setup(e){const t=null!==this.material?this.material:e.material;return this.node.value=t[this.property],super.setup(e)}}const Da=(e,t,s)=>an(new La(e,t,s));fr("MaterialReferenceNode",La);class Pa extends gr{constructor(e=Pa.VIEW_MATRIX,t=null){super(),this.scope=e,this.object3d=t,this.updateType=er.OBJECT,this._uniformNode=new Xn(null)}getNodeType(){const e=this.scope;return e===Pa.WORLD_MATRIX||e===Pa.VIEW_MATRIX?"mat4":e===Pa.NORMAL_MATRIX?"mat3":e===Pa.POSITION||e===Pa.VIEW_POSITION||e===Pa.DIRECTION||e===Pa.SCALE?"vec3":void 0}update(e){const t=this.object3d,s=this._uniformNode,r=this.scope;if(r===Pa.VIEW_MATRIX)s.value=t.modelViewMatrix;else if(r===Pa.NORMAL_MATRIX)s.value=t.normalMatrix;else if(r===Pa.WORLD_MATRIX)s.value=t.matrixWorld;else if(r===Pa.POSITION)s.value=s.value||new i,s.value.setFromMatrixPosition(t.matrixWorld);else if(r===Pa.SCALE)s.value=s.value||new i,s.value.setFromMatrixScale(t.matrixWorld);else if(r===Pa.DIRECTION)s.value=s.value||new i,t.getWorldDirection(s.value);else if(r===Pa.VIEW_POSITION){const r=e.camera;s.value=s.value||new i,s.value.setFromMatrixPosition(t.matrixWorld),s.value.applyMatrix4(r.matrixWorldInverse)}}generate(e){const t=this.scope;return t===Pa.WORLD_MATRIX||t===Pa.VIEW_MATRIX?this._uniformNode.nodeType="mat4":t===Pa.NORMAL_MATRIX?this._uniformNode.nodeType="mat3":t!==Pa.POSITION&&t!==Pa.VIEW_POSITION&&t!==Pa.DIRECTION&&t!==Pa.SCALE||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Pa.VIEW_MATRIX="viewMatrix",Pa.NORMAL_MATRIX="normalMatrix",Pa.WORLD_MATRIX="worldMatrix",Pa.POSITION="position",Pa.SCALE="scale",Pa.VIEW_POSITION="viewPosition",Pa.DIRECTION="direction";const Ga=cn(Pa,Pa.DIRECTION),ka=cn(Pa,Pa.VIEW_MATRIX),Va=cn(Pa,Pa.NORMAL_MATRIX),za=cn(Pa,Pa.WORLD_MATRIX),$a=cn(Pa,Pa.POSITION),Ha=cn(Pa,Pa.SCALE),Wa=cn(Pa,Pa.VIEW_POSITION);fr("Object3DNode",Pa);class ja extends Pa{constructor(e=ja.POSITION){super(e),this.updateType=er.RENDER}getNodeType(e){const t=this.scope;return t===ja.PROJECTION_MATRIX?"mat4":t===ja.NEAR||t===ja.FAR||t===ja.LOG_DEPTH?"float":super.getNodeType(e)}update(e){const t=e.camera,s=this._uniformNode,r=this.scope;r===ja.VIEW_MATRIX?s.value=t.matrixWorldInverse:r===ja.PROJECTION_MATRIX?s.value=t.projectionMatrix:r===ja.NEAR?s.value=t.near:r===ja.FAR?s.value=t.far:r===ja.LOG_DEPTH?s.value=2/(Math.log(t.far+1)/Math.LN2):(this.object3d=t,super.update(e))}generate(e){const t=this.scope;return t===ja.PROJECTION_MATRIX?this._uniformNode.nodeType="mat4":t!==ja.NEAR&&t!==ja.FAR&&t!==ja.LOG_DEPTH||(this._uniformNode.nodeType="float"),super.generate(e)}}ja.PROJECTION_MATRIX="projectionMatrix",ja.NEAR="near",ja.FAR="far",ja.LOG_DEPTH="logDepth";const qa=di(dn(ja,ja.PROJECTION_MATRIX),"projectionMatrix"),Xa=dn(ja,ja.NEAR),Ya=dn(ja,ja.FAR),Ka=dn(ja,ja.LOG_DEPTH),Qa=dn(ja,ja.VIEW_MATRIX),Za=dn(ja,ja.NORMAL_MATRIX),Ja=dn(ja,ja.WORLD_MATRIX),eu=dn(ja,ja.POSITION);fr("CameraNode",ja);class tu extends Pa{constructor(e=tu.VIEW_MATRIX){super(e)}update(e){this.object3d=e.object,super.update(e)}}const su=dn(tu,tu.DIRECTION),ru=dn(tu,tu.VIEW_MATRIX).label("modelViewMatrix").temp("ModelViewMatrix"),nu=dn(tu,tu.NORMAL_MATRIX),iu=dn(tu,tu.WORLD_MATRIX),ou=dn(tu,tu.POSITION),au=dn(tu,tu.SCALE),uu=dn(tu,tu.VIEW_POSITION);fr("ModelNode",tu);class lu extends gr{constructor(e=lu.LOCAL){super("vec3"),this.scope=e}isGlobal(){return!0}getHash(){return`normal-${this.scope}`}generate(e){const t=this.scope;let s=null;if(t===lu.GEOMETRY)s=si("normal","vec3");else if(t===lu.LOCAL)s=ei(cu);else if(t===lu.VIEW){const e=nu.mul(du);s=wo(ei(e))}else if(t===lu.WORLD){const e=hu.transformDirection(Qa);s=wo(ei(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}lu.GEOMETRY="geometry",lu.LOCAL="local",lu.VIEW="view",lu.WORLD="world";const cu=dn(lu,lu.GEOMETRY),du=dn(lu,lu.LOCAL).temp("Normal"),hu=dn(lu,lu.VIEW),pu=dn(lu,lu.WORLD),mu=Ai("vec3","TransformedNormalView"),gu=mu.transformDirection(Qa).normalize(),fu=Ai("vec3","TransformedClearcoatNormalView");fr("NormalNode",lu);const xu=new Map;class bu extends gr{constructor(e){super(),this.scope=e}getCache(e,t){let s=xu.get(e);return void 0===s&&(s=Da(e,t),xu.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache("map"===e?"map":e+"Map","texture")}setup(e){const t=e.context.material,s=this.scope;let r=null;if(s===bu.COLOR){const e=this.getColor(s);r=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(s===bu.OPACITY){const e=this.getFloat(s);r=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alpha")):e}else if(s===bu.SPECULAR_STRENGTH)r=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture(s).r:Tn(1);else if(s===bu.ROUGHNESS){const e=this.getFloat(s);r=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture(s).g):e}else if(s===bu.METALNESS){const e=this.getFloat(s);r=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture(s).b):e}else if(s===bu.EMISSIVE){const e=this.getColor(s);r=t.emissiveMap&&!0===t.emissiveMap.isTexture?e.mul(this.getTexture(s)):e}else if(s===bu.NORMAL)r=t.normalMap?this.getTexture("normal").normalMap(this.getCache("normalScale","vec2")):t.bumpMap?this.getTexture("bump").r.bumpMap(this.getFloat("bumpScale")):hu;else if(s===bu.CLEARCOAT){const e=this.getFloat(s);r=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===bu.CLEARCOAT_ROUGHNESS){const e=this.getFloat(s);r=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===bu.CLEARCOAT_NORMAL)r=t.clearcoatNormalMap?this.getTexture(s).normalMap(this.getCache(s+"Scale","vec2")):hu;else if(s===bu.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));r=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColor").rgb):e}else if(s===bu.SHEEN_ROUGHNESS){const e=this.getFloat(s);r=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture(s).a):e,r=r.clamp(.07,1)}else if(s===bu.IRIDESCENCE_THICKNESS){const e=Ua(1,"float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const n=Ua(0,"float",t.iridescenceThicknessRange);r=e.sub(n).mul(this.getTexture(s).g).add(n)}else r=e}else{const t=this.getNodeType(e);r=this.getCache(s,t)}return r}}bu.ALPHA_TEST="alphaTest",bu.COLOR="color",bu.OPACITY="opacity",bu.SHININESS="shininess",bu.SPECULAR_COLOR="specular",bu.SPECULAR_STRENGTH="specularStrength",bu.REFLECTIVITY="reflectivity",bu.ROUGHNESS="roughness",bu.METALNESS="metalness",bu.NORMAL="normal",bu.CLEARCOAT="clearcoat",bu.CLEARCOAT_ROUGHNESS="clearcoatRoughness",bu.CLEARCOAT_NORMAL="clearcoatNormal",bu.EMISSIVE="emissive",bu.ROTATION="rotation",bu.SHEEN="sheen",bu.SHEEN_ROUGHNESS="sheenRoughness",bu.IRIDESCENCE="iridescence",bu.IRIDESCENCE_IOR="iridescenceIOR",bu.IRIDESCENCE_THICKNESS="iridescenceThickness",bu.LINE_SCALE="scale",bu.LINE_DASH_SIZE="dashSize",bu.LINE_GAP_SIZE="gapSize",bu.LINE_WIDTH="linewidth",bu.LINE_DASH_OFFSET="dashOffset",bu.POINT_WIDTH="pointWidth";const Tu=dn(bu,bu.ALPHA_TEST),_u=dn(bu,bu.COLOR),yu=dn(bu,bu.SHININESS),Nu=dn(bu,bu.EMISSIVE),vu=dn(bu,bu.OPACITY),Su=dn(bu,bu.SPECULAR_COLOR),Au=dn(bu,bu.SPECULAR_STRENGTH),Ru=dn(bu,bu.REFLECTIVITY),Cu=dn(bu,bu.ROUGHNESS),Eu=dn(bu,bu.METALNESS),wu=dn(bu,bu.NORMAL),Mu=dn(bu,bu.CLEARCOAT),Ou=dn(bu,bu.CLEARCOAT_ROUGHNESS),Fu=dn(bu,bu.CLEARCOAT_NORMAL),Bu=dn(bu,bu.ROTATION),Uu=dn(bu,bu.SHEEN),Iu=dn(bu,bu.SHEEN_ROUGHNESS),Lu=dn(bu,bu.IRIDESCENCE),Du=dn(bu,bu.IRIDESCENCE_IOR),Pu=dn(bu,bu.IRIDESCENCE_THICKNESS),Gu=dn(bu,bu.LINE_SCALE),ku=dn(bu,bu.LINE_DASH_SIZE),Vu=dn(bu,bu.LINE_GAP_SIZE),zu=dn(bu,bu.LINE_WIDTH),$u=dn(bu,bu.LINE_DASH_OFFSET),Hu=dn(bu,bu.POINT_WIDTH);fr("MaterialNode",bu);class Wu extends gr{constructor(e=Wu.LOCAL){super("vec3"),this.scope=e}isGlobal(){return!0}getHash(){return`position-${this.scope}`}generate(e){const t=this.scope;let s=null;if(t===Wu.GEOMETRY)s=si("position","vec3");else if(t===Wu.LOCAL)s=ei(ju);else if(t===Wu.WORLD){const e=iu.mul(qu);s=ei(e)}else if(t===Wu.VIEW){const e=ru.mul(qu);s=ei(e)}else if(t===Wu.VIEW_DIRECTION){const e=Ku.negate();s=wo(ei(e))}else if(t===Wu.WORLD_DIRECTION){const e=qu.transformDirection(iu);s=wo(ei(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Wu.GEOMETRY="geometry",Wu.LOCAL="local",Wu.WORLD="world",Wu.WORLD_DIRECTION="worldDirection",Wu.VIEW="view",Wu.VIEW_DIRECTION="viewDirection";const ju=dn(Wu,Wu.GEOMETRY),qu=dn(Wu,Wu.LOCAL).temp("Position"),Xu=dn(Wu,Wu.WORLD),Yu=dn(Wu,Wu.WORLD_DIRECTION),Ku=dn(Wu,Wu.VIEW),Qu=dn(Wu,Wu.VIEW_DIRECTION);fr("PositionNode",Wu);class Zu extends Cr{constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if("fragment"===e.shaderStage)return ei(e.context.mvp);const t=this.positionNode||qu;return qa.mul(ru).mul(t)}}const Ju=cn(Zu);fr("ModelViewProjectionNode",Zu);class el extends br{constructor(e,t=null,s=0,r=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=r,this.usage=p,this.instanced=!1,this.attribute=null,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),s=this.value,r=e.getTypeLength(t),n=this.bufferStride||r,i=this.bufferOffset,o=!0===s.isInterleavedBuffer?s:new m(s,n),a=new g(o,r,i);o.setUsage(this.usage),this.attribute=a,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),r=e.getPropertyName(s);let n=null;if("vertex"===e.shaderStage)n=r;else{n=ei(this).build(e,t)}return n}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this}setInstanced(e){return this.instanced=e,this}}const tl=(e,t,s,r)=>an(new el(e,t,s,r)),sl=(t,s,r,n)=>tl(t,s,r,n).setUsage(e),rl=(e,t,s,r)=>tl(e,t,s,r).setInstanced(!0),nl=(e,t,s,r)=>sl(e,t,s,r).setInstanced(!0);Ir("toAttribute",(e=>tl(e.value))),fr("BufferAttributeNode",el);class il extends gr{constructor(e){super("void"),this.instanceMesh=e,this.instanceMatrixNode=null}setup(){let t=this.instanceMatrixNode;if(null===t){const s=this.instanceMesh.instanceMatrix,r=new f(s.array,16,1),n=s.usage===e?nl:rl,i=[n(r,"vec4",16,0),n(r,"vec4",16,4),n(r,"vec4",16,8),n(r,"vec4",16,12)];t=Gn(...i),this.instanceMatrixNode=t}const s=t.mul(qu).xyz,r=In(t[0].xyz,t[1].xyz,t[2].xyz),n=du.div(Cn(r[0].dot(r[0]),r[1].dot(r[1]),r[2].dot(r[2]))),i=r.mul(n).xyz;qu.assign(s),du.assign(i)}}const ol=cn(il);fr("InstanceNode",il);class al extends Xn{constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getInputType(){return"buffer"}}const ul=(e,t,s)=>an(new al(e,t,s));fr("BufferNode",al);class ll extends gr{constructor(e=ll.LOCAL){super(),this.scope=e}getHash(){return`tangent-${this.scope}`}getNodeType(){return this.scope===ll.GEOMETRY?"vec4":"vec3"}generate(e){const t=this.scope;let s=null;if(t===ll.GEOMETRY)s=si("tangent","vec4");else if(t===ll.LOCAL)s=ei(cl.xyz);else if(t===ll.VIEW){const e=ru.mul(dl).xyz;s=wo(ei(e))}else if(t===ll.WORLD){const e=hl.transformDirection(Qa);s=wo(ei(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}ll.GEOMETRY="geometry",ll.LOCAL="local",ll.VIEW="view",ll.WORLD="world";const cl=dn(ll,ll.GEOMETRY),dl=dn(ll,ll.LOCAL),hl=dn(ll,ll.VIEW),pl=dn(ll,ll.WORLD),ml=xi(hl,"TransformedTangentView"),gl=wo(ml.transformDirection(Qa));fr("TangentNode",ll);class fl extends gr{constructor(e){super("void"),this.skinnedMesh=e,this.updateType=er.OBJECT,this.skinIndexNode=si("skinIndex","uvec4"),this.skinWeightNode=si("skinWeight","vec4"),this.bindMatrixNode=Yn(e.bindMatrix,"mat4"),this.bindMatrixInverseNode=Yn(e.bindMatrixInverse,"mat4"),this.boneMatricesNode=ul(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)}setup(e){const{skinIndexNode:t,skinWeightNode:s,bindMatrixNode:r,bindMatrixInverseNode:n,boneMatricesNode:i}=this,o=i.element(t.x),a=i.element(t.y),u=i.element(t.z),l=i.element(t.w),c=r.mul(qu),d=Ki(o.mul(s.x).mul(c),a.mul(s.y).mul(c),u.mul(s.z).mul(c),l.mul(s.w).mul(c)),h=n.mul(d).xyz;let p=Ki(s.x.mul(o),s.y.mul(a),s.z.mul(u),s.w.mul(l));p=n.mul(p).mul(r);const m=p.transformDirection(du).xyz;qu.assign(h),du.assign(m),e.hasGeometryAttribute("tangent")&&dl.assign(m)}generate(e,t){if("void"!==t)return qu.build(e,t)}update(){this.skinnedMesh.skeleton.update()}}const xl=cn(fl);fr("SkinningNode",fl);const bl=new WeakMap,Tl=new o,_l=pn((({bufferMap:e,influence:t,stride:s,width:r,depth:n,offset:i})=>{const o=_n(pi).mul(s).add(i),a=o.div(r),u=o.sub(a.mul(r));return Oa(e,Sn(u,a)).depth(n).mul(t)}));class yl extends gr{constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=Yn(1),this.updateType=er.OBJECT}setup(e){const{geometry:t}=e,s=void 0!==t.morphAttributes.position,r=void 0!==t.morphAttributes.normal,i=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,o=void 0!==i?i.length:0,{texture:a,stride:u,size:l}=function(e){const t=void 0!==e.morphAttributes.position,s=void 0!==e.morphAttributes.normal,r=void 0!==e.morphAttributes.color,i=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,o=void 0!==i?i.length:0;let a=bl.get(e);if(void 0===a||a.count!==o){void 0!==a&&a.texture.dispose();const i=e.morphAttributes.position||[],u=e.morphAttributes.normal||[],l=e.morphAttributes.color||[];let c=0;!0===t&&(c=1),!0===s&&(c=2),!0===r&&(c=3);let d=e.attributes.position.count*c,h=1;const p=4096;d>p&&(h=Math.ceil(d/p),d=p);const m=new Float32Array(d*h*4*o),g=new x(m,d,h,o);g.type=b,g.needsUpdate=!0;const f=4*c;for(let e=0;e<o;e++){const n=i[e],o=u[e],a=l[e],c=d*h*4*e;for(let e=0;e<n.count;e++){const i=e*f;!0===t&&(Tl.fromBufferAttribute(n,e),m[c+i+0]=Tl.x,m[c+i+1]=Tl.y,m[c+i+2]=Tl.z,m[c+i+3]=0),!0===s&&(Tl.fromBufferAttribute(o,e),m[c+i+4]=Tl.x,m[c+i+5]=Tl.y,m[c+i+6]=Tl.z,m[c+i+7]=0),!0===r&&(Tl.fromBufferAttribute(a,e),m[c+i+8]=Tl.x,m[c+i+9]=Tl.y,m[c+i+10]=Tl.z,m[c+i+11]=4===a.itemSize?Tl.w:1)}}a={count:o,texture:g,stride:c,size:new n(d,h)},bl.set(e,a),e.addEventListener("dispose",(function t(){g.dispose(),bl.delete(e),e.removeEventListener("dispose",t)}))}return a}(t);!0===s&&qu.mulAssign(this.morphBaseInfluence),!0===r&&du.mulAssign(this.morphBaseInfluence);const c=_n(l.width);for(let e=0;e<o;e++){const t=Ia("morphTargetInfluences",e,"float"),n=_n(e);!0===s&&qu.addAssign(_l({bufferMap:a,influence:t,stride:u,width:c,depth:n,offset:_n(0)})),!0===r&&du.addAssign(_l({bufferMap:a,influence:t,stride:u,width:c,depth:n,offset:_n(1)}))}}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce(((e,t)=>e+t),0)}}const Nl=cn(yl);fr("MorphNode",yl);class vl extends gr{constructor(){super("vec3")}getHash(){return"reflectVector"}setup(){return Qu.negate().reflect(mu).transformDirection(Qa)}}const Sl=dn(vl);fr("ReflectVectorNode",vl);class Al extends wa{constructor(e,t=null,s=null){super(e,t,s),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){return Sl}setUpdateMatrix(){}generateUV(e,t){return Cn(t.x.negate(),t.yz).build(e,"vec3")}}const Rl=cn(Al);Ir("cubeTexture",Rl),fr("CubeTextureNode",Al);class Cl extends gr{constructor(){super("vec3")}generate(){}}fr("LightingNode",Cl);let El=null;class wl extends Cl{constructor(e=null){super(),this.updateType=er.FRAME,this.light=e,this.rtt=null,this.shadowNode=null,this.color=new r,this._defaultColorNode=Yn(this.color),this.colorNode=this._defaultColorNode,this.isAnalyticLightNode=!0}getCacheKey(){return super.getCacheKey()+"-"+this.light.id+"-"+(this.light.castShadow?"1":"0")}getHash(){return this.light.uuid}setupShadow(e){let t=this.shadowNode;if(null===t){null===El&&(El=e.createNodeMaterial("MeshBasicNodeMaterial"));const s=this.light.shadow,r=e.getRenderTarget(s.mapSize.width,s.mapSize.height),n=new T;n.minFilter=_,n.magFilter=_,n.image.width=s.mapSize.width,n.image.height=s.mapSize.height,n.compareFunction=y,r.depthTexture=n,s.camera.updateProjectionMatrix();const i=Ua("bias","float",s),o=Ua("normalBias","float",s);let a=Yn(s.matrix).mul(Xu.add(pu.mul(o)));a=a.xyz.div(a.w);const u=a.x.greaterThanEqual(0).and(a.x.lessThanEqual(1)).and(a.y.greaterThanEqual(0)).and(a.y.lessThanEqual(1)).and(a.z.lessThanEqual(1));let l=a.z.add(i);e.renderer.coordinateSystem===N&&(l=l.mul(2).sub(1)),a=Cn(a.x,a.y.oneMinus(),l);const c=(e,t,s)=>Ma(e,t).compare(s);t=c(n,a.xy,a.z),this.rtt=r,this.colorNode=this.colorNode.mul(u.mix(1,t)),this.shadowNode=t,this.updateBeforeType=er.RENDER}}setup(e){this.light.castShadow?this.setupShadow(e):null!==this.shadowNode&&this.disposeShadow()}updateShadow(e){const{rtt:t,light:s}=this,{renderer:r,scene:n}=e,i=n.overrideMaterial;n.overrideMaterial=El,t.setSize(s.shadow.mapSize.width,s.shadow.mapSize.height),s.shadow.updateMatrices(s);const o=r.getRenderTarget(),a=r.getRenderObjectFunction();r.setRenderObjectFunction(((e,...t)=>{!0===e.castShadow&&r.renderObject(e,...t)})),r.setRenderTarget(t),r.render(n,s.shadow.camera),r.setRenderTarget(o),r.setRenderObjectFunction(a),n.overrideMaterial=i}disposeShadow(){this.rtt.dispose(),this.shadowNode=null,this.rtt=null,this.colorNode=this._defaultColorNode}updateBefore(e){const{light:t}=this;t.castShadow&&this.updateShadow(e)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}fr("AnalyticLightNode",wl);const Ml=new WeakMap;class Ol extends gr{constructor(e=[]){super("vec3"),this.totalDiffuseNode=Cn().temp("totalDiffuse"),this.totalSpecularNode=Cn().temp("totalSpecular"),this.outgoingLightNode=Cn().temp("outgoingLight"),this.lightNodes=e,this._hash=null}get hasLight(){return this.lightNodes.length>0}getHash(){if(null===this._hash){const e=[];for(const t of this.lightNodes)e.push(t.getHash());this._hash="lights-"+e.join(",")}return this._hash}setup(e){const t=e.context,s=t.lightingModel;let r=this.outgoingLightNode;if(s){const{lightNodes:n,totalDiffuseNode:i,totalSpecularNode:o}=this;t.outgoingLight=r;const a=e.addStack();s.start(t,a,e);for(const t of n)t.build(e);s.indirectDiffuse(t,a,e),s.indirectSpecular(t,a,e),s.ambientOcclusion(t,a,e);const{backdrop:u,backdropAlpha:l}=t,{directDiffuse:c,directSpecular:d,indirectDiffuse:h,indirectSpecular:p}=t.reflectedLight;let m=c.add(h);null!==u&&(m=Cn(null!==l?l.mix(m,u):u)),i.assign(m),o.assign(d.add(p)),r.assign(i.add(o)),s.finish(t,a,e),r=r.bypass(e.removeStack())}return r}_getLightNodeById(e){for(const t of this.lightNodes)if(t.isAnalyticLightNode&&t.light.id===e)return t;return null}fromLights(e=[]){const t=[];e=(e=>e.sort(((e,t)=>e.id-t.id)))(e);for(const s of e){let e=this._getLightNodeById(s.id);if(null===e){const t=s.constructor,r=Ml.has(t)?Ml.get(t):wl;e=an(new r(s))}t.push(e)}return this.lightNodes=t,this._hash=null,this}}const Fl=e=>an((new Ol).fromLights(e)),Bl=cn(Ol);function Ul(e,t){if(Ml.has(e))throw new Error(`Redefinition of light node ${t.type}`);if("function"!=typeof e)throw new Error(`Light ${e.name} is not a class`);if("function"!=typeof t||!t.type)throw new Error(`Light node ${t.type} is not a class`);Ml.set(e,t)}class Il extends Cl{constructor(e=null){super(),this.aoNode=e}setup(e){const t=this.aoNode.x.sub(1).mul(1).add(1);e.context.ambientOcclusion.mulAssign(t)}}fr("AONode",Il);class Ll extends li{constructor(e,t=null,s=null,r=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=r,this._context=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s={directDiffuse:Cn().temp("directDiffuse"),directSpecular:Cn().temp("directSpecular"),indirectDiffuse:Cn().temp("indirectDiffuse"),indirectSpecular:Cn().temp("indirectSpecular")};return{radiance:Cn().temp("radiance"),irradiance:Cn().temp("irradiance"),iblIrradiance:Cn().temp("iblIrradiance"),ambientOcclusion:Tn(1).temp("ambientOcclusion"),reflectedLight:s,backdrop:e,backdropAlpha:t}}setup(e){return this.context=this._context||(this._context=this.getContext()),this.context.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const Dl=cn(Ll);Ir("lightingContext",Dl),fr("LightingContextNode",Ll);class Pl extends Cr{constructor(e=Yu){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(2*Math.PI)).add(.5),s=e.y.negate().clamp(-1,1).asin().mul(1/Math.PI).add(.5);return vn(t,s)}}const Gl=cn(Pl);fr("EquirectUVNode",Pl);class kl extends gr{constructor(e,t=null){super("float"),this.textureNode=e,this.roughnessNode=t}setup(){const{textureNode:e,roughnessNode:t}=this,s=Ea(e),r=t.mul(t).mul(Math.PI).div(t.add(1));return s.add(r.log2()).clamp(0,s)}}const Vl=cn(kl);fr("SpecularMIPLevelNode",kl);const zl=new WeakMap;class $l extends Cl{constructor(e=null){super(),this.envNode=e}setup(e){let t=this.envNode;if(t.isTextureNode&&!0!==t.value.isCubeTexture){let s=zl.get(t.value);if(void 0===s){const r=t.value,n=e.renderer,i=e.getCubeRenderTarget(512).fromEquirectangularTexture(n,r);s=Rl(i.texture),zl.set(t.value,s)}t=s}const s=Ua("envMapIntensity","float",e.material),r=ci(t,Hl(Ei,mu)).mul(s),n=ci(t,Wl(gu)).mul(Math.PI).mul(s),i=ui(r);e.context.radiance.addAssign(i),e.context.iblIrradiance.addAssign(n);const o=e.context.lightingModel.clearcoatRadiance;if(o){const e=ci(t,Hl(Oi,fu)).mul(s),r=ui(e);o.addAssign(r)}}}const Hl=(e,t)=>{let s=null,r=null;return{getUV:n=>{let i=null;return null===s&&(s=Qu.negate().reflect(t),s=e.mul(e).mix(s,t).normalize(),s=s.transformDirection(Qa)),n.isCubeTextureNode?i=s:n.isTextureNode&&(null===r&&(r=Gl(s)),i=r),i},getTextureLevel:()=>e,getTextureLevelAlgorithm:(e,t)=>Vl(e,t)}},Wl=e=>{let t=null;return{getUV:s=>{let r=null;return s.isCubeTextureNode?r=e:s.isTextureNode&&(null===t&&(t=Gl(e),t=vn(t.x,t.y.oneMinus())),r=t),r},getTextureLevel:e=>Ea(e)}};let jl,ql;fr("EnvironmentNode",$l);class Xl extends gr{constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===Xl.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=er.NONE;return this.scope!==Xl.RESOLUTION&&this.scope!==Xl.VIEWPORT||(e=er.FRAME),this.updateType=e,e}update({renderer:e}){this.scope===Xl.VIEWPORT?e.getViewport(ql):e.getDrawingBufferSize(jl)}setup(){const e=this.scope;if(e===Xl.COORDINATE)return;let t=null;if(e===Xl.RESOLUTION)t=Yn(jl||(jl=new n));else if(e===Xl.VIEWPORT)t=Yn(ql||(ql=new o));else{t=Yl.div(Kl);let s=t.x,r=t.y;/bottom/i.test(e)&&(r=r.oneMinus()),/right/i.test(e)&&(s=s.oneMinus()),t=vn(s,r)}return t}generate(e){if(this.scope===Xl.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const s=e.getNodeProperties(Kl).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${s}.y - ${t}.y )`}return t}return super.generate(e)}}Xl.COORDINATE="coordinate",Xl.RESOLUTION="resolution",Xl.VIEWPORT="viewport",Xl.TOP_LEFT="topLeft",Xl.BOTTOM_LEFT="bottomLeft",Xl.TOP_RIGHT="topRight",Xl.BOTTOM_RIGHT="bottomRight";const Yl=dn(Xl,Xl.COORDINATE),Kl=dn(Xl,Xl.RESOLUTION),Ql=dn(Xl,Xl.VIEWPORT),Zl=dn(Xl,Xl.TOP_LEFT),Jl=dn(Xl,Xl.BOTTOM_LEFT),ec=dn(Xl,Xl.TOP_RIGHT),tc=dn(Xl,Xl.BOTTOM_RIGHT);fr("ViewportNode",Xl);const sc=new n;class rc extends wa{constructor(e=Zl,t=null,s=null){null===s&&((s=new v).minFilter=S),super(s,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=er.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(sc);const s=this.value;s.image.width===sc.width&&s.image.height===sc.height||(s.image.width=sc.width,s.image.height=sc.height,s.needsUpdate=!0);const r=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(s),s.generateMipmaps=r}clone(){return new this.constructor(this.uvNode,this.levelNode,this.value)}}const nc=cn(rc),ic=cn(rc,null,null,{generateMipmaps:!0});Ir("viewportTexture",nc),Ir("viewportMipTexture",ic),fr("ViewportTextureNode",rc);let oc=null;class ac extends rc{constructor(e=Zl,t=null){null===oc&&(oc=new T,oc.minFilter=A,oc.type=R,oc.format=C),super(e,t,oc)}}const uc=cn(ac);Ir("viewportDepthTexture",uc),fr("ViewportDepthTextureNode",ac);class lc extends gr{constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===lc.DEPTH_PIXEL?e.getFragDepth():super.generate(e)}setup(){const{scope:e}=this;let t=null;if(e===lc.DEPTH)t=cc(Ku.z,Xa,Ya);else if(e===lc.DEPTH_TEXTURE){const e=this.valueNode||uc(),s=pc(e,Xa,Ya);t=cc(s,Xa,Ya)}else e===lc.DEPTH_PIXEL&&null!==this.valueNode&&(t=mc().assign(this.valueNode));return t}}const cc=(e,t,s)=>e.add(t).div(t.sub(s)),dc=(e,t,s)=>t.sub(s).mul(e).sub(t),hc=(e,t,s)=>t.add(e).mul(s).div(t.sub(s).mul(e)),pc=(e,t,s)=>t.mul(s).div(s.sub(t).mul(e).sub(s));lc.DEPTH="depth",lc.DEPTH_TEXTURE="depthTexture",lc.DEPTH_PIXEL="depthPixel";const mc=cn(lc,lc.DEPTH_PIXEL),gc=dn(lc,lc.DEPTH),fc=cn(lc,lc.DEPTH_TEXTURE),xc=dn(lc,lc.DEPTH_PIXEL);xc.assign=e=>mc(e),fr("ViewportDepthNode",lc);const bc=new Map;class Tc extends E{constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.fog=!0,this.lights=!0,this.normals=!0,this.colorSpaced=!0,this.lightsNode=null,this.envNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.depthNode=null,this.outputNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+or(this)}build(e){this.setup(e)}setup(e){let t;if(e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),e.addFlow("vertex",e.removeStack()),e.addStack(),null===this.fragmentNode){!0===this.depthWrite&&this.setupDepth(e),!0===this.normals&&this.setupNormal(e),this.setupDiffuseColor(e),this.setupVariants(e);const s=this.setupLighting(e);t=this.setupOutput(e,On(s,Ci.a)),Gi.assign(t),null!==this.outputNode&&(t=this.outputNode)}else t=this.setupOutput(e,this.fragmentNode);e.stack.outputNode=t,e.addFlow("fragment",e.removeStack())}setupDepth(e){const{renderer:t}=e;let s=this.depthNode;if(null===s&&!0===t.logarithmicDepthBuffer){s=Ju().w.add(1).log2().mul(Ka).mul(.5)}null!==s&&xc.assign(s).append()}setupPosition(e){const{object:t}=e,s=t.geometry;e.addStack(),(s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&Nl(t).append(),!0===t.isSkinnedMesh&&xl(t).append(),t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&!0===e.isAvailable("instance")&&ol(t).append(),null!==this.positionNode&&qu.assign(this.positionNode);const r=Ju();return e.context.vertex=e.removeStack(),e.context.mvp=r,r}setupDiffuseColor({geometry:e}){let t=this.colorNode?On(this.colorNode):_u;!0===this.vertexColors&&e.hasAttribute("color")&&(t=On(t.xyz.mul(si("color","vec3")),t.a)),Ci.assign(t);const s=this.opacityNode?Tn(this.opacityNode):vu;if(Ci.a.assign(Ci.a.mul(s)),null!==this.alphaTestNode||this.alphaTest>0){const e=null!==this.alphaTestNode?Tn(this.alphaTestNode):Tu;Ci.a.lessThanEqual(e).discard()}}setupVariants(){}setupNormal(){if(!0===this.flatShading){const e=Ku.dFdx().cross(Ku.dFdy()).normalize();mu.assign(e)}else{const e=this.normalNode?Cn(this.normalNode):wu;mu.assign(e)}}getEnvNode(e){let t=null;return this.envNode?t=this.envNode:this.envMap?t=this.envMap.isCubeTexture?Rl(this.envMap):Ma(this.envMap):e.environmentNode&&(t=e.environmentNode),t}setupLights(e){const t=this.getEnvNode(e),s=[];t&&s.push(new $l(t)),e.material.aoMap&&s.push(new Il(Ma(e.material.aoMap)));let r=this.lightsNode||e.lightsNode;return s.length>0&&(r=Bl([...r.lightNodes,...s])),r}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:r,emissiveNode:n}=this,i=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let o=Ci.rgb;if(i&&!1!==i.hasLight){const t=this.setupLightingModel(e);o=Dl(i,t,s,r)}else null!==s&&(o=Cn(null!==r?la(o,s,r):s));return(n&&!0===n.isNode||t.emissive&&!0===t.emissive.isColor)&&(o=o.add(Cn(n||Nu))),o}setupOutput(e,t){const s=e.renderer,r=e.toneMappingNode;if(r&&(t=On(r.context({color:t.rgb}),t.a)),!0===this.fog){const s=e.fogNode;s&&(t=On(s.mixAssign(t.rgb),t.a))}if(!0===this.colorSpaced){const e=s.currentColorSpace;e!==d&&e!==w&&(t=t.linearToColorSpace(e))}return t}setDefaultValues(e){for(const t in e){const s=e[t];void 0===this[t]&&(this[t]=s,s&&s.clone&&(this[t]=s.clone()))}Object.assign(this.defines,e.defines);const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const e in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,e)&&void 0!==t[e].get&&Object.defineProperty(this.constructor.prototype,e,t[e])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const s=M.prototype.toJSON.call(this,e),r=ar(this);s.inputNodes={};for(const{property:t,childNode:n}of r)s.inputNodes[t]=n.toJSON(e).uuid;function n(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(t){const t=n(e.textures),r=n(e.images),i=n(e.nodes);t.length>0&&(s.textures=t),r.length>0&&(s.images=r),i.length>0&&(s.nodes=i)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.depthNode=e.depthNode,this.outputNode=e.outputNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}static fromMaterial(e){if(!0===e.isNodeMaterial)return e;const t=yc(e.type.replace("Material","NodeMaterial"));if(void 0===t)throw new Error(`NodeMaterial: Material "${e.type}" is not compatible.`);for(const s in e)t[s]=e[s];return t}}function _c(e,t){if("function"!=typeof t||!e)throw new Error(`Node material ${e} is not a class`);if(bc.has(e))throw new Error(`Redefinition of node material ${e}`);bc.set(e,t),t.type=e}function yc(e){const t=bc.get(e);if(void 0!==t)return new t}_c("NodeMaterial",Tc);class Nc{constructor(e,t=null){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class vc extends Nc{constructor(e,t=0){super(e,t),this.isFloatUniform=!0,this.boundary=4,this.itemSize=1}}class Sc extends Nc{constructor(e,t=new n){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class Ac extends Nc{constructor(e,t=new i){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class Rc extends Nc{constructor(e,t=new o){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class Cc extends Nc{constructor(e,t=new r){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class Ec extends Nc{constructor(e,t=new a){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class wc extends Nc{constructor(e,t=new u){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class Mc extends vc{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Oc extends Sc{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Fc extends Ac{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Bc extends Rc{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Uc extends Cc{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Ic extends Ec{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Lc extends wc{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Dc extends gr{constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const t=this.ifNode.getNodeType(e);if(null!==this.elseNode){const s=this.elseNode.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(t))return s}return t}generate(e){const t=this.getNodeType(e),s={tempWrite:!1},{ifNode:r,elseNode:n}=this,i="void"!==r.getNodeType(e)||n&&"void"!==n.getNodeType(e),o=i?Ai(t).build(e):"",a=ci(this.condNode).build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${a} ) {\n\n`).addFlowTab();let u=ci(this.ifNode,s).build(e,t);if(u=i?o+" = "+u+";":u,e.removeFlowTab().addFlowCode(e.tab+"\t"+u+"\n\n"+e.tab+"}"),null!==n){e.addFlowCode(" else {\n\n").addFlowTab();let r=ci(n,s).build(e,t);r=o?o+" = "+r+";":r,e.removeFlowTab().addFlowCode(e.tab+"\t"+r+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return o}}const Pc=cn(Dc);Ir("cond",Pc),fr("CondNode",Dc);class Gc extends gr{constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}if(e,t){const s=new on(t);return this._currentCond=Pc(e,s),this.add(this._currentCond)}elseif(e,t){const s=new on(t),r=Pc(e,s);return this._currentCond.elseNode=r,this._currentCond=r,this}else(e){return this._currentCond.elseNode=new on(e),this}build(e,...t){const s=gn();mn(this);for(const t of this.nodes)t.build(e,"void");return mn(s),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}}const kc=cn(Gc);fr("StackNode",Gc);class Vc extends O{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,r=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n=new F(5,5,5),i=Gl(Yu),o=yc("MeshBasicNodeMaterial");o.colorNode=Ma(t,i,0),o.side=B,o.blending=U;const a=new I(n,o),u=new L;u.add(a),t.minFilter===S&&(t.minFilter=D);return new P(1,10,this).update(e,u),t.minFilter=s,t.currentGenerateMipmaps=r,a.geometry.dispose(),a.material.dispose(),this}}const zc=new Fs,$c=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),Hc=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Wc=new Set([Int32Array,Uint32Array,Float32Array]),jc=e=>(e=Number(e))+(e%1?"":".0");class qc{constructor(e,t,s,r=null,n=null){this.object=e,this.material=n||e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=r,this.nodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.hashNodes={},this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.toneMappingNode=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:[]},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:[],fragment:[],compute:[]},this.bindingsOffset={vertex:0,fragment:0,compute:0},this.bindingsArray=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=kc(),this.stacks=[],this.tab="\t",this.context={keywords:new vi,material:this.material},this.cache=new oi,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null}getRenderTarget(e,t,s){return new G(e,t,s)}getCubeRenderTarget(e,t){return new Vc(e,t)}includes(e){return this.nodes.includes(e)}_getSharedBindings(e){const t=[];for(const s of e)if(!0===s.shared){const e=s.getNodes();let r=zc.get(e);void 0===r&&(zc.set(e,s),r=s),t.push(r)}else t.push(s);return t}getBindings(){let e=this.bindingsArray;if(null===e){const t=this.bindings;this.bindingsArray=e=this._getSharedBindings(null!==this.material?[...t.vertex,...t.fragment]:t.compute)}return e}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}buildUpdateNodes(){for(const e of this.nodes){const t=e.getUpdateType(),s=e.getUpdateBeforeType();t!==er.NONE&&this.updateNodes.push(e.getSelf()),s!==er.NONE&&this.updateBeforeNodes.push(e)}}get currentNode(){return this.chaining[this.chaining.length-1]}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}setCache(e){this.cache=e}getCache(){return this.cache}isAvailable(){return!1}getVertexIndex(){}getInstanceIndex(){}getFrontFacing(){}getFragCoord(){}isFlipY(){return!1}generateTexture(){}generateTextureLod(){}generateConst(e,t=null){if(null===t&&("float"===e||"int"===e||"uint"===e?t=0:"bool"===e?t=!1:"color"===e?t=new r:"vec2"===e?t=new n:"vec3"===e?t=new i:"vec4"===e&&(t=new o)),"float"===e)return jc(t);if("int"===e)return`${Math.round(t)}`;if("uint"===e)return t>=0?`${Math.round(t)}u`:"0u";if("bool"===e)return t?"true":"false";if("color"===e)return`${this.getType("vec3")}( ${jc(t.r)}, ${jc(t.g)}, ${jc(t.b)} )`;const s=this.getTypeLength(e),a=this.getComponentType(e),u=e=>this.generateConst(a,e);if(2===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)} )`;if(3===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)}, ${u(t.z)} )`;if(4===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)}, ${u(t.z)}, ${u(t.w)} )`;if(s>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(u).join(", ")} )`;if(s>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}generateMethod(e){return e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const s=this.attributes;for(const t of s)if(t.name===e)return t;const r=new bi(e,t);return s.push(r),r}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"texture"===e||"cubeTexture"===e}needsColorSpaceToLinear(){return!1}getTextureEncodingFromMap(e){return this.getTextureColorSpaceFromMap(e)===h?k:V}getTextureColorSpaceFromMap(e){let t;return t=e&&e.isTexture?e.colorSpace:e&&e.isWebGLRenderTarget?e.texture.colorSpace:w,t}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;const s=$c.get(e);return("float"===t?"":t[0])+s}getTypeFromArray(e){return Hc.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,r=Wc.has(s.constructor)?e.itemSize:t.stride||e.itemSize,n=e.normalized;let i;return e instanceof z||!0===n||(i=this.getTypeFromArray(s)),this.getTypeFromLength(r,i)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return null!==s?Number(s[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){return this.stack=kc(this.stack),this.stacks.push(gn()||this.stack),mn(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,mn(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage){const s=e.isGlobal(this)?this.globalCache:this.cache;let r=s.getNodeData(e);return void 0===r&&(r={},s.setNodeData(e,r)),void 0===r[t]&&(r[t]={}),r[t]}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let r=s.bufferAttribute;if(void 0===r){const n=this.uniforms.index++;r=new bi("nodeAttribute"+n,t,e),this.bufferAttributes.push(r),s.bufferAttribute=r}return r}getStructTypeFromNode(e,t=this.shaderStage){const s=this.getDataFromNode(e,t);if(void 0===s.structType){const r=this.structs.index++;e.name=`StructType${r}`,this.structs[t].push(e),s.structType=e}return e}getUniformFromNode(e,t,s=this.shaderStage,r=null){const n=this.getDataFromNode(e,s);let i=n.uniform;if(void 0===i){const o=this.uniforms.index++;i=new Ti(r||"nodeUniform"+o,t,e),this.uniforms[s].push(i),n.uniform=i}return i}getVarFromNode(e,t=null,s=e.getNodeType(this),r=this.shaderStage){const n=this.getDataFromNode(e,r);let i=n.variable;if(void 0===i){const e=this.vars[r]||(this.vars[r]=[]);null===t&&(t="nodeVar"+e.length),i=new _i(t,s),e.push(i),n.variable=i}return i}getVaryingFromNode(e,t=null,s=e.getNodeType(this)){const r=this.getDataFromNode(e,"any");let n=r.varying;if(void 0===n){const e=this.varyings,i=e.length;null===t&&(t="nodeVarying"+i),n=new yi(t,s),e.push(n),r.varying=n}return n}getCodeFromNode(e,t,s=this.shaderStage){const r=this.getDataFromNode(e);let n=r.code;if(void 0===n){const e=this.codes[s]||(this.codes[s]=[]),i=e.length;n=new Ni("nodeCode"+i,t),e.push(n),r.code=n}return n}addLineFlowCode(e){return""===e||(e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}flowShaderNode(e){const t=e.layout;let s;if(e.isArrayInput){s=[];for(const e of t.inputs)s.push(new $i(e.type,e.name))}else{s={};for(const e of t.inputs)s[e.name]=new $i(e.type,e.name)}e.layout=null;const r=e.call(s),n=this.flowStagesNode(r,t.type);return e.layout=t,n}flowStagesNode(e,t=null){const s=this.flow,r=this.vars,n=this.buildStage,i={code:""};this.flow=i,this.vars={};for(const s of rr)this.setBuildStage(s),i.result=e.build(this,t);return i.vars=this.getVars(this.shaderStage),this.flow=s,this.vars=r,this.setBuildStage(n),i}flowChildNode(e,t=null){const s=this.flow,r={code:""};return this.flow=r,r.result=e.build(this,t),this.flow=s,r}flowNodeFromShaderStage(e,t,s=null,r=null){const n=this.shaderStage;this.setShaderStage(e);const i=this.flowChildNode(t,s);return null!==r&&(i.code+=`${this.tab+r} = ${i.result};\n`),this.flowCode[e]=this.flowCode[e]+i.code,this.setShaderStage(n),i}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){}getVaryings(){}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];if(void 0!==s)for(const e of s)t+=`${this.getVar(e.type,e.name)}; `;return t}getUniforms(){}getCodes(e){const t=this.codes[e];let s="";if(void 0!==t)for(const e of t)s+=e.code+"\n";return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){}build(){for(const e of rr){this.setBuildStage(e),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const t of nr){this.setShaderStage(t);const s=this.flowNodes[t];for(const t of s)"generate"===e?this.flowNode(t):t.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t)return new Mc(e);if("vec2"===t)return new Oc(e);if("vec3"===t)return new Fc(e);if("vec4"===t)return new Bc(e);if("color"===t)return new Uc(e);if("mat3"===t)return new Ic(e);if("mat4"===t)return new Lc(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e){return yc(e)}getPrimitiveType(e){let t;return t="i"===e[0]?"int":"u"===e[0]?"uint":"float",t}format(e,t,s){if((t=this.getVectorType(t))===(s=this.getVectorType(s))||null===s||this.isReference(s))return e;const r=this.getTypeLength(t),n=this.getTypeLength(s);return r>4||n>4||0===n?e:r===n?`${this.getType(s)}( ${e} )`:r>n?this.format(`${e}.${"xyz".slice(0,n)}`,this.getTypeFromLength(n,this.getComponentType(t)),s):4===n&&r>1?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===r?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:(1===r&&n>1&&t[0]!==s[0]&&(e=`${this.getType(this.getPrimitiveType(s))}( ${e} )`),`${this.getType(s)}( ${e} )`)}getSignature(){return`// Three.js r${$} - NodeMaterial System\n`}}class Xc{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return void 0===s&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this);if(t===er.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(e)!==this.frameId&&(t.set(e,this.frameId),e.updateBefore(this))}else if(t===er.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(e)!==this.renderId&&(t.set(e,this.renderId),e.updateBefore(this))}else t===er.OBJECT&&e.updateBefore(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this);if(t===er.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,s);t.get(e)!==this.frameId&&(t.set(e,this.frameId),e.update(this))}else if(t===er.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,s);t.get(e)!==this.renderId&&(t.set(e,this.renderId),e.update(this))}else t===er.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class Yc{constructor(e,t,s=null,r="",n=!1){this.type=e,this.name=t,this.count=s,this.qualifier=r,this.isConst=n}}Yc.isNodeFunctionInput=!0;class Kc extends gr{constructor(e){super(),this.types=e,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}fr("StructTypeNode",Kc);class Qc extends gr{constructor(...e){super(),this.isOutputStructNode=!0,this.members=e}setup(e){super.setup(e);const t=this.members,s=[];for(let r=0;r<t.length;r++)s.push(t[r].getNodeType(e));this.nodeType=e.getStructTypeFromNode(new Kc(s)).name}generate(e,t){const s=e.getVarFromNode(this);s.isOutputStructVar=!0;const r=e.getPropertyName(s),n=this.members,i=""!==r?r+".":"";for(let s=0;s<n.length;s++){const r=n[s].build(e,t);e.addLineFlowCode(`${i}m${s} = ${r}`)}return r}}const Zc=cn(Qc);fr("OutputStructNode",Qc);class Jc extends gr{constructor(e){super(),this.seedNode=e}setup(){const e=this.seedNode.uint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).float().mul(1/2**32)}}const ed=cn(Jc);let td;Ir("hash",ed),fr("HashNode",Jc);class sd extends Dc{constructor(e){td=td||Ra("discard"),super(e,td)}}const rd=cn(sd),nd=e=>rd(e).append();Ir("discard",nd),fr("DiscardNode",sd);class id extends gr{constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt()+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const s={};for(let e=0,t=this.params.length-1;e<t;e++){const t=this.params[e],r=!0!==t.isNode&&t.name||this.getVarName(e),n=!0!==t.isNode&&t.type||"int";s[r]=Ra(r,n)}return t.returnsNode=this.params[this.params.length-1](s,e.addStack(),e),t.stackNode=e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,r=t.stackNode;for(let t=0,r=s.length-1;t<r;t++){const r=s[t];let n=null,i=null,o=null,a=null,u=null,l=null;r.isNode?(a="int",o=this.getVarName(t),n="0",i=r.build(e,a),u="<"):(a=r.type||"int",o=r.name||this.getVarName(t),n=r.start,i=r.end,u=r.condition,l=r.update,"number"==typeof n?n=n.toString():n&&n.isNode&&(n=n.build(e,a)),"number"==typeof i?i=i.toString():i&&i.isNode&&(i=i.build(e,a)),void 0!==n&&void 0===i?(n+=" - 1",i="0",u=">="):void 0!==i&&void 0===n&&(n="0",u="<"),void 0===u&&(u=Number(n)>Number(i)?">=":"<"));const c={start:n,end:i,condition:u},d=c.start,h=c.end;let p="",m="",g="";l||(l="int"===a?u.includes("<")?"++":"--":u.includes("<")?"+= 1":"-= 1"),p+=e.getVar(a,o)+" = "+d,m+=o+" "+u+" "+h,g+=o+" "+l;const f=`for ( ${p}; ${m}; ${g} )`;e.addFlowCode((0===t?"\n":"")+e.tab+f+" {\n\n").addFlowTab()}const n=ci(r,{tempWrite:!1}).build(e,"void"),i=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+n);for(let t=0,s=this.params.length-1;t<s;t++)e.addFlowCode((0===t?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),i}}const od=(...e)=>an(new id(ln(e,"int"))).append();Ir("loop",((e,...t)=>ni(e,od(...t)))),fr("LoopNode",id);class ad extends Cr{constructor(){super("vec2")}setup(){const e=Cn(Qu.z,0,Qu.x.negate()).normalize(),t=Qu.cross(e);return vn(e.dot(mu),t.dot(mu)).mul(.495).add(.5)}}const ud=dn(ad);fr("MatcapUVNode",ad);class ld extends Xn{constructor(e=ld.LOCAL,t=1,s=0){super(s),this.scope=e,this.scale=t,this.updateType=er.FRAME}update(e){const t=this.scope,s=this.scale;t===ld.LOCAL?this.value+=e.deltaTime*s:t===ld.DELTA?this.value=e.deltaTime*s:t===ld.FRAME?this.value=e.frameId:this.value=e.time*s}serialize(e){super.serialize(e),e.scope=this.scope,e.scale=this.scale}deserialize(e){super.deserialize(e),this.scope=e.scope,this.scale=e.scale}}ld.LOCAL="local",ld.GLOBAL="global",ld.DELTA="delta",ld.FRAME="frame";const cd=(e,t=0)=>an(new ld(ld.LOCAL,e,t)),dd=(e,t=0)=>an(new ld(ld.GLOBAL,e,t)),hd=(e,t=0)=>an(new ld(ld.DELTA,e,t)),pd=dn(ld,ld.FRAME).uint();fr("TimerNode",ld);class md extends gr{constructor(e=md.SINE,t=cd()){super(),this.method=e,this.timeNode=t}getNodeType(e){return this.timeNode.getNodeType(e)}setup(){const e=this.method,t=an(this.timeNode);let s=null;return e===md.SINE?s=t.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5):e===md.SQUARE?s=t.fract().round():e===md.TRIANGLE?s=t.add(.5).fract().mul(2).sub(1).abs():e===md.SAWTOOTH&&(s=t.fract()),s}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}md.SINE="sine",md.SQUARE="square",md.TRIANGLE="triangle",md.SAWTOOTH="sawtooth";const gd=cn(md,md.SINE),fd=cn(md,md.SQUARE),xd=cn(md,md.TRIANGLE),bd=cn(md,md.SAWTOOTH);fr("OscNode",md);class Td extends Cr{constructor(e,t){super(),this.scope=e,this.node=t}getNodeType(e){return this.node.getNodeType(e)}setup(){const{scope:e,node:t}=this;let s=null;return e===Td.DIRECTION_TO_COLOR?s=t.mul(.5).add(.5):e===Td.COLOR_TO_DIRECTION&&(s=t.mul(2).sub(1)),s}}Td.DIRECTION_TO_COLOR="directionToColor",Td.COLOR_TO_DIRECTION="colorToDirection";const _d=cn(Td,Td.DIRECTION_TO_COLOR),yd=cn(Td,Td.COLOR_TO_DIRECTION);Ir("directionToColor",_d),Ir("colorToDirection",yd),fr("PackingNode",Td);class Nd extends gr{constructor(e,t,s,r,n){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=r,this.outHighNode=n,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:r,outHighNode:n,doClamp:i}=this;let o=e.sub(t).div(s.sub(t));return!0===i&&(o=o.clamp()),o.mul(n.sub(r)).add(r)}}const vd=cn(Nd,null,null,{doClamp:!1}),Sd=cn(Nd);Ir("remap",vd),Ir("remapClamp",Sd),fr("RemapNode",Nd);class Ad extends Cr{constructor(e,t,s=vn(.5)){super("vec2"),this.uvNode=e,this.rotationNode=t,this.centerNode=s}setup(){const{uvNode:e,rotationNode:t,centerNode:s}=this,r=t.cos(),n=t.sin(),i=e.sub(s);return vn(vn(r,n).dot(i),vn(n.negate(),r).dot(i)).add(s)}}const Rd=cn(Ad);Ir("rotateUV",Rd),fr("RotateUVNode",Ad);class Cd extends gr{constructor(e,t=ji(),s=Tn(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:r,height:n}=s,i=e.mod(r.mul(n)).floor(),o=i.mod(r),a=n.sub(i.add(1).div(r).ceil()),u=s.reciprocal(),l=vn(o,a);return t.add(l).mul(u)}}const Ed=cn(Cd);fr("SpriteSheetUVNode",Cd);class wd extends gr{constructor(e,t=null,s=null,r=Tn(1),n=Xu,i=pu){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=s,this.scaleNode=r,this.positionNode=n,this.normalNode=i}setup(){const{textureXNode:e,textureYNode:t,textureZNode:s,scaleNode:r,positionNode:n,normalNode:i}=this;let o=i.abs().normalize();o=o.div(o.dot(Cn(1)));const a=n.yz.mul(r),u=n.zx.mul(r),l=n.xy.mul(r),c=e.value,d=null!==t?t.value:c,h=null!==s?s.value:c,p=Ma(c,a).mul(o.x),m=Ma(d,u).mul(o.y),g=Ma(h,l).mul(o.z);return Ki(p,m,g)}}const Md=cn(wd),Od=(...e)=>Md(...e);Ir("triplanarTexture",Od),fr("TriplanarTexturesNode",wd);class Fd extends gr{constructor(e=Fd.LOCAL){super("vec3"),this.scope=e}getHash(){return`bitangent-${this.scope}`}generate(e){const t=this.scope;let s;t===Fd.GEOMETRY?s=cu.cross(cl):t===Fd.LOCAL?s=du.cross(dl):t===Fd.VIEW?s=hu.cross(hl):t===Fd.WORLD&&(s=pu.cross(pl));const r=s.mul(cl.w).xyz;return wo(ei(r)).build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Fd.GEOMETRY="geometry",Fd.LOCAL="local",Fd.VIEW="view",Fd.WORLD="world";const Bd=dn(Fd,Fd.GEOMETRY),Ud=dn(Fd,Fd.LOCAL),Id=dn(Fd,Fd.VIEW),Ld=dn(Fd,Fd.WORLD),Dd=wo(mu.cross(ml).mul(cl.w)),Pd=wo(Dd.transformDirection(Qa));fr("BitangentNode",Fd);const Gd=1/6,kd=e=>Zi(Gd,Zi(e,Zi(e,e.negate().add(3)).sub(3)).add(1)),Vd=e=>Zi(Gd,Zi(e,Zi(e,Zi(3,e).sub(6))).add(4)),zd=e=>Zi(Gd,Zi(e,Zi(e,Zi(-3,e).add(3)).add(3)).add(1)),$d=e=>Zi(Gd,na(e,3)),Hd=e=>kd(e).add(Vd(e)),Wd=e=>zd(e).add($d(e)),jd=e=>Ki(-1,Vd(e).div(kd(e).add(Vd(e)))),qd=e=>Ki(1,$d(e).div(zd(e).add($d(e)))),Xd=(e,t,s)=>{const r=e.uvNode,n=Zi(r,t.zw).add(.5),i=Co(n),o=Mo(n),a=Hd(o.x),u=Wd(o.x),l=jd(o.x),c=qd(o.x),d=jd(o.y),h=qd(o.y),p=vn(i.x.add(l),i.y.add(d)).sub(.5).mul(t.xy),m=vn(i.x.add(c),i.y.add(d)).sub(.5).mul(t.xy),g=vn(i.x.add(l),i.y.add(h)).sub(.5).mul(t.xy),f=vn(i.x.add(c),i.y.add(h)).sub(.5).mul(t.xy),x=Hd(o.y).mul(Ki(a.mul(e.uv(p).level(s)),u.mul(e.uv(m).level(s)))),b=Wd(o.y).mul(Ki(a.mul(e.uv(g).level(s)),u.mul(e.uv(f).level(s))));return x.add(b)};class Yd extends Cr{constructor(e,t=Tn(3)){super("vec4"),this.textureNode=e,this.blurNode=t}setup(){return((e,t)=>{const s=vn(e.size(_n(t))),r=vn(e.size(_n(t.add(1)))),n=Ji(1,s),i=Ji(1,r),o=Xd(e,On(n,s),Co(t)),a=Xd(e,On(i,r),Eo(t));return Mo(t).mix(o,a)})(this.textureNode,this.blurNode)}}const Kd=cn(Yd);Ir("bicubic",Kd),fr("TextureBicubicNode",Yd);class Qd extends gr{constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const Zd=dn(Qd);fr("PointUVNode",Qd);class Jd extends gr{constructor(e=Jd.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=null!==this.scene?this.scene:e.scene;let r;return t===Jd.BACKGROUND_BLURRINESS?r=Ua("backgroundBlurriness","float",s):t===Jd.BACKGROUND_INTENSITY&&(r=Ua("backgroundIntensity","float",s)),r}}Jd.BACKGROUND_BLURRINESS="backgroundBlurriness",Jd.BACKGROUND_INTENSITY="backgroundIntensity";const eh=dn(Jd,Jd.BACKGROUND_BLURRINESS),th=dn(Jd,Jd.BACKGROUND_INTENSITY);fr("SceneNode",Jd);class sh extends al{constructor(e,t,s=0){super(e,t,s),this.isStorageBufferNode=!0}getInputType(){return"storageBuffer"}}const rh=(e,t,s)=>an(new sh(e,t,s));fr("StorageBufferNode",sh);class nh extends wa{constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStoreTextureNode=!0}getNodeType(){return"void"}}const ih=cn(nh);fr("TextureStoreNode",nh);class oh extends Ba{constructor(e,t,s=null){super(e,t,s),this.userData=s}update(e){this.reference=null!==this.userData?this.userData:e.object.userData,super.update(e)}}const ah=(e,t,s)=>an(new oh(e,t,s));fr("UserDataNode",oh);const uh=pn((({base:e,blend:t})=>{const s=s=>t[s].lessThan(xo).cond(t[s],e[s].oneMinus().div(t[s]).oneMinus().max(0));return Cn(s("x"),s("y"),s("z"))})),lh=pn((({base:e,blend:t})=>{const s=s=>t[s].equal(1).cond(t[s],e[s].div(t[s].oneMinus()).max(0));return Cn(s("x"),s("y"),s("z"))})),ch=pn((({base:e,blend:t})=>{const s=s=>e[s].oneMinus().mul(t[s].oneMinus()).oneMinus();return Cn(s("x"),s("y"),s("z"))})),dh=pn((({base:e,blend:t})=>{const s=s=>e[s].lessThan(.5).cond(e[s].mul(t[s],2),e[s].oneMinus().mul(t[s].oneMinus()).oneMinus());return Cn(s("x"),s("y"),s("z"))}));class hh extends Cr{constructor(e,t,s){super(),this.blendMode=e,this.baseNode=t,this.blendNode=s}setup(){const{blendMode:e,baseNode:t,blendNode:s}=this,r={base:t,blend:s};let n=null;return e===hh.BURN?n=uh(r):e===hh.DODGE?n=lh(r):e===hh.SCREEN?n=ch(r):e===hh.OVERLAY&&(n=dh(r)),n}}hh.BURN="burn",hh.DODGE="dodge",hh.SCREEN="screen",hh.OVERLAY="overlay";const ph=cn(hh,hh.BURN),mh=cn(hh,hh.DODGE),gh=cn(hh,hh.OVERLAY),fh=cn(hh,hh.SCREEN);Ir("burn",ph),Ir("dodge",mh),Ir("overlay",gh),Ir("screen",fh),fr("BlendModeNode",hh);class xh extends gr{constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){return e.getFrontFacing()}}const bh=dn(xh),Th=Tn(bh).mul(2).sub(1);fr("FrontFacingNode",xh);const _h=pn((({textureNode:e,bumpScale:t})=>{let s=e;if(!0!==s.isTextureNode&&s.traverse((e=>{!0===e.isTextureNode&&(s=e)})),!0!==s.isTextureNode)throw new Error("THREE.TSL: dHdxy_fwd() requires a TextureNode.");const r=Tn(e),n=s.uvNode||ji(),i=t=>e.cache().context({getUV:()=>t,forceUVContext:!0});return vn(Tn(i(n.add(n.dFdx()))).sub(r),Tn(i(n.add(n.dFdy()))).sub(r)).mul(t)})),yh=pn((e=>{const{surf_pos:t,surf_norm:s,dHdxy:r}=e,n=t.dFdx().normalize(),i=s,o=t.dFdy().normalize().cross(i),a=i.cross(n),u=n.dot(o).mul(Th),l=u.sign().mul(r.x.mul(o).add(r.y.mul(a)));return u.abs().mul(s).sub(l).normalize()}));class Nh extends Cr{constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=_h({textureNode:this.textureNode,bumpScale:e});return yh({surf_pos:Ku,surf_norm:hu,dHdxy:t})}}const vh=cn(Nh);Ir("bumpMap",vh),fr("BumpMapNode",Nh);const Sh=pn((({color:e,adjustment:t})=>t.mix(Fh(e),e))),Ah=pn((({color:e,adjustment:t})=>{const s=Ki(e.r,e.g,e.b).div(3),r=e.r.max(e.g.max(e.b)),n=r.sub(s).mul(t).mul(-3);return la(e,r,n)})),Rh=pn((({color:e,adjustment:t})=>{const s=Cn(.57735,.57735,.57735),r=t.cos();return Cn(e.rgb.mul(r).add(s.cross(e.rgb).mul(t.sin()).add(s.mul(sa(s,e.rgb).mul(r.oneMinus())))))}));class Ch extends Cr{constructor(e,t,s=Tn(1)){super("vec3"),this.method=e,this.colorNode=t,this.adjustmentNode=s}setup(){const{method:e,colorNode:t,adjustmentNode:s}=this,r={color:t,adjustment:s};let n=null;return e===Ch.SATURATION?n=Sh(r):e===Ch.VIBRANCE?n=Ah(r):e===Ch.HUE&&(n=Rh(r)),n}}Ch.SATURATION="saturation",Ch.VIBRANCE="vibrance",Ch.HUE="hue";const Eh=cn(Ch,Ch.SATURATION),wh=cn(Ch,Ch.VIBRANCE),Mh=cn(Ch,Ch.HUE),Oh=Cn(.2125,.7154,.0721),Fh=(e,t=Oh)=>sa(e,t);Ir("saturation",Eh),Ir("vibrance",wh),Ir("hue",Mh),fr("ColorAdjustmentNode",Ch);const Bh=pn((e=>{const{eye_pos:t,surf_norm:s,mapN:r,uv:n}=e,i=t.dFdx(),o=t.dFdy(),a=n.dFdx(),u=n.dFdy(),l=s,c=o.cross(l),d=l.cross(i),h=c.mul(a.x).add(d.mul(u.x)),p=c.mul(a.y).add(d.mul(u.y)),m=h.dot(h).max(p.dot(p)),g=Th.mul(m.inverseSqrt());return Ki(h.mul(r.x,g),p.mul(r.y,g),l.mul(r.z)).normalize()}));class Uh extends Cr{constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=H}setup(e){const{normalMapType:t,scaleNode:s}=this;let r=this.node.mul(2).sub(1);null!==s&&(r=Cn(r.xy.mul(s),r.z));let n=null;if(t===W)n=nu.mul(r).normalize();else if(t===H){n=!0===e.hasGeometryAttribute("tangent")?Lh.mul(r).normalize():Bh({eye_pos:Ku,surf_norm:hu,mapN:r,uv:ji()})}return n}}const Ih=cn(Uh),Lh=In(hl,Id,hu);Ir("normalMap",Ih),fr("NormalMapNode",Uh);class Dh extends Cr{constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const Ph=cn(Dh);Ir("posterize",Ph),fr("PosterizeNode",Dh);const Gh=pn((({color:e,exposure:t})=>e.mul(t).clamp())),kh=pn((({color:e,exposure:t})=>(e=e.mul(t)).div(e.add(1)).clamp())),Vh=pn((({color:e,exposure:t})=>{const s=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),r=e.mul(e.mul(6.2).add(1.7)).add(.06);return s.div(r).pow(2.2)})),zh=pn((({color:e})=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),s=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(s)})),$h=pn((({color:e,exposure:t})=>{const s=In(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),r=In(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=s.mul(e),e=zh({color:e}),(e=r.mul(e)).clamp()})),Hh={[q]:Gh,[X]:kh,[Y]:Vh,[K]:$h};class Wh extends Cr{constructor(e=j,t=Tn(1),s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}getCacheKey(){let e=super.getCacheKey();return e="{toneMapping:"+this.toneMapping+",nodes:"+e+"}",e}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===j)return t;const r={exposure:this.exposureNode,color:t},n=Hh[s];let i=null;return i=n?n(r):t,i}}const jh=(e,t,s)=>an(new Wh(e,an(t),an(s)));fr("ToneMappingNode",Wh);let qh=null;class Xh extends rc{constructor(e=Zl,t=null){null===qh&&(qh=new v),super(e,t,qh)}}const Yh=cn(Xh);Ir("viewportSharedTexture",Yh),fr("ViewportSharedTextureNode",Xh);class Kh extends gr{constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=s,this._includes=t}setIncludes(e){return this._includes=e,this}getIncludes(){return this._includes}generate(e){const t=this.getIncludes(e);for(const s of t)s.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const Qh=cn(Kh),Zh=(e,t)=>Qh(e,t,"js"),Jh=(e,t)=>Qh(e,t,"wgsl"),ep=(e,t)=>Qh(e,t,"glsl");fr("CodeNode",Kh);class tp extends Cr{constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],s=this.functionNode,r=s.getInputs(e),n=this.parameters;if(Array.isArray(n))for(let s=0;s<n.length;s++){const i=r[s],o=n[s];t.push(o.build(e,i.type))}else for(const s of r){const r=n[s.name];if(void 0===r)throw new Error(`FunctionCallNode: Input '${s.name}' not found in FunctionNode.`);t.push(r.build(e,s.type))}return`${s.build(e,"property")}( ${t.join(", ")} )`}}const sp=(e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?ln(t):un(t[0]),an(new tp(an(e),t)));Ir("call",sp),fr("FunctionCallNode",tp);class rp extends Kh{constructor(e="",t=[],s=""){super(e,t,s),this.keywords={}}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return void 0===s&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),r=s.name,n=s.type,i=e.getCodeFromNode(this,n);""!==r&&(i.name=r);const o=e.getPropertyName(i);let a=this.getNodeFunction(e).getCode(o);const u=this.keywords,l=Object.keys(u);if(l.length>0)for(const t of l){const s=new RegExp(`\\b${t}\\b`,"g"),r=u[t].build(e,"property");a=a.replace(s,r)}return i.code=a+"\n","property"===t?o:e.format(`${o}()`,n,t)}}const np=(e,t=[],s="")=>{for(let e=0;e<t.length;e++){const s=t[e];"function"==typeof s&&(t[e]=s.functionNode)}const r=an(new rp(e,t,s)),n=(...e)=>r.call(...e);return n.functionNode=r,n},ip=(e,t)=>np(e,t,"glsl"),op=(e,t)=>np(e,t,"wgsl");fr("FunctionNode",rp);class ap extends gr{constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new l,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:Tn()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=cr(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?dr(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const up=cn(ap);Ir("scriptableValue",up),fr("ScriptableValueNode",ap);class lp extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(null!==t){const r=t(...s);return this.set(e,r),r}}}class cp{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const dp=new lp;class hp extends gr{constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new lp,this._output=up(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return void 0===s[e]?s[e]=up(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):void 0===s[e]?(s[e]=up(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const s=this.getObject()[e];if("function"==typeof s)return s(...t)}async callAsync(e,...t){const s=this.getObject()[e];if("function"==typeof s)return"AsyncFunction"===s.constructor.name?await s(...t):s(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new cp(this),t=dp.get("THREE"),s=dp.get("TSL"),r=this.getMethod(this.codeNode),n=[e,this._local,dp,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,s];this._object=r(...n);const i=this._object.layout;if(i&&(!1===i.cache&&this._local.clear(),this._output.outputType=i.outputType||null,Array.isArray(i.elements)))for(const e of i.elements){const t=e.id||e.name;e.inputType&&(void 0===this.getParameter(t)&&this.setParameter(t,null),this.getParameter(t).inputType=e.inputType),e.outputType&&(void 0===this.getOutput(t)&&this.setOutput(t,null),this.getOutput(t).outputType=e.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const e in this.parameters){let t=this.parameters[e];t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:Tn()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",s="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],s),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const pp=cn(hp);Ir("scriptable",pp),fr("ScriptableNode",hp);class mp extends gr{constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}mixAssign(e){return this.mix(e,this.colorNode)}setup(){return this.factorNode}}const gp=cn(mp);Ir("fog",gp),fr("FogNode",mp);class fp extends mp{constructor(e,t,s){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=s}setup(){return pa(this.nearNode,this.farNode,Ku.z.negate())}}const xp=cn(fp);Ir("rangeFog",xp),fr("FogRangeNode",fp);class bp extends mp{constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(){const e=Ku.z.negate(),t=this.densityNode;return t.mul(t,e,e).negate().exp().oneMinus()}}const Tp=cn(bp);Ir("densityFog",Tp),fr("FogExp2Node",bp);let _p=null,yp=null;class Np extends gr{constructor(e=Tn(),t=Tn()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(ur(this.minNode.value)),s=e.getTypeLength(ur(this.maxNode.value));return t>s?t:s}getNodeType(e){return!0===e.object.isInstancedMesh?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(!0===t.isInstancedMesh){const r=this.minNode.value,n=this.maxNode.value,i=e.getTypeLength(ur(r)),a=e.getTypeLength(ur(n));_p=_p||new o,yp=yp||new o,_p.setScalar(0),yp.setScalar(0),1===i?_p.setScalar(r):r.isColor?_p.set(r.r,r.g,r.b):_p.set(r.x,r.y,r.z||0,r.w||0),1===a?yp.setScalar(n):n.isColor?yp.set(n.r,n.g,n.b):yp.set(n.x,n.y,n.z||0,n.w||0);const u=4,l=u*t.count,d=new Float32Array(l);for(let e=0;e<l;e++){const t=e%u,s=_p.getComponent(t),r=yp.getComponent(t);d[e]=c.lerp(s,r,Math.random())}const h=this.getNodeType(e);s=ul(d,"vec4",t.count).element(mi).convert(h)}else s=Tn(0);return s}}const vp=cn(Np);fr("RangeNode",Np);class Sp extends gr{constructor(e,t,s=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=s,this.dispatchCount=0,this.version=1,this.updateBeforeType=er.OBJECT,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let s=t[0];for(let e=1;e<t.length;e++)s*=t[e];this.dispatchCount=Math.ceil(e/s)}onInit(){}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if("compute"===t){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t)}}}const Ap=(e,t,s)=>an(new Sp(an(e),t,s));Ir("compute",Ap),fr("ComputeNode",Sp);class Rp extends gr{constructor(e=Rp.TARGET_DIRECTION,t=null){super(),this.scope=e,this.light=t}setup(){const{scope:e,light:t}=this;let s=null;return e===Rp.TARGET_DIRECTION&&(s=Qa.transformDirection($a(t).sub($a(t.target)))),s}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Rp.TARGET_DIRECTION="targetDirection";const Cp=cn(Rp,Rp.TARGET_DIRECTION);fr("LightNode",Rp);const Ep=pn((e=>{const{lightDistance:t,cutoffDistance:s,decayExponent:r}=e,n=t.pow(r).max(.01).reciprocal();return s.greaterThan(0).cond(n.mul(t.div(s).pow4().oneMinus().clamp().pow2()),n)}));class wp extends wl{constructor(e=null){super(e),this.cutoffDistanceNode=Yn(0),this.decayExponentNode=Yn(0)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setup(e){const{colorNode:t,cutoffDistanceNode:s,decayExponentNode:r,light:n}=this,i=e.context.lightingModel,o=Wa(n).sub(Ku),a=o.normalize(),u=o.length(),l=Ep({lightDistance:u,cutoffDistance:s,decayExponent:r}),c=t.mul(l),d=e.context.reflectedLight;i.direct({lightDirection:a,lightColor:c,reflectedLight:d},e.stack,e)}}fr("PointLightNode",wp),Ul(Q,wp);class Mp extends wl{constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,s=this.colorNode,r=Cp(this.light),n=e.context.reflectedLight;t.direct({lightDirection:r,lightColor:s,reflectedLight:n},e.stack,e)}}fr("DirectionalLightNode",Mp),Ul(Z,Mp);class Op extends wl{constructor(e=null){super(e),this.coneCosNode=Yn(0),this.penumbraCosNode=Yn(0),this.cutoffDistanceNode=Yn(0),this.decayExponentNode=Yn(0)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:s}=this;return pa(t,s,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:s,cutoffDistanceNode:r,decayExponentNode:n,light:i}=this,o=Wa(i).sub(Ku),a=o.normalize(),u=a.dot(Cp(i)),l=this.getSpotAttenuation(u),c=o.length(),d=Ep({lightDistance:c,cutoffDistance:r,decayExponent:n}),h=s.mul(l).mul(d),p=e.context.reflectedLight;t.direct({lightDirection:a,lightColor:h,reflectedLight:p},e.stack,e)}}fr("SpotLightNode",Op),Ul(J,Op);class Fp extends Op{getSpotAttenuation(e){const t=this.light.iesMap;let s=null;if(t&&!0===t.isTexture){const r=e.acos().mul(1/Math.PI);s=Ma(t,vn(r,0),0).r}else s=super.getSpotAttenuation(e);return s}}fr("IESSpotLightNode",Fp),Ul(class extends J{constructor(e,t,s,r,n,i){super(e,t,s,r,n,i),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}},Fp);class Bp extends wl{constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}fr("AmbientLightNode",Bp),Ul(ee,Bp);class Up extends wl{constructor(e=null){super(e),this.lightPositionNode=$a(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Yn(new r)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:r}=this,n=hu.dot(r).mul(.5).add(.5),i=la(s,t,n);e.context.irradiance.addAssign(i)}}fr("HemisphereLightNode",Up),Ul(te,Up);const Ip=pn((e=>{const t=e.uv.mul(2),s=t.x.floor(),r=t.y.floor();return s.add(r).mod(2).sign()}));class Lp extends Cr{constructor(e=ji()){super("float"),this.uvNode=e}setup(){return Ip({uv:this.uvNode})}}const Dp=cn(Lp);Ir("checker",Dp),fr("CheckerNode",Lp);class Pp extends se{constructor(e){super(e),this.textures={}}load(e,t,s,r){const n=new re(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(e,(s=>{try{t(this.parse(JSON.parse(s)))}catch(t){r&&r(t),this.manager.itemError(e)}}),s,r)}parseNodes(e){const t={};if(void 0!==e){for(const s of e){const{uuid:e,type:r}=s;t[e]=an(xr(r)),t[e].uuid=e}const s={nodes:t,textures:this.textures};for(const r of e){r.meta=s;t[r.uuid].deserialize(r),delete r.meta}}return t}parse(e){const t=an(xr(e.type));t.uuid=e.uuid;const s={nodes:this.parseNodes(e.nodes),textures:this.textures};return e.meta=s,t.deserialize(e),delete e.meta,t}setTextures(e){return this.textures=e,this}}const Gp=new ne;class kp extends Tc{constructor(e={}){super(),this.normals=!1,this.lights=!1,this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.pointWidth=1,this.pointColorNode=null,this.setDefaultValues(Gp),this.setupShaders(),this.setValues(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor;this.vertexNode=pn((()=>{ei(vn(),"vUv").assign(ji());const e=si("instancePosition"),t=Ai("vec4","mvPos");t.assign(ru.mul(On(e,1)));const s=Ql.z.div(Ql.w),r=qa.mul(t),n=Ai("vec2","offset");return n.assign(ju.xy),n.assign(n.mul(Hu)),n.assign(n.div(Ql.z)),n.y.assign(n.y.mul(s)),n.assign(n.mul(r.w)),r.assign(r.add(On(n,0,0))),r}))(),this.fragmentNode=pn((()=>{const s=ei(vn(),"vUv"),r=Ai("float","alpha");r.assign(1);const n=s.x,i=s.y,o=n.mul(n).add(i.mul(i));if(e){const e=Ai("float","dlen");e.assign(o.fwidth()),r.assign(pa(e.oneMinus(),e.add(1),o).oneMinus())}else o.greaterThan(1).discard();let a;if(this.pointColorNode)a=this.pointColorNode;else if(t){a=si("instanceColor").mul(_u)}else a=_u;return On(a,r)}))(),this.needsUpdate=!0}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.setupShaders())}}_c("InstancedPointsNodeMaterial",kp);const Vp=new ie;class zp extends Tc{constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.normals=!1,this.setDefaultValues(Vp),this.setValues(e)}}_c("LineBasicNodeMaterial",zp);const $p=new oe;class Hp extends Tc{constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.normals=!1,this.setDefaultValues($p),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode,t=this.dashScaleNode?Tn(this.dashScaleNode):Gu,s=this.dashSizeNode?Tn(this.dashSizeNode):ku,r=this.dashSizeNode?Tn(this.dashGapNode):Vu;ki.assign(s),Vi.assign(r);const n=ei(si("lineDistance").mul(t));(e?n.add(e):n).mod(ki.add(Vi)).greaterThan(ki).discard()}}_c("LineDashedNodeMaterial",Hp);const Wp=new oe;class jp extends Tc{constructor(e={}){super(),this.normals=!1,this.lights=!1,this.setDefaultValues(Wp),this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.useDash=e.dashed,this.useWorldUnits=!1,this.dashOffset=0,this.lineWidth=1,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setupShaders(),this.setValues(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor,s=this.dashed,r=this.worldUnits,n=pn((({start:e,end:t})=>{const s=qa.element(2).element(2),r=qa.element(3).element(2).mul(-.5).div(s).sub(e.z).div(t.z.sub(e.z));return On(la(e.xyz,t.xyz,r),t.w)}));this.vertexNode=pn((()=>{Ri("vec2","vUv").assign(ji());const e=si("instanceStart"),t=si("instanceEnd"),i=Ai("vec4","start"),o=Ai("vec4","end");i.assign(ru.mul(On(e,1))),o.assign(ru.mul(On(t,1))),r&&(Ri("vec3","worldStart").assign(i.xyz),Ri("vec3","worldEnd").assign(o.xyz));const a=Ql.z.div(Ql.w),u=qa.element(2).element(3).equal(-1);fn(u,(()=>{fn(i.z.lessThan(0).and(o.z.greaterThan(0)),(()=>{o.assign(n({start:i,end:o}))})).elseif(o.z.lessThan(0).and(i.z.greaterThanEqual(0)),(()=>{i.assign(n({start:o,end:i}))}))}));const l=qa.mul(i),c=qa.mul(o),d=l.xyz.div(l.w),h=c.xyz.div(c.w),p=h.xy.sub(d.xy).temp();p.x.assign(p.x.mul(a)),p.assign(p.normalize());const m=xi(On());if(r){const e=o.xyz.sub(i.xyz).normalize(),t=ju.y.lessThan(.5).cond(i.xyz.cross(e).normalize(),o.xyz.cross(e).normalize());t.assign(ju.x.lessThan(0).cond(t.negate(),t));const r=e.dot(Cn(0,0,1));s||(i.assign(i.sub(On(e.mul(zu).mul(.5),0))),o.assign(o.add(On(e.mul(zu).mul(.5),0))),t.assign(t.sub(Cn(p.mul(r),0))),t.z.assign(t.z.add(.5))),fn(ju.y.greaterThan(1).or(ju.y.lessThan(0)),(()=>{t.assign(t.add(Cn(p.mul(2).mul(r),0)))})),t.assign(t.mul(zu).mul(.5));const n=Ri("vec4","worldPos");n.assign(ju.y.lessThan(.5).cond(i,o)),n.assign(n.add(On(t,0))),m.assign(qa.mul(n));const a=xi(Cn());a.assign(ju.y.lessThan(.5).cond(d,h)),m.z.assign(a.z.mul(m.w))}else{const e=Ai("vec2","offset");e.assign(vn(p.y,p.x.negate())),p.x.assign(p.x.div(a)),e.x.assign(e.x.div(a)),e.assign(ju.x.lessThan(0).cond(e.negate(),e)),fn(ju.y.lessThan(0),(()=>{e.assign(e.sub(p))})).elseif(ju.y.greaterThan(1),(()=>{e.assign(e.add(p))})),e.assign(e.mul(zu)),e.assign(e.div(Ql.w)),m.assign(ju.y.lessThan(.5).cond(l,c)),e.assign(e.mul(m.w)),m.assign(m.add(On(e,0,0)))}return m}))();const i=pn((({p1:e,p2:t,p3:s,p4:r})=>{const n=e.sub(s),i=r.sub(s),o=t.sub(e),a=n.dot(i),u=i.dot(o),l=n.dot(o),c=i.dot(i),d=o.dot(o).mul(c).sub(u.mul(u)),h=a.mul(u).sub(l.mul(c)).div(d).clamp(),p=a.add(u.mul(h)).div(c).clamp();return vn(h,p)}));this.fragmentNode=pn((()=>{const n=Ri("vec2","vUv");if(s){const e=this.offsetNode?Tn(this.offsetNodeNode):$u,t=this.dashScaleNode?Tn(this.dashScaleNode):Gu,s=this.dashSizeNode?Tn(this.dashSizeNode):ku,r=this.dashSizeNode?Tn(this.dashGapNode):Vu;ki.assign(s),Vi.assign(r);const i=si("instanceDistanceStart"),o=si("instanceDistanceEnd"),a=ju.y.lessThan(.5).cond(t.mul(i),Gu.mul(o)),u=ei(a.add($u)),l=e?u.add(e):u;n.y.lessThan(-1).or(n.y.greaterThan(1)).discard(),l.mod(ki.add(Vi)).greaterThan(ki).discard()}const o=Ai("float","alpha");if(o.assign(1),r){const t=Ri("vec3","worldStart"),r=Ri("vec3","worldEnd"),n=Ri("vec4","worldPos").xyz.normalize().mul(1e5),a=r.sub(t),u=i({p1:t,p2:r,p3:Cn(0,0,0),p4:n}),l=t.add(a.mul(u.x)),c=n.mul(u.y),d=l.sub(c).length().div(zu);if(!s)if(e){const e=d.fwidth();o.assign(pa(e.negate().add(.5),e.add(.5),d).oneMinus())}else d.greaterThan(.5).discard()}else if(e){const e=n.x,t=n.y.greaterThan(0).cond(n.y.sub(1),n.y.add(1)),s=e.mul(e).add(t.mul(t)),r=Ai("float","dlen");r.assign(s.fwidth()),fn(n.y.abs().greaterThan(1),(()=>{o.assign(pa(r.oneMinus(),r.add(1),s).oneMinus())}))}else fn(n.y.abs().greaterThan(1),(()=>{const e=n.x,t=n.y.greaterThan(0).cond(n.y.sub(1),n.y.add(1));e.mul(e).add(t.mul(t)).greaterThan(1).discard()}));let a;if(this.lineColorNode)a=this.lineColorNode;else if(t){const e=si("instanceColorStart"),t=si("instanceColorEnd");a=ju.y.lessThan(.5).cond(e,t).mul(_u)}else a=_u;return On(a,o)}))(),this.needsUpdate=!0}get worldUnits(){return this.useWorldUnits}set worldUnits(e){this.useWorldUnits!==e&&(this.useWorldUnits=e,this.setupShaders())}get dashed(){return this.useDash}set dashed(e){this.useDash!==e&&(this.useDash=e,this.setupShaders())}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.setupShaders())}}_c("Line2NodeMaterial",jp);const qp=new ae;class Xp extends Tc{constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.colorSpaced=!1,this.setDefaultValues(qp),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?Tn(this.opacityNode):vu;Ci.assign(On(_d(mu),e))}}_c("MeshNormalNodeMaterial",Xp);const Yp=new ue;class Kp extends Tc{constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(Yp),this.setValues(e)}}_c("MeshBasicNodeMaterial",Kp);const Qp=pn((({f0:e,f90:t,dotVH:s})=>{const r=s.mul(-5.55473).sub(6.98316).mul(s).exp2();return e.mul(r.oneMinus()).add(t.mul(r))})),Zp=pn((e=>e.diffuseColor.mul(1/Math.PI))),Jp=pn((({dotNH:e})=>Pi.mul(.5/Math.PI).add(1).mul(e.pow(Pi)))),em=pn((({lightDirection:e})=>{const t=e.add(Qu).normalize(),s=mu.dot(t).clamp(),r=Qu.dot(t).clamp(),n=Qp({f0:Di,f90:1,dotVH:r}),i=Tn(.25),o=Jp({dotNH:s});return n.mul(i).mul(o)}));class tm extends gi{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=mu.dot(e).clamp().mul(t);s.directDiffuse.addAssign(r.mul(Zp({diffuseColor:Ci.rgb}))),!0===this.specular&&s.directSpecular.addAssign(r.mul(em({lightDirection:e})).mul(Au))}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(Zp({diffuseColor:Ci})))}}const sm=new le;class rm extends Tc{constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(sm),this.setValues(e)}setupLightingModel(){return new tm(!1)}}_c("MeshLambertNodeMaterial",rm);const nm=new ce;class im extends Tc{constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(nm),this.setValues(e)}setupLightingModel(){return new tm}setupVariants(){const e=(this.shininessNode?Tn(this.shininessNode):yu).max(1e-4);Pi.assign(e);const t=this.specularNode||Su;Di.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}_c("MeshPhongNodeMaterial",im);const om=pn((()=>{const e=cu.dFdx().abs().max(cu.dFdy().abs());return e.x.max(e.y).max(e.z)})),am=pn((e=>{const{roughness:t}=e,s=om();let r=t.max(.0525);return r=r.add(s),r=r.min(1),r})),um=pn((e=>{const{alpha:t,dotNL:s,dotNV:r}=e,n=t.pow2(),i=s.mul(n.add(n.oneMinus().mul(r.pow2())).sqrt()),o=r.mul(n.add(n.oneMinus().mul(s.pow2())).sqrt());return Ji(.5,i.add(o).max(xo))})).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),lm=pn((({alpha:e,dotNH:t})=>{const s=e.pow2(),r=t.pow2().mul(s.oneMinus()).oneMinus();return s.div(r.pow2()).mul(1/Math.PI)})).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),cm=pn((e=>{const{lightDirection:t,f0:s,f90:r,roughness:n,iridescenceFresnel:i}=e,o=e.normalView||mu,a=n.pow2(),u=t.add(Qu).normalize(),l=o.dot(t).clamp(),c=o.dot(Qu).clamp(),d=o.dot(u).clamp(),h=Qu.dot(u).clamp();let p=Qp({f0:s,f90:r,dotVH:h});i&&(p=Ui.mix(p,i));const m=um({alpha:a,dotNL:l,dotNV:c}),g=lm({alpha:a,dotNH:d});return p.mul(m).mul(g)})),dm=pn((({roughness:e,dotNV:t})=>{const s=On(-1,-.0275,-.572,.022),r=On(1,.0425,1.04,-.04),n=e.mul(s).add(r),i=n.x.mul(n.x).min(t.mul(-9.28).exp2()).mul(n.x).add(n.y);return vn(-1.04,1.04).mul(i).add(n.zw)})).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),hm=pn((e=>{const{dotNV:t,specularColor:s,specularF90:r,roughness:n}=e,i=dm({dotNV:t,roughness:n});return s.mul(i.x).add(r.mul(i.y))})),pm=pn((({f:e,f90:t,dotVH:s})=>{const r=s.oneMinus().saturate(),n=r.mul(r),i=r.mul(n,n).clamp(0,.9999);return e.sub(Cn(t).mul(i)).div(i.oneMinus())})).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),mm=pn((({roughness:e,dotNH:t})=>{const s=e.pow2(),r=Tn(1).div(s),n=t.pow2().oneMinus().max(.0078125);return Tn(2).add(r).mul(n.pow(r.mul(.5))).div(2*Math.PI)})).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),gm=pn((({dotNV:e,dotNL:t})=>Tn(1).div(Tn(4).mul(t.add(e).sub(t.mul(e)))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),fm=pn((({lightDirection:e})=>{const t=e.add(Qu).normalize(),s=mu.dot(e).clamp(),r=mu.dot(Qu).clamp(),n=mu.dot(t).clamp(),i=mm({roughness:Bi,dotNH:n}),o=gm({dotNV:r,dotNL:s});return Fi.mul(i).mul(o)})),xm=In(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),bm=(e,t)=>e.sub(t).div(e.add(t)).pow2(),Tm=(e,t)=>{const s=e.mul(2*Math.PI*1e-9),r=Cn(54856e-17,44201e-17,52481e-17),n=Cn(1681e3,1795300,2208400),i=Cn(43278e5,93046e5,66121e5),o=Tn(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(s.mul(2239900).add(t.x).cos()).mul(s.pow2().mul(-45282e5).exp());let a=r.mul(i.mul(2*Math.PI).sqrt()).mul(n.mul(s).add(t).cos()).mul(s.pow2().negate().mul(i).exp());a=Cn(a.x.add(o),a.y,a.z).div(1.0685e-7);return xm.mul(a)},_m=pn((({outsideIOR:e,eta2:t,cosTheta1:s,thinFilmThickness:r,baseF0:n})=>{const i=la(e,t,pa(0,.03,r)),o=e.div(i).pow2().mul(Tn(1).sub(s.pow2())),a=Tn(1).sub(o).sqrt(),u=bm(i,e),l=Qp({f0:u,f90:1,dotVH:s}),c=l.oneMinus(),d=i.lessThan(e).cond(Math.PI,0),h=Tn(Math.PI).sub(d),p=(e=>{const t=e.sqrt();return Cn(1).add(t).div(Cn(1).sub(t))})(n.clamp(0,.9999)),m=bm(p,i.vec3()),g=Qp({f0:m,f90:1,dotVH:a}),f=Cn(p.x.lessThan(i).cond(Math.PI,0),p.y.lessThan(i).cond(Math.PI,0),p.z.lessThan(i).cond(Math.PI,0)),x=i.mul(r,a,2),b=Cn(h).add(f),T=l.mul(g).clamp(1e-5,.9999),_=T.sqrt(),y=c.pow2().mul(g).div(Cn(1).sub(T));let N=l.add(y),v=y.sub(c);for(let e=1;e<=2;++e){v=v.mul(_);const t=Tm(Tn(e).mul(x),Tn(e).mul(b)).mul(2);N=N.add(v.mul(t))}return N.max(Cn(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),ym=pn((({normal:e,viewDir:t,roughness:s})=>{const r=e.dot(t).saturate(),n=s.pow2(),i=Pc(s.lessThan(.25),Tn(-339.2).mul(n).add(Tn(161.4).mul(s)).sub(25.9),Tn(-8.48).mul(n).add(Tn(14.3).mul(s)).sub(9.95)),o=Pc(s.lessThan(.25),Tn(44).mul(n).sub(Tn(23.7).mul(s)).add(3.26),Tn(1.97).mul(n).sub(Tn(3.27).mul(s)).add(.72));return Pc(s.lessThan(.25),0,Tn(.1).mul(s).sub(.025)).add(i.mul(r).add(o).exp()).mul(1/Math.PI).saturate()})),Nm=Cn(.04),vm=Cn(1);class Sm extends gi{constructor(e=!1,t=!1,s=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(){if(!0===this.clearcoat&&(this.clearcoatRadiance=Cn().temp("clearcoatRadiance"),this.clearcoatSpecularDirect=Cn().temp("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=Cn().temp("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=Cn().temp("sheenSpecularDirect"),this.sheenSpecularIndirect=Cn().temp("sheenSpecularIndirect")),!0===this.iridescence){const e=mu.dot(Qu).clamp();this.iridescenceFresnel=_m({outsideIOR:Tn(1),eta2:Ii,cosTheta1:e,thinFilmThickness:Li,baseF0:Di}),this.iridescenceF0=pm({f:this.iridescenceFresnel,f90:1,dotVH:e})}}computeMultiscattering(e,t,s=Tn(1)){const r=mu.dot(Qu).clamp(),n=dm({roughness:Ei,dotNV:r}),i=(this.iridescenceF0?Ui.mix(Di,this.iridescenceF0):Di).mul(n.x).add(s.mul(n.y)),o=n.x.add(n.y).oneMinus(),a=Di.add(Di.oneMinus().mul(.047619)),u=i.mul(a).div(o.mul(a).oneMinus());e.addAssign(i),t.addAssign(u.mul(o))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=mu.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(r.mul(fm({lightDirection:e}))),!0===this.clearcoat){const s=fu.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(s.mul(cm({lightDirection:e,f0:Nm,f90:vm,roughness:Oi,normalView:fu})))}s.directDiffuse.addAssign(r.mul(Zp({diffuseColor:Ci.rgb}))),s.directSpecular.addAssign(r.mul(cm({lightDirection:e,f0:Di,f90:1,roughness:Ei,iridescence:this.iridescence,iridescenceFresnel:this.iridescenceFresnel})))}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(Zp({diffuseColor:Ci})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:s}){if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(t.mul(Fi,ym({normal:mu,viewDir:Qu,roughness:Bi}))),!0===this.clearcoat){const e=fu.dot(Qu).clamp(),t=hm({dotNV:e,specularColor:Nm,specularF90:vm,roughness:Oi});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const r=Cn().temp("singleScattering"),n=Cn().temp("multiScattering"),i=t.mul(1/Math.PI);this.computeMultiscattering(r,n);const o=r.add(n),a=Ci.mul(o.r.max(o.g).max(o.b).oneMinus());s.indirectSpecular.addAssign(e.mul(r)),s.indirectSpecular.addAssign(n.mul(i)),s.indirectDiffuse.addAssign(a.mul(i))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const s=mu.dot(Qu).clamp().add(e),r=Ei.mul(-16).oneMinus().negate().exp2(),n=e.sub(s.pow(r).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(e),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(n)}finish(e){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=fu.dot(Qu).clamp(),s=Qp({dotVH:e,f0:Nm,f90:vm}),r=t.mul(Mi.mul(s).oneMinus()).add(this.clearcoatSpecularDirect,this.clearcoatSpecularIndirect).mul(Mi);t.assign(r)}if(!0===this.sheen){const e=Fi.r.max(Fi.g).max(Fi.b).mul(.157).oneMinus(),s=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(s)}}}const Am=new de;class Rm extends Tc{constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(Am),this.setValues(e)}setupLightingModel(){return new Sm}setupVariants(){const e=this.metalnessNode?Tn(this.metalnessNode):Eu;wi.assign(e);let t=this.roughnessNode?Tn(this.roughnessNode):Cu;t=am({roughness:t}),Ei.assign(t);const s=la(Cn(.04),Ci.rgb,e);Di.assign(s),Ci.assign(On(Ci.rgb.mul(e.oneMinus()),Ci.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}_c("MeshStandardNodeMaterial",Rm);const Cm=new he;class Em extends Rm{constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.setDefaultValues(Cm),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}setupLightingModel(){return new Sm(this.useClearcoat,this.useSheen,this.useIridescence)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?Tn(this.clearcoatNode):Mu,t=this.clearcoatRoughnessNode?Tn(this.clearcoatRoughnessNode):Ou;Mi.assign(e),Oi.assign(t)}if(this.useSheen){const e=this.sheenNode?Cn(this.sheenNode):Uu,t=this.sheenRoughnessNode?Tn(this.sheenRoughnessNode):Iu;Fi.assign(e),Bi.assign(t)}if(this.useIridescence){const e=this.iridescenceNode?Tn(this.iridescenceNode):Lu,t=this.iridescenceIORNode?Tn(this.iridescenceIORNode):Du,s=this.iridescenceThicknessNode?Tn(this.iridescenceThicknessNode):Pu;Ui.assign(e),Ii.assign(t),Li.assign(s)}}setupNormal(e){super.setupNormal(e);const t=this.clearcoatNormalNode?Cn(this.clearcoatNormalNode):Fu;fu.assign(t)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,super.copy(e)}}_c("MeshPhysicalNodeMaterial",Em);const wm=new ne;class Mm extends Tc{constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.normals=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(wm),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}_c("PointsNodeMaterial",Mm);const Om=new pe;class Fm extends Tc{constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this.normals=!1,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(Om),this.setValues(e)}setupPosition({object:e,context:t}){const{positionNode:s,rotationNode:r,scaleNode:n}=this,i=qu;let o=ru.mul(Cn(s||0)),a=vn(iu[0].xyz.length(),iu[1].xyz.length());null!==n&&(a=a.mul(n));let u=i.xy;e.center&&!0===e.center.isVector2&&(u=u.sub(Yn(e.center).sub(.5))),u=u.mul(a);const l=Tn(r||Bu),c=l.cos(),d=l.sin(),h=vn(vn(c,d.negate()).dot(u),vn(d,c).dot(u));o=On(o.xy.add(h),o.zw);const p=qa.mul(o);return t.vertex=i,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}}_c("SpriteNodeMaterial",Fm);const Bm=me.createMaterialFromType;me.createMaterialFromType=function(e){const t=yc(e);return void 0!==t?t:Bm.call(this,e)};class Um extends me{constructor(e){super(e),this.nodes={}}parse(e){const t=super.parse(e),s=this.nodes,r=e.inputNodes;for(const e in r){const n=r[e];t[e]=s[n]}return t}setNodes(e){return this.nodes=e,this}}class Im extends ge{constructor(e){super(e),this._nodesJSON=null}parse(e,t){this._nodesJSON=e.nodes;const s=super.parse(e,t);return this._nodesJSON=null,s}parseNodes(e,t){if(void 0!==e){const s=new Pp;return s.setTextures(t),s.parseNodes(e)}return{}}parseMaterials(e,t){const s={};if(void 0!==e){const r=this.parseNodes(this._nodesJSON,t),n=new Um;n.setTextures(t),n.setNodes(r);for(let t=0,r=e.length;t<r;t++){const r=e[t];s[r.uuid]=n.parse(r)}}return s}}class Lm{parseFunction(){}}class Dm{constructor(e,t,s="",r=""){this.type=e,this.inputs=t,this.name=s,this.presicion=r}getCode(){}}Dm.isNodeFunction=!0;const Pm=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,Gm=/[a-z_0-9]+/gi,km="#pragma main";class Vm extends Dm{constructor(e){const{type:t,inputs:s,name:r,presicion:n,inputsCode:i,blockCode:o,headerCode:a}=(e=>{const t=(e=e.trim()).indexOf(km),s=-1!==t?e.slice(t+12):e,r=s.match(Pm);if(null!==r&&5===r.length){const n=r[4],i=[];let o=null;for(;null!==(o=Gm.exec(n));)i.push(o);const a=[];let u=0;for(;u<i.length;){const e="const"===i[u][0];!0===e&&u++;let t=i[u][0];"in"===t||"out"===t||"inout"===t?u++:t="";const s=i[u++][0];let r=Number.parseInt(i[u][0]);!1===Number.isNaN(r)?u++:r=null;const n=i[u++][0];a.push(new Yc(s,n,r,t,e))}const l=s.substring(r[0].length),c=void 0!==r[3]?r[3]:"";return{type:r[2],inputs:a,name:c,presicion:void 0!==r[1]?r[1]:"",inputsCode:n,blockCode:l,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,s,r,n),this.inputsCode=i,this.blockCode=o,this.headerCode=a}getCode(e=this.name){let t;const s=this.blockCode;if(""!==s){const{type:r,inputsCode:n,headerCode:i,presicion:o}=this;let a=`${r} ${e} ( ${n.trim()} )`;""!==o&&(a=`${o} ${a}`),t=i+a+s}else t="";return t}}class zm extends Lm{parseFunction(e){return new Vm(e)}}const $m=[ep('float mx_select(bool b, float t, float f)\n{\n    return b ? t : f;\n}\n\nfloat mx_negate_if(float val, bool b)\n{\n    return b ? -val : val;\n}\n\nint mx_floor(float x)\n{\n    return int(floor(x));\n}\n\n// return mx_floor as well as the fractional remainder\nfloat mx_floorfrac(float x, out int i)\n{\n    i = mx_floor(x);\n    return x - float(i);\n}\n\nfloat mx_bilerp(float v0, float v1, float v2, float v3, float s, float t)\n{\n    float s1 = 1.0 - s;\n    return (1.0 - t) * (v0*s1 + v1*s) + t * (v2*s1 + v3*s);\n}\nvec3 mx_bilerp(vec3 v0, vec3 v1, vec3 v2, vec3 v3, float s, float t)\n{\n    float s1 = 1.0 - s;\n    return (1.0 - t) * (v0*s1 + v1*s) + t * (v2*s1 + v3*s);\n}\nfloat mx_trilerp(float v0, float v1, float v2, float v3, float v4, float v5, float v6, float v7, float s, float t, float r)\n{\n    float s1 = 1.0 - s;\n    float t1 = 1.0 - t;\n    float r1 = 1.0 - r;\n    return (r1*(t1*(v0*s1 + v1*s) + t*(v2*s1 + v3*s)) +\n            r*(t1*(v4*s1 + v5*s) + t*(v6*s1 + v7*s)));\n}\nvec3 mx_trilerp(vec3 v0, vec3 v1, vec3 v2, vec3 v3, vec3 v4, vec3 v5, vec3 v6, vec3 v7, float s, float t, float r)\n{\n    float s1 = 1.0 - s;\n    float t1 = 1.0 - t;\n    float r1 = 1.0 - r;\n    return (r1*(t1*(v0*s1 + v1*s) + t*(v2*s1 + v3*s)) +\n            r*(t1*(v4*s1 + v5*s) + t*(v6*s1 + v7*s)));\n}\n\n// 2 and 3 dimensional gradient functions - perform a dot product against a\n// randomly chosen vector. Note that the gradient vector is not normalized, but\n// this only affects the overal "scale" of the result, so we simply account for\n// the scale by multiplying in the corresponding "perlin" function.\nfloat mx_gradient_float(uint hash, float x, float y)\n{\n    // 8 possible directions (+-1,+-2) and (+-2,+-1)\n    uint h = hash & 7u;\n    float u = mx_select(h<4u, x, y);\n    float v = 2.0 * mx_select(h<4u, y, x);\n    // compute the dot product with (x,y).\n    return mx_negate_if(u, bool(h&1u)) + mx_negate_if(v, bool(h&2u));\n}\nfloat mx_gradient_float(uint hash, float x, float y, float z)\n{\n    // use vectors pointing to the edges of the cube\n    uint h = hash & 15u;\n    float u = mx_select(h<8u, x, y);\n    float v = mx_select(h<4u, y, mx_select((h==12u)||(h==14u), x, z));\n    return mx_negate_if(u, bool(h&1u)) + mx_negate_if(v, bool(h&2u));\n}\nvec3 mx_gradient_vec3(uvec3 hash, float x, float y)\n{\n    return vec3(mx_gradient_float(hash.x, x, y), mx_gradient_float(hash.y, x, y), mx_gradient_float(hash.z, x, y));\n}\nvec3 mx_gradient_vec3(uvec3 hash, float x, float y, float z)\n{\n    return vec3(mx_gradient_float(hash.x, x, y, z), mx_gradient_float(hash.y, x, y, z), mx_gradient_float(hash.z, x, y, z));\n}\n// Scaling factors to normalize the result of gradients above.\n// These factors were experimentally calculated to be:\n//    2D:   0.6616\n//    3D:   0.9820\nfloat mx_gradient_scale2d(float v) { return 0.6616 * v; }\nfloat mx_gradient_scale3d(float v) { return 0.9820 * v; }\nvec3 mx_gradient_scale2d(vec3 v) { return 0.6616 * v; }\nvec3 mx_gradient_scale3d(vec3 v) { return 0.9820 * v; }\n\n/// Bitwise circular rotation left by k bits (for 32 bit unsigned integers)\nuint mx_rotl32(uint x, int k)\n{\n    return (x<<k) | (x>>(32-k));\n}\n\nvoid mx_bjmix(inout uint a, inout uint b, inout uint c)\n{\n    a -= c; a ^= mx_rotl32(c, 4); c += b;\n    b -= a; b ^= mx_rotl32(a, 6); a += c;\n    c -= b; c ^= mx_rotl32(b, 8); b += a;\n    a -= c; a ^= mx_rotl32(c,16); c += b;\n    b -= a; b ^= mx_rotl32(a,19); a += c;\n    c -= b; c ^= mx_rotl32(b, 4); b += a;\n}\n\n// Mix up and combine the bits of a, b, and c (doesn\'t change them, but\n// returns a hash of those three original values).\nuint mx_bjfinal(uint a, uint b, uint c)\n{\n    c ^= b; c -= mx_rotl32(b,14);\n    a ^= c; a -= mx_rotl32(c,11);\n    b ^= a; b -= mx_rotl32(a,25);\n    c ^= b; c -= mx_rotl32(b,16);\n    a ^= c; a -= mx_rotl32(c,4);\n    b ^= a; b -= mx_rotl32(a,14);\n    c ^= b; c -= mx_rotl32(b,24);\n    return c;\n}\n\n// Convert a 32 bit integer into a floating point number in [0,1]\nfloat mx_bits_to_01(uint bits)\n{\n    return float(bits) / float(uint(0xffffffff));\n}\n\nfloat mx_fade(float t)\n{\n   return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n}\n\nuint mx_hash_int(int x)\n{\n    uint len = 1u;\n    uint seed = uint(0xdeadbeef) + (len << 2u) + 13u;\n    return mx_bjfinal(seed+uint(x), seed, seed);\n}\n\nuint mx_hash_int(int x, int y)\n{\n    uint len = 2u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z)\n{\n    uint len = 3u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z, int xx)\n{\n    uint len = 4u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    mx_bjmix(a, b, c);\n    a += uint(xx);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z, int xx, int yy)\n{\n    uint len = 5u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    mx_bjmix(a, b, c);\n    a += uint(xx);\n    b += uint(yy);\n    return mx_bjfinal(a, b, c);\n}\n\nuvec3 mx_hash_vec3(int x, int y)\n{\n    uint h = mx_hash_int(x, y);\n    // we only need the low-order bits to be random, so split out\n    // the 32 bit result into 3 parts for each channel\n    uvec3 result;\n    result.x = (h      ) & 0xFFu;\n    result.y = (h >> 8 ) & 0xFFu;\n    result.z = (h >> 16) & 0xFFu;\n    return result;\n}\n\nuvec3 mx_hash_vec3(int x, int y, int z)\n{\n    uint h = mx_hash_int(x, y, z);\n    // we only need the low-order bits to be random, so split out\n    // the 32 bit result into 3 parts for each channel\n    uvec3 result;\n    result.x = (h      ) & 0xFFu;\n    result.y = (h >> 8 ) & 0xFFu;\n    result.z = (h >> 16) & 0xFFu;\n    return result;\n}\n\nfloat mx_perlin_noise_float(vec2 p)\n{\n    int X, Y;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float result = mx_bilerp(\n        mx_gradient_float(mx_hash_int(X  , Y  ), fx    , fy     ),\n        mx_gradient_float(mx_hash_int(X+1, Y  ), fx-1.0, fy     ),\n        mx_gradient_float(mx_hash_int(X  , Y+1), fx    , fy-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y+1), fx-1.0, fy-1.0),\n        u, v);\n    return mx_gradient_scale2d(result);\n}\n\nfloat mx_perlin_noise_float(vec3 p)\n{\n    int X, Y, Z;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float fz = mx_floorfrac(p.z, Z);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float w = mx_fade(fz);\n    float result = mx_trilerp(\n        mx_gradient_float(mx_hash_int(X  , Y  , Z  ), fx    , fy    , fz     ),\n        mx_gradient_float(mx_hash_int(X+1, Y  , Z  ), fx-1.0, fy    , fz     ),\n        mx_gradient_float(mx_hash_int(X  , Y+1, Z  ), fx    , fy-1.0, fz     ),\n        mx_gradient_float(mx_hash_int(X+1, Y+1, Z  ), fx-1.0, fy-1.0, fz     ),\n        mx_gradient_float(mx_hash_int(X  , Y  , Z+1), fx    , fy    , fz-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y  , Z+1), fx-1.0, fy    , fz-1.0),\n        mx_gradient_float(mx_hash_int(X  , Y+1, Z+1), fx    , fy-1.0, fz-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y+1, Z+1), fx-1.0, fy-1.0, fz-1.0),\n        u, v, w);\n    return mx_gradient_scale3d(result);\n}\n\nvec3 mx_perlin_noise_vec3(vec2 p)\n{\n    int X, Y;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    vec3 result = mx_bilerp(\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  ), fx    , fy     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  ), fx-1.0, fy     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1), fx    , fy-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1), fx-1.0, fy-1.0),\n        u, v);\n    return mx_gradient_scale2d(result);\n}\n\nvec3 mx_perlin_noise_vec3(vec3 p)\n{\n    int X, Y, Z;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float fz = mx_floorfrac(p.z, Z);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float w = mx_fade(fz);\n    vec3 result = mx_trilerp(\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  , Z  ), fx    , fy    , fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  , Z  ), fx-1.0, fy    , fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1, Z  ), fx    , fy-1.0, fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1, Z  ), fx-1.0, fy-1.0, fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  , Z+1), fx    , fy    , fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  , Z+1), fx-1.0, fy    , fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1, Z+1), fx    , fy-1.0, fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1, Z+1), fx-1.0, fy-1.0, fz-1.0),\n        u, v, w);\n    return mx_gradient_scale3d(result);\n}\n\nfloat mx_cell_noise_float(float p)\n{\n    int ix = mx_floor(p);\n    return mx_bits_to_01(mx_hash_int(ix));\n}\n\nfloat mx_cell_noise_float(vec2 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    return mx_bits_to_01(mx_hash_int(ix, iy));\n}\n\nfloat mx_cell_noise_float(vec3 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    return mx_bits_to_01(mx_hash_int(ix, iy, iz));\n}\n\nfloat mx_cell_noise_float(vec4 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    int iw = mx_floor(p.w);\n    return mx_bits_to_01(mx_hash_int(ix, iy, iz, iw));\n}\n\nvec3 mx_cell_noise_vec3(float p)\n{\n    int ix = mx_floor(p);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, 0)),\n            mx_bits_to_01(mx_hash_int(ix, 1)),\n            mx_bits_to_01(mx_hash_int(ix, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec2 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec3 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec4 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    int iw = mx_floor(p.w);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 2))\n    );\n}\n\nfloat mx_fractal_noise_float(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    float result = 0.0;\n    float amplitude = 1.0;\n    for (int i = 0;  i < octaves; ++i)\n    {\n        result += amplitude * mx_perlin_noise_float(p);\n        amplitude *= diminish;\n        p *= lacunarity;\n    }\n    return result;\n}\n\nvec3 mx_fractal_noise_vec3(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    vec3 result = vec3(0.0);\n    float amplitude = 1.0;\n    for (int i = 0;  i < octaves; ++i)\n    {\n        result += amplitude * mx_perlin_noise_vec3(p);\n        amplitude *= diminish;\n        p *= lacunarity;\n    }\n    return result;\n}\n\nvec2 mx_fractal_noise_vec2(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    return vec2(mx_fractal_noise_float(p, octaves, lacunarity, diminish),\n                mx_fractal_noise_float(p+vec3(19, 193, 17), octaves, lacunarity, diminish));\n}\n\nvec4 mx_fractal_noise_vec4(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    vec3  c = mx_fractal_noise_vec3(p, octaves, lacunarity, diminish);\n    float f = mx_fractal_noise_float(p+vec3(19, 193, 17), octaves, lacunarity, diminish);\n    return vec4(c, f);\n}\n\nfloat mx_worley_distance(vec2 p, int x, int y, int xoff, int yoff, float jitter, int metric)\n{\n    vec3  tmp = mx_cell_noise_vec3(vec2(x+xoff, y+yoff));\n    vec2  off = vec2(tmp.x, tmp.y);\n\n    off -= 0.5f;\n    off *= jitter;\n    off += 0.5f;\n\n    vec2 cellpos = vec2(float(x), float(y)) + off;\n    vec2 diff = cellpos - p;\n    if (metric == 2)\n        return abs(diff.x) + abs(diff.y);       // Manhattan distance\n    if (metric == 3)\n        return max(abs(diff.x), abs(diff.y));   // Chebyshev distance\n    // Either Euclidian or Distance^2\n    return dot(diff, diff);\n}\n\nfloat mx_worley_distance(vec3 p, int x, int y, int z, int xoff, int yoff, int zoff, float jitter, int metric)\n{\n    vec3  off = mx_cell_noise_vec3(vec3(x+xoff, y+yoff, z+zoff));\n\n    off -= 0.5f;\n    off *= jitter;\n    off += 0.5f;\n\n    vec3 cellpos = vec3(float(x), float(y), float(z)) + off;\n    vec3 diff = cellpos - p;\n    if (metric == 2)\n        return abs(diff.x) + abs(diff.y) + abs(diff.z); // Manhattan distance\n    if (metric == 3)\n        return max(max(abs(diff.x), abs(diff.y)), abs(diff.z)); // Chebyshev distance\n    // Either Euclidian or Distance^2\n    return dot(diff, diff);\n}\n\nfloat mx_worley_noise_float(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    float sqdist = 1e6f;        // Some big number for jitter > 1 (not all GPUs may be IEEE)\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            sqdist = min(sqdist, dist);\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec2 mx_worley_noise_vec2(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    vec2 sqdist = vec2(1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            if (dist < sqdist.x)\n            {\n                sqdist.y = sqdist.x;\n                sqdist.x = dist;\n            }\n            else if (dist < sqdist.y)\n            {\n                sqdist.y = dist;\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec3 mx_worley_noise_vec3(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    vec3 sqdist = vec3(1e6f, 1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            if (dist < sqdist.x)\n            {\n                sqdist.z = sqdist.y;\n                sqdist.y = sqdist.x;\n                sqdist.x = dist;\n            }\n            else if (dist < sqdist.y)\n            {\n                sqdist.z = sqdist.y;\n                sqdist.y = dist;\n            }\n            else if (dist < sqdist.z)\n            {\n                sqdist.z = dist;\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nfloat mx_worley_noise_float(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    float sqdist = 1e6f;\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                sqdist = min(sqdist, dist);\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec2 mx_worley_noise_vec2(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    vec2 sqdist = vec2(1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                if (dist < sqdist.x)\n                {\n                    sqdist.y = sqdist.x;\n                    sqdist.x = dist;\n                }\n                else if (dist < sqdist.y)\n                {\n                    sqdist.y = dist;\n                }\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec3 mx_worley_noise_vec3(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    vec3 sqdist = vec3(1e6f, 1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                if (dist < sqdist.x)\n                {\n                    sqdist.z = sqdist.y;\n                    sqdist.y = sqdist.x;\n                    sqdist.x = dist;\n                }\n                else if (dist < sqdist.y)\n                {\n                    sqdist.z = sqdist.y;\n                    sqdist.y = dist;\n                }\n                else if (dist < sqdist.z)\n                {\n                    sqdist.z = dist;\n                }\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}')],Hm=ip("float mx_perlin_noise_float( any p )",$m),Wm=ip("vec2 mx_perlin_noise_vec2( any p )",$m),jm=ip("vec3 mx_perlin_noise_vec3( any p )",$m),qm=ip("float mx_cell_noise_float( vec3 p )",$m),Xm=ip("float mx_worley_noise_float( any p, float jitter, int metric )",$m),Ym=ip("vec2 mx_worley_noise_vec2( any p, float jitter, int metric )",$m),Km=ip("vec3 mx_worley_noise_vec3( any p, float jitter, int metric )",$m),Qm=ip("float mx_fractal_noise_float( vec3 p, int octaves, float lacunarity, float diminish )",$m),Zm=ip("vec2 mx_fractal_noise_vec2( vec3 p, int octaves, float lacunarity, float diminish )",$m),Jm=ip("vec3 mx_fractal_noise_vec3( vec3 p, int octaves, float lacunarity, float diminish )",$m),eg=ip("vec4 mx_fractal_noise_vec4( vec3 p, int octaves, float lacunarity, float diminish )",$m),tg=ip("vec3 mx_hsvtorgb(vec3 hsv)\n{\n    // Reference for this technique: Foley & van Dam\n    float h = hsv.x; float s = hsv.y; float v = hsv.z;\n    if (s < 0.0001f) {\n      return vec3 (v, v, v);\n    } else {\n        h = 6.0f * (h - floor(h));  // expand to [0..6)\n        int hi = int(trunc(h));\n        float f = h - float(hi);\n        float p = v * (1.0f-s);\n        float q = v * (1.0f-s*f);\n        float t = v * (1.0f-s*(1.0f-f));\n        if (hi == 0)\n            return vec3 (v, t, p);\n        else if (hi == 1)\n            return vec3 (q, v, p);\n        else if (hi == 2)\n            return vec3 (p, v, t);\n        else if (hi == 3)\n            return vec3 (p, q, v);\n        else if (hi == 4)\n            return vec3 (t, p, v);\n        return vec3 (v, p, q);\n    }\n}"),sg=ip("vec3 mx_rgbtohsv(vec3 c)\n{\n    // See Foley & van Dam\n    float r = c.x; float g = c.y; float b = c.z;\n    float mincomp = min (r, min(g, b));\n    float maxcomp = max (r, max(g, b));\n    float delta = maxcomp - mincomp;  // chroma\n    float h, s, v;\n    v = maxcomp;\n    if (maxcomp > 0.0f)\n        s = delta / maxcomp;\n    else s = 0.0f;\n    if (s <= 0.0f)\n        h = 0.0f;\n    else {\n        if      (r >= maxcomp) h = (g-b) / delta;\n        else if (g >= maxcomp) h = 2.0f + (b-r) / delta;\n        else                   h = 4.0f + (r-g) / delta;\n        h *= (1.0f/6.0f);\n        if (h < 0.0f)\n            h += 1.0f;\n    }\n    return vec3(h, s, v);\n}"),rg=ip("vec3 mx_srgb_texture_to_lin_rec709( vec3 color )",[ep("#define M_AP1_TO_REC709 mat3(1.705079555511475, -0.1297005265951157, -0.02416634373366833, -0.6242334842681885, 1.138468623161316, -0.1246141716837883, -0.0808461606502533, -0.008768022060394287, 1.148780584335327)\n\nvec3 mx_srgb_texture_to_lin_rec709(vec3 color)\n{\n    bvec3 isAbove = greaterThan(color, vec3(0.04045));\n    vec3 linSeg = color / 12.92;\n    vec3 powSeg = pow(max(color + vec3(0.055), vec3(0.0)) / 1.055, vec3(2.4));\n    return mix(linSeg, powSeg, isAbove);\n}")]),ng=(e,t)=>{e=Tn(e),t=Tn(t);const s=vn(t.dFdx(),t.dFdy()).length().mul(.7071067811865476);return pa(e.sub(s),e.add(s),t)},ig=(e,t,s,r)=>la(e,t,s[r].clamp()),og=(e,t,s=ji())=>ig(e,t,s,"x"),ag=(e,t,s=ji())=>ig(e,t,s,"y"),ug=(e,t,s,r,n)=>la(e,t,ng(s,r[n])),lg=(e,t,s,r=ji())=>ug(e,t,s,r,"x"),cg=(e,t,s,r=ji())=>ug(e,t,s,r,"y"),dg=(e=1,t=0,s=ji())=>s.mul(e).add(t),hg=(e,t=1)=>(e=Tn(e)).abs().pow(t).mul(e.sign()),pg=(e,t=1,s=.5)=>Tn(e).sub(s).mul(t).add(s),mg=(e=ji(),t=1,s=0)=>Hm(e.convert("vec2|vec3")).mul(t).add(s),gg=(e=ji(),t=1,s=0)=>Wm(e.convert("vec2|vec3")).mul(t).add(s),fg=(e=ji(),t=1,s=0)=>jm(e.convert("vec2|vec3")).mul(t).add(s),xg=(e=ji(),t=1,s=0)=>{e=e.convert("vec2|vec3");return On(jm(e),Hm(e.add(vn(19,73)))).mul(t).add(s)},bg=(e=ji(),t=1)=>Xm(e.convert("vec2|vec3"),t,1),Tg=(e=ji(),t=1)=>Ym(e.convert("vec2|vec3"),t,1),_g=(e=ji(),t=1)=>Km(e.convert("vec2|vec3"),t,1),yg=(e=ji())=>qm(e.convert("vec2|vec3")),Ng=(e=ji(),t=3,s=2,r=.5,n=1)=>Qm(e,t,s,r).mul(n),vg=(e=ji(),t=3,s=2,r=.5,n=1)=>Zm(e,t,s,r).mul(n),Sg=(e=ji(),t=3,s=2,r=.5,n=1)=>Jm(e,t,s,r).mul(n),Ag=(e=ji(),t=3,s=2,r=.5,n=1)=>eg(e,t,s,r).mul(n);function Rg(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Cg(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}class Eg{constructor(){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparent=[],this.lightsNode=new Ol([]),this.lightsArray=[],this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparent.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,r,n,i){let o=this.renderItems[this.renderItemsIndex];return void 0===o?(o={id:e.id,object:e,geometry:t,material:s,groupOrder:r,renderOrder:e.renderOrder,z:n,group:i},this.renderItems[this.renderItemsIndex]=o):(o.id=e.id,o.object=e,o.geometry=t,o.material=s,o.groupOrder=r,o.renderOrder=e.renderOrder,o.z=n,o.group=i),this.renderItemsIndex++,o}push(e,t,s,r,n,i){const o=this.getNextRenderItem(e,t,s,r,n,i);!0===e.occlusionTest&&this.occlusionQueryCount++,(!0===s.transparent?this.transparent:this.opaque).push(o)}unshift(e,t,s,r,n,i){const o=this.getNextRenderItem(e,t,s,r,n,i);(!0===s.transparent?this.transparent:this.opaque).unshift(o)}pushLight(e){this.lightsArray.push(e)}getLightsNode(){return this.lightsNode.fromLights(this.lightsArray)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||Rg),this.transparent.length>1&&this.transparent.sort(t||Cg)}finish(){this.lightsNode.fromLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null}}}class wg{constructor(){this.lists=new Fs}get(e,t){const s=this.lists,r=[e,t];let n=s.get(r);return void 0===n&&(n=new Eg,s.set(r,n)),n}dispose(){this.lists=new Fs}}let Mg=0;class Og{constructor(){this.id=Mg++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!0,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new o,this.scissor=!1,this.scissorValue=new o,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0}}class Fg{constructor(){this.chainMaps={}}get(e,t,s=null){const r=[e,t];let n;if(null===s)n="default";else{let e,t;s.isWebGLMultipleRenderTargets?(e=s.texture[0].format,t=s.texture.length):(e=s.texture.format,t=1),n=`${t}:${e}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const i=this.getChainMap(n);let o=i.get(r);return void 0===o&&(o=new Og,i.set(r,o)),null!==s&&(o.sampleCount=0===s.samples?1:s.samples),o}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Fs)}dispose(){this.chainMaps={}}}const Bg=new i;class Ug extends Ls{constructor(e,t){super(),this.backend=e,this.info=t}updateRenderTarget(e,t=0){const s=this.get(e),r=0===e.samples?1:e.samples,n=s.depthTextureMips||(s.depthTextureMips={});let i,o;e.isWebGLMultipleRenderTargets?(o=e.texture,i=e.texture[0]):(o=[e.texture],i=e.texture);const a=this.getSize(i),u=a.width>>t,l=a.height>>t;let c=e.depthTexture||n[t],d=!1;void 0===c&&(c=new T,c.format=fe,c.type=xe,c.image.width=u,c.image.height=l,n[t]=c),s.width===a.width&&a.height===s.height||(d=!0,c.needsUpdate=!0,c.image.width=u,c.image.height=l),s.width=a.width,s.height=a.height,s.textures=o,s.depthTexture=c,s.depth=e.depthBuffer,s.stencil=e.stencilBuffer,s.sampleCount!==r&&(d=!0,c.needsUpdate=!0,s.sampleCount=r);const h={sampleCount:r};for(let e=0;e<o.length;e++){const t=o[e];d&&(t.needsUpdate=!0),this.updateTexture(t,h)}if(this.updateTexture(c,h),!0!==s.initialized){s.initialized=!0;const t=()=>{if(e.removeEventListener("dispose",t),void 0!==o)for(let e=0;e<o.length;e++)this._destroyTexture(o[e]);else this._destroyTexture(i);this._destroyTexture(c)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const s=this.get(e);if(!0===s.initialized&&s.version===e.version)return;const r=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,n=this.backend;r&&!0===s.initialized&&(n.destroySampler(e),n.destroyTexture(e));const{width:i,height:o,depth:a}=this.getSize(e);if(t.width=i,t.height=o,t.depth=a,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,i,o):1,r||!0===e.isStorageTexture)n.createSampler(e),n.createTexture(e,t);else{if(!0!==s.initialized&&n.createSampler(e),e.version>0){const r=e.image;if(void 0===r);else if(!1===r.complete);else{if(e.images){const s=[];for(const t of e.images)s.push(t);t.images=s}else t.image=r;void 0!==s.isDefaultTexture&&!0!==s.isDefaultTexture||(n.createTexture(e,t),s.isDefaultTexture=!1),n.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&n.generateMipmaps(e)}}else n.createDefaultTexture(e),s.isDefaultTexture=!0}if(!0!==s.initialized){s.initialized=!0,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",t)}s.version=e.version}getSize(e,t=Bg){let s=e.images?e.images[0]:e.image;return s?(void 0!==s.image&&(s=s.image),t.width=s.width,t.height=s.height,t.depth=e.isCubeTexture?6:s.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let r;return r=e.isCompressedTexture?e.mipmaps.length:Math.floor(Math.log2(Math.max(t,s)))+1,r}needsMipmaps(e){return!!this.isEnvironmentTexture(e)||(!0===e.isCompressedTexture||e.minFilter!==_&&e.minFilter!==D)}isEnvironmentTexture(e){const t=e.mapping;return t===be||t===Te||t===_e||t===ye}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class Ig extends r{constructor(e,t,s,r=1){super(e,t,s),this.a=r}set(e,t,s,r=1){return this.a=r,super.set(e,t,s)}copy(e){return void 0!==e.a&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}const Lg=new Ig;class Dg extends Ls{constructor(e,t){super(),this.renderer=e,this.nodes=t,this.backgroundMesh=null,this.backgroundMeshNode=null}update(e,t,s){const r=this.renderer,n=this.nodes.getBackgroundNode(e)||e.background;let i=!1;if(null===n)r._clearColor.getRGB(Lg,this.renderer.currentColorSpace),Lg.a=r._clearColor.a;else if(!0===n.isColor)n.getRGB(Lg,this.renderer.currentColorSpace),Lg.a=1,i=!0;else if(!0===n.isNode){const s=this.get(e),i=n;Lg.copy(r._clearColor);let o=this.backgroundMesh;if(null===o){this.backgroundMeshNode=ci(i,{getUV:()=>pu,getTextureLevel:()=>eh}).mul(th);let e=Ju();e=e.setZ(e.w);const t=new Tc;t.side=B,t.depthTest=!1,t.depthWrite=!1,t.fog=!1,t.vertexNode=e,t.fragmentNode=this.backgroundMeshNode,this.backgroundMesh=o=new I(new Ne(1,32,32),t),o.frustumCulled=!1,o.onBeforeRender=function(e,t,s){this.matrixWorld.copyPosition(s.matrixWorld)}}const a=i.getCacheKey();s.backgroundCacheKey!==a&&(this.backgroundMeshNode.node=i,o.material.needsUpdate=!0,s.backgroundCacheKey=a),t.unshift(o,o.geometry,o.material,0,0,null)}if(!0===r.autoClear||!0===i){Lg.multiplyScalar(Lg.a);const e=s.clearColorValue;e.r=Lg.r,e.g=Lg.g,e.b=Lg.b,e.a=Lg.a,s.depthClearValue=r._clearDepth,s.stencilClearValue=r._clearStencil,s.clearColor=!0===r.autoClearColor,s.clearDepth=!0===r.autoClearDepth,s.clearStencil=!0===r.autoClearStencil}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}class Pg{constructor(e,t,s,r,n,i,o){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.nodeAttributes=r,this.bindings=n,this.updateNodes=i,this.updateBeforeNodes=o,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings){let s=t;!0!==t.shared&&(s=t.clone()),e.push(s)}return e}}class Gg extends Ls{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new Xc,this.nodeBuilderCache=new Map,this.callHashCache=new Fs,this.groupsData=new Fs}updateGroup(e){const t=e.groupNode,s=t.name;if(s===Sr.name)return!0;if(s===vr.name){const t=this.get(e),s=this.nodeFrame.renderId;return t.renderId!==s&&(t.renderId=s,!0)}if(s===Nr.name){const t=this.get(e),s=this.nodeFrame.frameId;return t.frameId!==s&&(t.frameId=s,!0)}const r=[t,e];let n=this.groupsData.get(r);return void 0===n&&this.groupsData.set(r,n={}),n.version!==t.version&&(n.version=t.version,!0)}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const{nodeBuilderCache:r}=this,n=this.getForRenderCacheKey(e);if(s=r.get(n),void 0===s){const t=this.backend.createNodeBuilder(e.object,this.renderer,e.scene);t.material=e.material,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.toneMappingNode=this.getToneMappingNode(),t.build(),s=this._createNodeBuilderState(t),r.set(n,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const r=this.backend.createNodeBuilder(e,this.renderer);r.build(),s=this._createNodeBuilderState(r),t.nodeBuilderState=r}return s}_createNodeBuilderState(e){return new Pg(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getToneMappingNode(){return!1===this.isToneMappingState?null:this.renderer.toneMappingNode||this.get(this.renderer).toneMappingNode||null}getCacheKey(e,t){const s=[e,t],r=this.renderer.info.calls;let n=this.callHashCache.get(s);if(void 0===n||n.callId!==r){const i=this.getEnvironmentNode(e),o=this.getFogNode(e),a=this.getToneMappingNode(),u=[];t&&u.push(t.getCacheKey()),i&&u.push(i.getCacheKey()),o&&u.push(o.getCacheKey()),a&&u.push(a.getCacheKey()),n={callId:r,cacheKey:u.join(",")},this.callHashCache.set(s,n)}return n.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e),this.updateToneMapping()}get isToneMappingState(){const e=this.renderer.getRenderTarget();return!e||!e.isCubeRenderTarget}updateToneMapping(){const e=this.renderer,t=this.get(e),s=e.toneMapping;if(this.isToneMappingState&&s!==j){if(t.toneMapping!==s){const r=t.rendererToneMappingNode||jh(s,Ua("toneMappingExposure","float",e));r.toneMapping=s,t.rendererToneMappingNode=r,t.toneMappingNode=r,t.toneMapping=s}}else delete t.toneMappingNode,delete t.toneMapping}updateBackground(e){const t=this.get(e),s=e.background;if(s){if(t.background!==s){let e=null;if(!0===s.isCubeTexture)e=Rl(s,pu);else if(!0===s.isTexture){let t=null;t=s.mapping===be||s.mapping===Te?Gl():Jl,e=Ma(s,t).setUpdateMatrix(!0)}else s.isColor;t.backgroundNode=e,t.background=s}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){let e=null;s.isFogExp2?e=Tp(Ua("color","color",s),Ua("density","float",s)):s.isFog&&(e=xp(Ua("color","color",s),Ua("near","float",s),Ua("far","float",s))),t.fogNode=e,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){let e=null;!0===s.isCubeTexture?e=Rl(s):!0===s.isTexture&&(e=Ma(s)),t.environmentNode=e,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,s=null,r=null,n=null){const i=this.nodeFrame;return i.renderer=e,i.scene=t,i.object=s,i.camera=r,i.material=n,i}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}updateBefore(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const e of s.updateBeforeNodes)t.updateBeforeNode(e)}updateForCompute(e){const t=this.getNodeFrame(),s=this.getForCompute(e);for(const e of s.updateNodes)t.updateNode(e)}updateForRender(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const e of s.updateNodes)t.updateNode(e)}dispose(){super.dispose(),this.nodeFrame=new Xc,this.nodeBuilderCache=new Map}}const kg=new L,Vg=new n,zg=new o,$g=new ve,Hg=new u,Wg=new i;class jg{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:s=!1}=t;this.domElement=e.getDomElement(),this.backend=e,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.logarithmicDepthBuffer=s,this.outputColorSpace=h,this.toneMapping=j,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=!0,this.stencil=!0,this.info=new Ws,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new o(0,0,this._width,this._height),this._scissor=new o(0,0,this._width,this._height),this._scissorTest=!1,this._properties=null,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._clearColor=new Ig(0),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._initialized=!1,this._initPromise=null,this.shadowMap={enabled:!1,type:null},this.xr={enabled:!1}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise((async(e,t)=>{const s=this.backend;try{await s.init(this)}catch(e){return void t(e)}this._nodes=new Gg(this,s),this._animation=new Os(this._nodes,this.info),this._attributes=new Vs(s),this._background=new Dg(this,this._nodes),this._geometries=new Hs(this._attributes,this.info),this._textures=new Ug(s,this.info),this._pipelines=new Qs(s,this._nodes),this._bindings=new Zs(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new Is(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new wg,this._renderContexts=new Fg,this._initialized=!0,e()}))),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compile(){}async render(e,t){!1===this._initialized&&await this.init();const s=this._nodes.nodeFrame,r=s.renderId,n=this._currentRenderContext,i=this._currentRenderObjectFunction,o=!0===e.isScene?e:kg,a=this._renderTarget,u=this._renderContexts.get(e,t,a),l=this._activeCubeFace,c=this._activeMipmapLevel;this._currentRenderContext=u,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,s.renderId=this.info.calls;const d=this.coordinateSystem;t.coordinateSystem!==d&&(t.coordinateSystem=d,t.updateProjectionMatrix()),!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===this.info.autoReset&&this.info.reset();let h=this._viewport,p=this._scissor,m=this._pixelRatio;null!==a&&(h=a.viewport,p=a.scissor,m=1),this.getDrawingBufferSize(Vg),zg.set(0,0,Vg.width,Vg.height);const g=void 0===h.minDepth?0:h.minDepth,f=void 0===h.maxDepth?1:h.maxDepth;u.viewportValue.copy(h).multiplyScalar(m).floor(),u.viewportValue.width>>=c,u.viewportValue.height>>=c,u.viewportValue.minDepth=g,u.viewportValue.maxDepth=f,u.viewport=!1===u.viewportValue.equals(zg),u.scissorValue.copy(p).multiplyScalar(m).floor(),u.scissor=this._scissorTest&&!1===u.scissorValue.equals(zg),u.scissorValue.width>>=c,u.scissorValue.height>>=c,u.depth=this.depth,u.stencil=this.stencil,o.onBeforeRender(this,e,t,a),Hg.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),$g.setFromProjectionMatrix(Hg,d);const x=this._renderLists.get(e,t);if(x.begin(),this._projectObject(e,t,0,x),x.finish(),!0===this.sortObjects&&x.sort(this._opaqueSort,this._transparentSort),null!==a){this._textures.updateRenderTarget(a,c);const e=this._textures.get(a);u.textures=e.textures,u.depthTexture=e.depthTexture,u.width=e.width,u.height=e.height}else u.textures=null,u.depthTexture=null,u.width=this.domElement.width,u.height=this.domElement.height;u.width>>=c,u.height>>=c,u.activeCubeFace=l,u.activeMipmapLevel=c,u.occlusionQueryCount=x.occlusionQueryCount,this._nodes.updateScene(o),this._background.update(o,x,u),this.backend.beginRender(u);const b=x.opaque,T=x.transparent,_=x.lightsNode;b.length>0&&this._renderObjects(b,t,o,_),T.length>0&&this._renderObjects(T,t,o,_),this.backend.finishRender(u),s.renderId=r,this._currentRenderContext=n,this._currentRenderObjectFunction=i,o.onAfterRender(this,e,t,a)}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(e)}getArrayBuffer(e){return this.getArrayBufferAsync(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this._context}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio=e,this.setSize(this._width,this._height,!1)}setDrawingBufferSize(e,t,s){this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,s=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===s&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,r){const n=this._scissor;e.isVector4?n.copy(e):n.set(e,t,s,r)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,r,n=0,i=1){const o=this._viewport;e.isVector4?o.copy(e):o.set(e,t,s,r),o.minDepth=n,o.maxDepth=i}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){let r=null;const n=this._renderTarget;null!==n&&(this._textures.updateRenderTarget(n),r=this._textures.get(n)),this.backend.clear(e,t,s,r)}clearColor(){this.clear(!0,!1,!1)}clearDepth(){this.clear(!1,!0,!1)}clearStencil(){this.clear(!1,!1,!0)}get currentColorSpace(){const e=this._renderTarget;if(null!==e){const t=e.texture;return(Array.isArray(t)?t[0]:t).colorSpace}return this.outputColorSpace}dispose(){this.info.dispose(),this._animation.dispose(),this._objects.dispose(),this._properties.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}async compute(e){!1===this._initialized&&await this.init();const t=this._nodes.nodeFrame,s=t.renderId;this.info.calls++,this.info.compute.calls++,t.renderId=this.info.calls;const r=this.backend,n=this._pipelines,i=this._bindings,o=this._nodes,a=Array.isArray(e)?e:[e];if(void 0===a[0]||!0!==a[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const t of a){if(!1===n.has(t)){const e=()=>{t.removeEventListener("dispose",e),n.delete(t),i.delete(t),o.delete(t)};t.addEventListener("dispose",e),t.onInit({renderer:this})}o.updateForCompute(t),i.updateForCompute(t);const s=i.getForCompute(t),a=n.getForCompute(t,s);r.compute(e,t,s,a)}r.finishCompute(e),t.renderId=s}hasFeature(e){return this.backend.hasFeature(e)}copyFramebufferToTexture(e){const t=this._currentRenderContext;this._textures.updateTexture(e),this.backend.copyFramebufferToTexture(e,t)}readRenderTargetPixelsAsync(e,t,s,r,n){return this.backend.copyTextureToBuffer(e.texture,t,s,r,n)}_projectObject(e,t,s,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)s=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)r.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||$g.intersectsSprite(e)){!0===this.sortObjects&&Wg.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Hg);const t=e.geometry,n=e.material;n.visible&&r.push(e,t,n,s,Wg.z,null)}}else if(e.isLineLoop);else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||$g.intersectsObject(e))){const t=e.geometry,n=e.material;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),Wg.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Hg)),Array.isArray(n)){const i=t.groups;for(let o=0,a=i.length;o<a;o++){const a=i[o],u=n[a.materialIndex];u&&u.visible&&r.push(e,t,u,s,Wg.z,a)}}else n.visible&&r.push(e,t,n,s,Wg.z,null)}const n=e.children;for(let e=0,i=n.length;e<i;e++)this._projectObject(n[e],t,s,r)}_renderObjects(e,t,s,r){for(let n=0,i=e.length;n<i;n++){const i=e[n],{object:o,geometry:a,material:u,group:l}=i;if(t.isArrayCamera){const e=t.cameras;for(let t=0,n=e.length;t<n;t++){const n=e[t];if(o.layers.test(n.layers)){const e=n.viewport,t=void 0===e.minDepth?0:e.minDepth,i=void 0===e.maxDepth?1:e.maxDepth,c=this._currentRenderContext.viewportValue;c.copy(e).multiplyScalar(this._pixelRatio).floor(),c.minDepth=t,c.maxDepth=i,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(o,s,n,a,u,l,r)}}}else this._currentRenderObjectFunction(o,s,t,a,u,l,r)}}renderObject(e,t,s,r,n,i,o){n=null!==t.overrideMaterial?t.overrideMaterial:n,e.onBeforeRender(this,t,s,r,n,i),n.onBeforeRender(this,t,s,r,n,i),!0===n.transparent&&n.side===Se&&!1===n.forceSinglePass?(n.side=B,this._renderObjectDirect(e,n,t,s,o,"backSide"),n.side=Ae,this._renderObjectDirect(e,n,t,s,o),n.side=Se):this._renderObjectDirect(e,n,t,s,o),e.onAfterRender(this,t,s,r,n,i)}_renderObjectDirect(e,t,s,r,n,i){const o=this._objects.get(e,t,s,r,n,this._currentRenderContext,i);this._nodes.updateBefore(o),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),this._nodes.updateForRender(o),this._geometries.updateForRender(o),this._bindings.updateForRender(o),this._pipelines.updateForRender(o),this.backend.draw(o,this.info)}}class qg{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function Xg(e){return e+(ks-e%ks)%ks}function Yg(e,t=4){return Xg(Kg(t)*e)}function Kg(e){return e+(4-e%4)%4}class Qg extends qg{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return Xg(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class Zg extends Qg{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}class Jg extends Zg{constructor(e){super(e),this.isUniformsGroup=!0,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,s=this.uniforms.length;t<s;t++){const s=this.uniforms[t],r=e%ks;0!==r&&ks-r-s.boundary<0?e+=ks-r:r%s.boundary!=0&&(e+=r%s.boundary),s.offset=e/this.bytesPerElement,e+=s.itemSize*this.bytesPerElement}return Math.ceil(e/ks)*ks}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isFloatUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void 0}updateNumber(e){let t=!1;const s=this.buffer,r=e.getValue(),n=e.offset;return s[n]!==r&&(s[n]=r,t=!0),t}updateVector2(e){let t=!1;const s=this.buffer,r=e.getValue(),n=e.offset;return s[n+0]===r.x&&s[n+1]===r.y||(s[n+0]=r.x,s[n+1]=r.y,t=!0),t}updateVector3(e){let t=!1;const s=this.buffer,r=e.getValue(),n=e.offset;return s[n+0]===r.x&&s[n+1]===r.y&&s[n+2]===r.z||(s[n+0]=r.x,s[n+1]=r.y,s[n+2]=r.z,t=!0),t}updateVector4(e){let t=!1;const s=this.buffer,r=e.getValue(),n=e.offset;return s[n+0]===r.x&&s[n+1]===r.y&&s[n+2]===r.z&&s[n+4]===r.w||(s[n+0]=r.x,s[n+1]=r.y,s[n+2]=r.z,s[n+3]=r.w,t=!0),t}updateColor(e){let t=!1;const s=this.buffer,r=e.getValue(),n=e.offset;return s[n+0]===r.r&&s[n+1]===r.g&&s[n+2]===r.b||(s[n+0]=r.r,s[n+1]=r.g,s[n+2]=r.b,t=!0),t}updateMatrix3(e){let t=!1;const s=this.buffer,r=e.getValue().elements,n=e.offset;return s[n+0]===r[0]&&s[n+1]===r[1]&&s[n+2]===r[2]&&s[n+4]===r[3]&&s[n+5]===r[4]&&s[n+6]===r[5]&&s[n+8]===r[6]&&s[n+9]===r[7]&&s[n+10]===r[8]||(s[n+0]=r[0],s[n+1]=r[1],s[n+2]=r[2],s[n+4]=r[3],s[n+5]=r[4],s[n+6]=r[5],s[n+8]=r[6],s[n+9]=r[7],s[n+10]=r[8],t=!0),t}updateMatrix4(e){let t=!1;const s=this.buffer,r=e.getValue().elements,n=e.offset;return!1===function(e,t,s){for(let r=0,n=t.length;r<n;r++)if(e[s+r]!==t[r])return!1;return!0}(s,r,n)&&(s.set(r,n),t=!0),t}}let ef=0;class tf extends Jg{constructor(e,t){super(e),this.id=ef++,this.groupNode=t,this.isNodeUniformsGroup=!0}get shared(){return this.groupNode.shared}getNodes(){const e=[];for(const t of this.uniforms){const s=t.nodeUniform.node;if(!s)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(s)}return e}}let sf=0;class rf extends qg{constructor(e,t){super(e),this.id=sf++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.isSampledTexture=!0}get needsBindingsUpdate(){const{texture:e,version:t}=this;return!!e.isVideoTexture||t!==e.version}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}}class nf extends rf{constructor(e,t){super(e,t?t.value:null),this.textureNode=t}get needsBindingsUpdate(){return this.textureNode.value!==this.texture||super.needsBindingsUpdate}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class of extends nf{constructor(e,t){super(e,t),this.isSampledCubeTexture=!0}}const af={[fo.ATAN2]:"atan",textureDimensions:"textureSize"},uf={low:"lowp",medium:"mediump",high:"highp"},lf={instance:!0},cf="\nprecision highp float;\nprecision highp int;\nprecision mediump sampler2DArray;\nprecision lowp sampler2DShadow;\n";class df extends qc{constructor(e,t,s=null){super(e,t,new zm,s),this.uniformGroups={}}getMethod(e){return af[e]||e}getPropertyName(e,t){return e.isOutputStructVar?"":super.getPropertyName(e,t)}buildFunctionNode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(this.getType(e.type)+" "+e.name);const n=`${this.getType(t.type)} ${t.name}( ${r.join(", ")} ) {\n\n\t${s.vars}\n\n${s.code}\n\treturn ${s.result};\n\n}`;return new rp(n)}generateTextureLoad(e,t,s,r,n="0"){return r?`texelFetch( ${t}, ivec3( ${s}, ${r} ), ${n} )`:`texelFetch( ${t}, ${s}, ${n} )`}generateTexture(e,t,s,r){return e.isTextureCube?`textureCube( ${t}, ${s} )`:e.isDepthTexture?`texture( ${t}, ${s} ).x`:(r&&(s=`vec3( ${s}, ${r} )`),`texture( ${t}, ${s} )`)}generateTextureLevel(e,t,s,r){return`textureLod( ${t}, ${s}, ${r} )`}generateTextureCompare(e,t,s,r,n,i=this.shaderStage){if("fragment"===i)return`texture( ${t}, vec3( ${s}, ${r} ) )`}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)e.isOutputStructVar||t.push(`${this.getVar(e.type,e.name)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],s=[],r={};for(const e of t){let t=null,n=!1;if("texture"===e.type){const s=e.node.value;t=s.compareFunction?`sampler2DShadow ${e.name};`:!0===s.isDataArrayTexture?`sampler2DArray ${e.name};`:`sampler2D ${e.name};`}else if("cubeTexture"===e.type)t=`samplerCube ${e.name};`;else if("buffer"===e.type){const s=e.node,r=this.getType(s.bufferType),n=s.bufferCount,i=n>0?n:"";t=`${s.name} {\n\t${r} ${e.name}[${i}];\n};\n`}else{t=`${this.getVectorType(e.type)} ${e.name};`,n=!0}const i=e.node.precision;if(null!==i&&(t=uf[i]+" "+t),n){t="\t"+t;const s=e.groupNode.name;(r[s]||(r[s]=[])).push(t)}else t="uniform "+t,s.push(t)}let n="";for(const t in r){const s=r[t];n+=this._getGLSLUniformStruct(e+"_"+t,s.join("\n"))+"\n"}return n+=s.join("\n"),n}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==Re){let s=e;e.isInterleavedBufferAttribute&&(s=e.data);const r=s.array;!1==(r instanceof Uint32Array||r instanceof Int32Array)&&(t=t.slice(1))}return t}getAttributes(e){let t="";if("vertex"===e){const e=this.getAttributesArray();let s=0;for(const r of e)t+=`layout( location = ${s++} ) in ${r.type} ${r.name};\n`}return t}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`layout( location = ${e} ) out ${r} m${e};`)}return t.join("\n")}getStructs(e){const t=[],s=this.structs[e];if(0===s.length)return"layout( location = 0 ) out vec4 fragColor;\n";for(let e=0,r=s.length;e<r;e++){const r=s[e];let n="\n";n+=this.getStructMembers(r),n+="\n",t.push(n)}return t.join("\n\n")}getVaryings(e){let t="";const s=this.varyings;if("vertex"===e)for(const e of s){const s=e.type;t+=`${"int"===s||"uint"===s?"flat ":""}${e.needsInterpolation?"out":"/*out*/"} ${s} ${e.name};\n`}else if("fragment"===e)for(const e of s)if(e.needsInterpolation){const s=e.type;t+=`${"int"===s||"uint"===s?"flat ":""}in ${s} ${e.name};\n`}return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord"}getFragDepth(){return"gl_FragDepth"}isAvailable(e){return!0===lf[e]}isFlipY(){return!0}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\n${cf}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\n${cf}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};for(const t in e){let s="// code\n\n";s+=this.flowCode[t];const r=this.flowNodes[t],n=r[r.length-1];for(const e of r){const r=this.getFlowData(e),i=e.name;i&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${i}\n\t`),s+=`${r.code}\n\t`,e===n&&"compute"!==t&&(s+="// result\n\t","vertex"===t?(s+="gl_Position = ",s+=`${r.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${r.result};`)))}const i=e[t];i.uniforms=this.getUniforms(t),i.attributes=this.getAttributes(t),i.varyings=this.getVaryings(t),i.vars=this.getVars(t),i.structs=this.getStructs(t),i.codes=this.getCodes(t),i.flow=s}null!==this.material&&(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment))}getUniformFromNode(e,t,s,r=null){const n=super.getUniformFromNode(e,t,s,r),i=this.getDataFromNode(e,s);let o=i.uniformGPU;if(void 0===o){if("texture"===t)o=new nf(n.name,n.node),this.bindings[s].push(o);else if("cubeTexture"===t)o=new of(n.name,n.node),this.bindings[s].push(o);else if("buffer"===t){e.name=`NodeBuffer_${e.id}`;const t=new Zg(e.name,e.value);n.name=`buffer${e.id}`,this.bindings[s].push(t),o=t}else{const r=e.groupNode,i=r.name,a=this.uniformGroups[s]||(this.uniformGroups[s]={});let u=a[i];void 0===u&&(u=new tf(s+"_"+i,r),a[i]=u,this.bindings[s].push(u)),o=this.getNodeUniform(n,t),u.addUniform(o)}i.uniformGPU=o}return n}build(){const{object:e,material:t}=this;return null!==t?Tc.fromMaterial(t).build(this):this.addFlow("compute",e),super.build()}}let hf=null,pf=null,mf=null;class gf{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(e){}finish(e){}draw(e,t){}createProgram(e){}destroyProgram(e){}createBindings(e){}updateBindings(e){}createRenderPipeline(e){}createComputePipeline(e,t){}destroyPipeline(e){}needsRenderUpdate(e){}getRenderCacheKey(e){}createNodeBuilder(e){}createSampler(e){}createDefaultTexture(e){}createTexture(e){}copyTextureToBuffer(e,t,s,r,n){}createAttribute(e){}createIndexAttribute(e){}updateAttribute(e){}destroyAttribute(e){}updateSize(){}hasFeature(e){}getInstanceCount(e){const{object:t,geometry:s}=e;return s.isInstancedBufferGeometry?s.instanceCount:t.isInstancedMesh?t.count:1}getDrawingBufferSize(){return hf=hf||new n,this.renderer.getDrawingBufferSize(hf)}getScissor(){return pf=pf||new o,this.renderer.getScissor(pf)}getClearColor(){const e=this.renderer;return mf=mf||new Ig,e.getClearColor(mf),mf.getRGB(mf,this.renderer.currentColorSpace),mf}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:Ce(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${$} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){this.data.delete(e)}}class ff{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:r}=s,n=e.array,i=e.usage||r.STATIC_DRAW,o=e.isInterleavedBufferAttribute?e.data:e,a=s.get(o);let u,l=a.bufferGPU;if(void 0===l&&(l=r.createBuffer(),r.bindBuffer(t,l),r.bufferData(t,n,i),r.bindBuffer(t,null),a.bufferGPU=l,a.bufferType=t,a.version=o.version),n instanceof Float32Array)u=r.FLOAT;else if(n instanceof Uint16Array)u=e.isFloat16BufferAttribute?r.HALF_FLOAT:r.UNSIGNED_SHORT;else if(n instanceof Int16Array)u=r.SHORT;else if(n instanceof Uint32Array)u=r.UNSIGNED_INT;else if(n instanceof Int32Array)u=r.INT;else if(n instanceof Int8Array)u=r.BYTE;else if(n instanceof Uint8Array)u=r.UNSIGNED_BYTE;else{if(!(n instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+n);u=r.UNSIGNED_BYTE}s.set(e,{bufferGPU:l,type:u,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version,isInteger:u===r.INT||u===r.UNSIGNED_INT||e.gpuType===Re})}updateAttribute(e){const t=this.backend,{gl:s}=t,r=e.array,n=e.isInterleavedBufferAttribute?e.data:e,i=t.get(n),o=i.bufferType,a=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(s.bindBuffer(o,i.bufferGPU),0===a.length)s.bufferSubData(o,0,r);else{for(let e=0,t=a.length;e<t;e++){const t=a[e];s.bufferSubData(o,t.start*r.BYTES_PER_ELEMENT,r,t.start,t.count)}n.clearUpdateRanges()}s.bindBuffer(o,null),i.version=n.version}}let xf,bf,Tf=!1;class _f{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,!1===Tf&&(this._init(this.gl),Tf=!0)}_init(e){xf={[Ee]:e.FUNC_ADD,[we]:e.FUNC_SUBTRACT,[Me]:e.FUNC_REVERSE_SUBTRACT},bf={[Oe]:e.ZERO,[Fe]:e.ONE,[Be]:e.SRC_COLOR,[Ue]:e.SRC_ALPHA,[Ie]:e.SRC_ALPHA_SATURATE,[Le]:e.DST_COLOR,[De]:e.DST_ALPHA,[Pe]:e.ONE_MINUS_SRC_COLOR,[Ge]:e.ONE_MINUS_SRC_ALPHA,[ke]:e.ONE_MINUS_DST_COLOR,[Ve]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==ze?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===$e?t.cullFace(t.BACK):e===He?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setBlending(e,t,s,r,n,i,o,a){const{gl:u}=this;if(e!==U){if(!1===this.currentBlendingEnabled&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e===We)n=n||t,i=i||s,o=o||r,t===this.currentBlendEquation&&n===this.currentBlendEquationAlpha||(u.blendEquationSeparate(xf[t],xf[n]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=n),s===this.currentBlendSrc&&r===this.currentBlendDst&&i===this.currentBlendSrcAlpha&&o===this.currentBlendDstAlpha||(u.blendFuncSeparate(bf[s],bf[r],bf[i],bf[o]),this.currentBlendSrc=s,this.currentBlendDst=r,this.currentBlendSrcAlpha=i,this.currentBlendDstAlpha=o),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||a!==this.currentPremultipledAlpha){if(this.currentBlendEquation===Ee&&this.currentBlendEquationAlpha===Ee||(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=Ee,this.currentBlendEquationAlpha=Ee),a)switch(e){case Ye:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case Xe:u.blendFunc(u.ONE,u.ONE);break;case qe:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case je:u.blendFuncSeparate(u.ZERO,u.SRC_COLOR,u.ZERO,u.SRC_ALPHA)}else switch(e){case Ye:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case Xe:u.blendFunc(u.SRC_ALPHA,u.ONE);break;case qe:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case je:u.blendFunc(u.ZERO,u.SRC_COLOR)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=a}}else!0===this.currentBlendingEnabled&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1)}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case rt:t.depthFunc(t.NEVER);break;case st:t.depthFunc(t.ALWAYS);break;case tt:t.depthFunc(t.LESS);break;case et:t.depthFunc(t.LEQUAL);break;case Je:t.depthFunc(t.EQUAL);break;case Ze:t.depthFunc(t.GEQUAL);break;case Qe:t.depthFunc(t.GREATER);break;case Ke:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===s||(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===s||(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t){const{gl:s}=this;e.side===Se?this.disable(s.CULL_FACE):this.enable(s.CULL_FACE);let r=e.side===B;t&&(r=!r),this.setFlipSided(r),e.blending===Ye&&!1===e.transparent?this.setBlending(U):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const n=e.stencilWrite;this.setStencilTest(n),n&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?this.enable(s.SAMPLE_ALPHA_TO_COVERAGE):this.disable(s.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(e,t,s){const{gl:r}=this;e?(this.enable(r.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===s||(r.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(r.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}}class yf{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=w){const{gl:s,extensions:r}=this;let n;if(e===nt)return s.UNSIGNED_BYTE;if(e===it)return s.UNSIGNED_SHORT_4_4_4_4;if(e===ot)return s.UNSIGNED_SHORT_5_5_5_1;if(e===at)return s.BYTE;if(e===ut)return s.SHORT;if(e===lt)return s.UNSIGNED_SHORT;if(e===Re)return s.INT;if(e===R)return s.UNSIGNED_INT;if(e===b)return s.FLOAT;if(e===ct)return s.HALF_FLOAT;if(e===dt)return s.ALPHA;if(e===ht)return s.RGBA;if(e===pt)return s.LUMINANCE;if(e===mt)return s.LUMINANCE_ALPHA;if(e===C)return s.DEPTH_COMPONENT;if(e===fe)return s.DEPTH_STENCIL;if(e===gt)return s.RED;if(e===ft)return s.RED_INTEGER;if(e===xt)return s.RG;if(e===bt)return s.RG_INTEGER;if(e===Tt)return s.RGBA_INTEGER;if(e===_t||e===yt||e===Nt||e===vt)if(t===h){if(n=r.get("WEBGL_compressed_texture_s3tc_srgb"),null===n)return null;if(e===_t)return n.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===yt)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Nt)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===vt)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(n=r.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(e===_t)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===yt)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Nt)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===vt)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===St||e===At||e===Rt||e===Ct){if(n=r.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(e===St)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===At)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Rt)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Ct)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===Et)return n=r.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if(e===wt||e===Mt){if(n=r.get("WEBGL_compressed_texture_etc"),null===n)return null;if(e===wt)return t===h?n.COMPRESSED_SRGB8_ETC2:n.COMPRESSED_RGB8_ETC2;if(e===Mt)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:n.COMPRESSED_RGBA8_ETC2_EAC}if(e===Ot||e===Ft||e===Bt||e===Ut||e===It||e===Lt||e===Dt||e===Pt||e===Gt||e===kt||e===Vt||e===zt||e===$t||e===Ht){if(n=r.get("WEBGL_compressed_texture_astc"),null===n)return null;if(e===Ot)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:n.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Ft)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:n.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Bt)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:n.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Ut)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:n.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===It)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:n.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Lt)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:n.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Dt)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:n.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Pt)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:n.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Gt)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:n.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===kt)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:n.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Vt)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:n.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===zt)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:n.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===$t)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:n.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Ht)return t===h?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:n.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===Wt){if(n=r.get("EXT_texture_compression_bptc"),null===n)return null;if(e===Wt)return t===h?n.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:n.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===jt||e===qt||e===Xt||e===Yt){if(n=r.get("EXT_texture_compression_rgtc"),null===n)return null;if(e===Wt)return n.COMPRESSED_RED_RGTC1_EXT;if(e===qt)return n.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Xt)return n.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Yt)return n.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===xe?s.UNSIGNED_INT_24_8:void 0!==s[e]?s[e]:null}}let Nf,vf,Sf,Af=!1;class Rf{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,!1===Af&&(this._init(this.gl),Af=!0)}_init(e){Nf={[Kt]:e.REPEAT,[Qt]:e.CLAMP_TO_EDGE,[Zt]:e.MIRRORED_REPEAT},vf={[_]:e.NEAREST,[A]:e.NEAREST_MIPMAP_NEAREST,[Jt]:e.NEAREST_MIPMAP_LINEAR,[D]:e.LINEAR,[es]:e.LINEAR_MIPMAP_NEAREST,[S]:e.LINEAR_MIPMAP_LINEAR},Sf={[ts]:e.NEVER,[ss]:e.ALWAYS,[y]:e.LESS,[rs]:e.LEQUAL,[ns]:e.EQUAL,[is]:e.GEQUAL,[os]:e.GREATER,[as]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===_||e===A||e===Jt?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let s;return s=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isDataArrayTexture?t.TEXTURE_2D_ARRAY:t.TEXTURE_2D,s}getInternalFormat(e,t,s,r,n=!1){const{gl:i,extensions:o}=this;if(null!==e&&void 0!==i[e])return i[e];let a=t;return t===i.RED&&(s===i.FLOAT&&(a=i.R32F),s===i.HALF_FLOAT&&(a=i.R16F),s===i.UNSIGNED_BYTE&&(a=i.R8)),t===i.RED_INTEGER&&(s===i.UNSIGNED_BYTE&&(a=i.R8UI),s===i.UNSIGNED_SHORT&&(a=i.R16UI),s===i.UNSIGNED_INT&&(a=i.R32UI),s===i.BYTE&&(a=i.R8I),s===i.SHORT&&(a=i.R16I),s===i.INT&&(a=i.R32I)),t===i.RG&&(s===i.FLOAT&&(a=i.RG32F),s===i.HALF_FLOAT&&(a=i.RG16F),s===i.UNSIGNED_BYTE&&(a=i.RG8)),t===i.RGBA&&(s===i.FLOAT&&(a=i.RGBA32F),s===i.HALF_FLOAT&&(a=i.RGBA16F),s===i.UNSIGNED_BYTE&&(a=r===h&&!1===n?i.SRGB8_ALPHA8:i.RGBA8),s===i.UNSIGNED_SHORT_4_4_4_4&&(a=i.RGBA4),s===i.UNSIGNED_SHORT_5_5_5_1&&(a=i.RGB5_A1)),t===i.DEPTH_COMPONENT&&(s===i.UNSIGNED_INT&&(a=i.DEPTH24_STENCIL8),s===i.FLOAT&&(a=i.DEPTH_COMPONENT32F)),t===i.DEPTH_STENCIL&&s===i.UNSIGNED_INT_24_8&&(a=i.DEPTH24_STENCIL8),a!==i.R16F&&a!==i.R32F&&a!==i.RG16F&&a!==i.RG32F&&a!==i.RGBA16F&&a!==i.RGBA32F||o.get("EXT_color_buffer_float"),a}setTextureParameters(e,t){const{gl:s,extensions:r}=this;if(s.texParameteri(e,s.TEXTURE_WRAP_S,Nf[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,Nf[t.wrapT]),e!==s.TEXTURE_3D&&e!==s.TEXTURE_2D_ARRAY||s.texParameteri(e,s.TEXTURE_WRAP_R,Nf[t.wrapR]),s.texParameteri(e,s.TEXTURE_MAG_FILTER,vf[t.magFilter]),s.texParameteri(e,s.TEXTURE_MIN_FILTER,vf[t.minFilter]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,Sf[t.compareFunction])),!0===r.has("EXT_texture_filter_anisotropic")){if(t.magFilter===_)return;if(t.minFilter!==Jt&&t.minFilter!==S)return;if(t.type===b&&!1===r.has("OES_texture_float_linear"))return;t.anisotropy}}async copyTextureToBuffer(e,t,s,r,n){const{gl:i}=this,{textureGPU:o,glFormat:a,glType:u}=this.backend.get(e),l=i.createFramebuffer();i.bindFramebuffer(i.READ_FRAMEBUFFER,l),i.framebufferTexture2D(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,o,0);const c=this._getTypedArrayType(u),d=r*n,h=d*this._getBytesPerTexel(a),p=i.createBuffer();i.bindBuffer(i.PIXEL_PACK_BUFFER,p),i.bufferData(i.PIXEL_PACK_BUFFER,h,i.STREAM_READ),i.readPixels(t,s,r,n,a,u,0),i.bindBuffer(i.PIXEL_PACK_BUFFER,null);const m=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);i.flush(),await this._clientWaitAsync(m),i.deleteSync(m);const g=new c(d);return i.bindBuffer(i.PIXEL_PACK_BUFFER,p),i.getBufferSubData(i.PIXEL_PACK_BUFFER,0,g),i.bindBuffer(i.PIXEL_PACK_BUFFER,null),g}_getTypedArrayType(e){const{gl:t}=this;return e===t.UNSIGNED_BYTE?Uint8Array:e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT?Uint16Array:e===t.UNSIGNED_INT?Uint32Array:e===t.UNSIGNED_FLOAT?Float32Array:void 0}_getBytesPerTexel(e){const{gl:t}=this;return e===t.RGBA?4:e===t.RGB?3:e===t.ALPHA?1:void 0}_clientWaitAsync(e){const{gl:t}=this;return new Promise(((s,r)=>{!function n(){const i=t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0);i!==t.WAIT_FAILED?i!==t.TIMEOUT_EXPIRED?s():requestAnimationFrame(n):r()}()}))}}class Cf{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions()}get(e){return this.gl.getExtension(e)}has(e){return this.availableExtensions.includes(e)}}class Ef extends gf{constructor(e={}){super(e),this.isWebGLBackend=!0}async init(e){await super.init(e);const t=this.parameters,s=void 0!==t.context?t.context:e.domElement.getContext("webgl2");this.gl=s,this.extensions=new Cf(this),this.attributeUtils=new ff(this),this.textureUtils=new Rf(this),this.state=new _f(this),this.utils=new yf(this),this.defaultTextures={},this.extensions.get("EXT_color_buffer_float"),this._currentContext=null}get coordinateSystem(){return us}beginRender(e){const{gl:t}=this,s=this.get(e);s.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight);const r=e.occlusionQueryCount;r>0&&(s.currentOcclusionQueries=s.occlusionQueries,s.currentOcclusionQueryObjects=s.occlusionQueryObjects,s.lastOcclusionObject=null,s.occlusionQueries=new Array(r),s.occlusionQueryObjects=new Array(r),s.occlusionQueryIndex=0)}finishRender(e){const t=this.get(e).previousContext;if(this._currentContext=t,null!==t)if(this._setFramebuffer(t),t.viewport)this.updateViewport(t);else{const e=this.gl;e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight)}const s=e.occlusionQueryCount;if(s>0){if(s>this.get(e).occlusionQueryIndex){const{gl:e}=this;e.endQuery(e.ANY_SAMPLES_PASSED)}this.resolveOccludedAsync(e)}}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet,{gl:n}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const i=()=>{let o=0;for(let t=0;t<s.length;t++){const i=s[t];null!==i&&(n.getQueryParameter(i,n.QUERY_RESULT_AVAILABLE)&&(n.getQueryParameter(i,n.QUERY_RESULT)>0&&e.add(r[t]),s[t]=null,n.deleteQuery(i),o++))}o<s.length?requestAnimationFrame(i):t.occluded=e};i()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const t=this.gl,{x:s,y:r,width:n,height:i}=e.viewportValue;t.viewport(s,r,n,i)}clear(e,t,s,r=null){const{gl:n}=this;null===r&&(r={textures:null,clearColorValue:this.getClearColor()});let i=0;if(e&&(i|=n.COLOR_BUFFER_BIT),t&&(i|=n.DEPTH_BUFFER_BIT),s&&(i|=n.STENCIL_BUFFER_BIT),0!==i){const o=r.clearColorValue;if(t&&this.state.setDepthMask(!0),null===r.textures)n.clearColor(o.r,o.g,o.b,o.a),n.clear(i);else{if(e)for(let e=0;e<r.textures.length;e++)n.clearBufferfv(n.COLOR,e,[o.r,o.g,o.b,o.a]);t&&s?n.clearBufferfi(n.DEPTH_STENCIL,0,1,0):t?n.clearBufferfv(n.DEPTH,0,[1]):s&&n.clearBufferiv(n.STENCIL,0,[0])}}}beginCompute(){}compute(){}finishCompute(){}draw(e,t){const{pipeline:s,material:r,context:n}=e,{programGPU:i,vaoGPU:o}=this.get(s),{gl:a,state:u}=this,l=this.get(n),c=e.getBindings();for(const e of c){const t=this.get(e),s=t.index;e.isUniformsGroup||e.isUniformBuffer?a.bindBufferBase(a.UNIFORM_BUFFER,s,t.bufferGPU):e.isSampledTexture&&(a.activeTexture(a.TEXTURE0+s),a.bindTexture(t.glTextureType,t.textureGPU))}u.setMaterial(r),a.useProgram(i),a.bindVertexArray(o);const d=e.getIndex(),h=e.object,p=e.geometry,m=p.drawRange,g=m.start,f=l.lastOcclusionObject;if(f!==h&&void 0!==f){if(null!==f&&!0===f.occlusionTest&&(a.endQuery(a.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),!0===h.occlusionTest){const e=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,e),l.occlusionQueries[l.occlusionQueryIndex]=e,l.occlusionQueryObjects[l.occlusionQueryIndex]=h}l.lastOcclusionObject=h}let x;x=h.isPoints?a.POINTS:h.isLineSegments?a.LINES:h.isLine?a.LINE_STRIP:h.isLineLoop?a.LINE_LOOP:a.TRIANGLES;const b=this.getInstanceCount(e);if(null!==d){const e=this.get(d),s=m.count!==1/0?m.count:d.count;b>1?a.drawElementsInstanced(x,d.count,e.type,g,b):a.drawElements(x,d.count,e.type,g),t.update(h,s,1)}else{const e=p.attributes.position,s=m.count!==1/0?m.count:e.count;b>1?a.drawArraysInstanced(x,0,s,b):a.drawArrays(x,0,s),t.update(h,s,1)}a.bindVertexArray(null)}needsRenderUpdate(e){return!1}getRenderCacheKey(e){return e.id}createSampler(){}destroySampler(){}createDefaultTexture(e){const{gl:t,textureUtils:s,defaultTextures:r}=this,n=s.getGLTextureType(e);let i=r[n];void 0===i&&(i=t.createTexture(),t.bindTexture(n,i),t.texParameteri(n,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(n,t.TEXTURE_MAG_FILTER,t.NEAREST),r[n]=i),this.set(e,{textureGPU:i,glTextureType:n,isDefault:!0})}createTexture(e,t){const{gl:s,utils:r,textureUtils:n}=this,{levels:i,width:o,height:a,depth:u}=t,l=r.convert(e.format,e.colorSpace),c=r.convert(e.type),d=n.getInternalFormat(e.internalFormat,l,c,e.colorSpace,e.isVideoTexture),h=s.createTexture(),p=n.getGLTextureType(e);s.bindTexture(p,h),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,e.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,e.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE),n.setTextureParameters(p,e),s.bindTexture(p,h),e.isDataArrayTexture?s.texStorage3D(s.TEXTURE_2D_ARRAY,i,d,o,a,u):e.isVideoTexture||s.texStorage2D(p,i,d,o,a),this.set(e,{textureGPU:h,glTextureType:p,glFormat:l,glType:c,glInternalFormat:d})}updateTexture(e,t){const{gl:s}=this,{width:r,height:n}=t,{textureGPU:i,glTextureType:o,glFormat:a,glType:u,glInternalFormat:l}=this.get(e),c=e=>e.isDataTexture?e.image.data:e instanceof ImageBitmap||e instanceof OffscreenCanvas||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement?e:e.data;if(s.bindTexture(o,i),e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const i=c(e[t]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,r,n,a,u,i)}}else if(e.isDataArrayTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,a,u,e.data)}else if(e.isVideoTexture)e.update(),s.texImage2D(o,0,l,a,u,t.image);else{const e=c(t.image);s.texSubImage2D(o,0,0,0,r,n,a,u,e)}}generateMipmaps(e){const{gl:t}=this,{textureGPU:s,glTextureType:r}=this.get(e);t.bindTexture(r,s),t.generateMipmap(r)}destroyTexture(){}copyTextureToBuffer(e,t,s,r,n){return this.textureUtils.copyTextureToBuffer(e,t,s,r,n)}createNodeBuilder(e,t,s=null){return new df(e,t,s)}createProgram(e){const t=this.gl,{stage:s,code:r}=e,n="vertex"===s?t.createShader(t.VERTEX_SHADER):t.createShader(t.FRAGMENT_SHADER);t.shaderSource(n,r),t.compileShader(n),this.set(e,{shaderGPU:n})}destroyProgram(){}createRenderPipeline(e){const t=this.gl,s=e.pipeline,{fragmentProgram:r,vertexProgram:n}=s,i=t.createProgram(),o=this.get(r).shaderGPU,a=this.get(n).shaderGPU;t.attachShader(i,o),t.attachShader(i,a),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS),t.useProgram(i);const u=e.getBindings();for(const e of u){const s=this.get(e).index;if(e.isUniformsGroup||e.isUniformBuffer){const r=t.getUniformBlockIndex(i,e.name);t.uniformBlockBinding(i,r,s)}else if(e.isSampledTexture){const r=t.getUniformLocation(i,e.name);t.uniform1i(r,s)}}const l=t.createVertexArray(),c=e.getIndex(),d=e.getAttributes();if(t.bindVertexArray(l),null!==c){const e=this.get(c);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.bufferGPU)}for(let e=0;e<d.length;e++){const s=d[e],r=this.get(s);let n,i;t.bindBuffer(t.ARRAY_BUFFER,r.bufferGPU),t.enableVertexAttribArray(e),!0===s.isInterleavedBufferAttribute?(n=s.data.stride*r.bytesPerElement,i=s.offset*r.bytesPerElement):(n=0,i=0),r.isInteger?t.vertexAttribIPointer(e,s.itemSize,r.type,n,i):t.vertexAttribPointer(e,s.itemSize,r.type,s.normalized,n,i),s.isInstancedBufferAttribute&&!s.isInterleavedBufferAttribute?t.vertexAttribDivisor(e,s.meshPerAttribute):s.isInterleavedBufferAttribute&&s.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(e,s.data.meshPerAttribute)}t.bindVertexArray(null),this.set(s,{programGPU:i,vaoGPU:l})}createComputePipeline(){}createBindings(e){this.updateBindings(e)}updateBindings(e){const{gl:t}=this;let s=0,r=0;for(const n of e)if(n.isUniformsGroup||n.isUniformBuffer){const e=t.createBuffer(),r=n.buffer;t.bindBuffer(t.UNIFORM_BUFFER,e),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW),t.bindBufferBase(t.UNIFORM_BUFFER,s,e),this.set(n,{index:s++,bufferGPU:e})}else if(n.isSampledTexture){const{textureGPU:e,glTextureType:t}=this.get(n.texture);this.set(n,{index:r++,textureGPU:e,glTextureType:t})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const s=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,s),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(){}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(){}updateSize(){}hasFeature(e){return!0}copyFramebufferToTexture(e,t){const{gl:s}=this,{textureGPU:r}=this.get(e),n=e.image.width,i=e.image.height;if(s.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.isDepthTexture){const e=s.createFramebuffer();s.bindFramebuffer(s.DRAW_FRAMEBUFFER,e),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,r,0),s.blitFramebuffer(0,0,n,i,0,0,n,i,s.DEPTH_BUFFER_BIT,s.NEAREST),s.deleteFramebuffer(e)}else s.bindTexture(s.TEXTURE_2D,r),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,0,0,n,i),s.bindTexture(s.TEXTURE_2D,null);e.generateMipmaps&&this.generateMipmaps(e),this._setFramebuffer(t)}_setFramebuffer(e){const{gl:t}=this;if(null!==e.textures){const s=this.get(e);let r=s.framebuffer;if(void 0===r){r=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,r);const n=e.textures,i=[];for(let e=0;e<n.length;e++){const s=n[e],{textureGPU:r}=this.get(s),o=t.COLOR_ATTACHMENT0+e;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,r,0),i.push(o)}if(t.drawBuffers(i),null!==e.depthTexture){const{textureGPU:s}=this.get(e.depthTexture);t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,s,0)}s.framebuffer=r}else t.bindFramebuffer(t.FRAMEBUFFER,r)}else t.bindFramebuffer(t.FRAMEBUFFER,null)}}const wf="point-list",Mf="line-list",Of="line-strip",Ff="triangle-list",Bf="triangle-strip",Uf="never",If="less",Lf="equal",Df="less-equal",Pf="greater",Gf="not-equal",kf="greater-equal",Vf="always",zf="store",$f="load",Hf="clear",Wf="ccw",jf="none",qf="front",Xf="back",Yf="uint16",Kf="uint32",Qf={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Zf="clamp-to-edge",Jf="repeat",ex="mirror-repeat",tx="linear",sx="nearest",rx={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},nx="add",ix="subtract",ox="reverse-subtract",ax="min",ux="max",lx=0,cx=15,dx="keep",hx="zero",px="replace",mx="invert",gx="increment-clamp",fx="decrement-clamp",xx="increment-wrap",bx="decrement-wrap",Tx="storage",_x="unfilterable-float",yx="depth",Nx="2d",vx="3d",Sx="2d",Ax="2d-array",Rx="cube",Cx="all",Ex="vertex",wx="instance",Mx={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable"};class Ox extends qg{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class Fx extends Ox{constructor(e,t){super(e,t?t.value:null),this.textureNode=t}}class Bx extends Qg{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}class Ux{constructor(e){this.device=e;this.mipmapSampler=e.createSampler({minFilter:tx}),this.flipYSampler=e.createSampler({minFilter:sx}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Bf,stripIndexFormat:Kf},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Bf,stripIndexFormat:Kf},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const r=t.format,{width:n,height:i}=t.size,o=this.getTransferPipeline(r),a=this.getFlipYPipeline(r),u=this.device.createTexture({size:{width:n,height:i,depthOrArrayLayers:1},format:r,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Sx,baseArrayLayer:s}),c=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:Sx,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),h=(e,t,s)=>{const r=e.getBindGroupLayout(0),n=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),i=d.beginRenderPass({colorAttachments:[{view:s,loadOp:Hf,storeOp:zf,clearValue:[0,0,0,0]}]});i.setPipeline(e),i.setBindGroup(0,n),i.draw(4,1,0,0),i.end()};h(o,l,c),h(a,c,l),this.device.queue.submit([d.finish()]),u.destroy()}generateMipmaps(e,t,s=0){const r=this.getTransferPipeline(t.format),n=this.device.createCommandEncoder({}),i=r.getBindGroupLayout(0);let o=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Sx,baseArrayLayer:s});for(let a=1;a<t.mipLevelCount;a++){const t=this.device.createBindGroup({layout:i,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:o}]}),u=e.createView({baseMipLevel:a,mipLevelCount:1,dimension:Sx,baseArrayLayer:s}),l=n.beginRenderPass({colorAttachments:[{view:u,loadOp:Hf,storeOp:zf,clearValue:[0,0,0,0]}]});l.setPipeline(r),l.setBindGroup(0,t),l.draw(4,1,0,0),l.end(),o=u}this.device.queue.submit([n.finish()])}}const Ix={[ts]:"never",[y]:"less",[ns]:"equal",[rs]:"less-equal",[os]:"greater",[is]:"greater-equal",[ss]:"always",[as]:"not-equal"},Lx=[0,1,3,2,4,5];class Dx{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture=null,this.defaultCubeTexture=null,this.colorBuffer=null,this.depthTexture=new T,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,s=t.device,r=t.get(e),n={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:e.anisotropy};e.isDepthTexture&&null!==e.compareFunction&&(n.compare=Ix[e.compareFunction]),r.sampler=s.createSampler(n)}createDefaultTexture(e){let t;t=e.isCubeTexture?this._getDefaultCubeTextureGPU():this._getDefaultTextureGPU(),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,r=s.get(e);if(r.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:n,height:i,depth:o,levels:a}=t,u=this._getDimension(e),l=e.internalFormat||Px(e,s.device),c=void 0!==t.sampleCount?t.sampleCount:1,d=e.isRenderTargetTexture?1:c;let h=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(h|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&(h|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:n,height:i,depthOrArrayLayers:o},mipLevelCount:a,sampleCount:d,dimension:u,format:l,usage:h};if(e.isVideoTexture){const t=e.source.data,s=new VideoFrame(t);p.size.width=s.displayWidth,p.size.height=s.displayHeight,s.close(),r.externalTexture=t}else{if(void 0===l)return this.createDefaultTexture(e);r.texture=s.device.createTexture(p)}if(e.isRenderTargetTexture&&c>1){const e=Object.assign({},p);e.label=e.label+"-msaa",e.sampleCount=c,r.msaaTexture=s.device.createTexture(e)}r.initialized=!0,r.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture.destroy(),void 0!==s.msaaTexture&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let e=0;e<6;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e);else this._generateMipmaps(t.texture,t.textureDescriptorGPU)}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:s}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:s,depthOrArrayLayers:1},sampleCount:e.parameters.sampleCount,format:Qf.BGRA8Unorm,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!0){const s=this.backend,{width:r,height:n}=s.getDrawingBufferSize(),i=this.depthTexture,o=s.get(i).texture;let a,u;if(t?(a=fe,u=xe):e&&(a=C,u=R),void 0!==o){if(i.image.width===r&&i.image.height===n&&i.format===a&&i.type===u)return o;this.destroyTexture(i)}return i.name="depthBuffer",i.format=a,i.type=u,i.image.width=r,i.image.height=n,this.createTexture(i,{sampleCount:s.parameters.sampleCount,width:r,height:n}),s.get(i).texture}updateTexture(e,t){const s=this.backend.get(e),{textureDescriptorGPU:r}=s;if(!e.isRenderTargetTexture&&void 0!==r){if(e.isDataTexture||e.isData3DTexture)this._copyBufferToTexture(t.image,s.texture,r,0,!1);else if(e.isDataArrayTexture)for(let e=0;e<t.image.depth;e++)this._copyBufferToTexture(t.image,s.texture,r,e,!1,e);else if(e.isCompressedTexture)this._copyCompressedBufferToTexture(e.mipmaps,s.texture,r);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,s.texture,r,e.flipY);else if(e.isVideoTexture){const t=e.source.data;s.externalTexture=t}else this._copyImageToTexture(t.image,s.texture,r,0,e.flipY);s.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,s,r,n){const i=this.backend.device,o=this.backend.get(e),a=o.texture,u=o.textureDescriptorGPU.format,l=this._getBytesPerTexel(u),c=i.createBuffer({size:r*n*l,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),d=i.createCommandEncoder();d.copyTextureToBuffer({texture:a,origin:{x:t,y:s}},{buffer:c,bytesPerRow:r*l},{width:r,height:n});const h=this._getTypedArrayType(u);i.queue.submit([d.finish()]),await c.mapAsync(GPUMapMode.READ);return new h(c.getMappedRange())}_isEnvironmentTexture(e){const t=e.mapping;return t===be||t===Te||t===_e||t===ye}_getDefaultTextureGPU(){let e=this.defaultTexture;if(null===e){const t=new ls;t.minFilter=_,t.magFilter=_,this.createTexture(t,{width:1,height:1}),this.defaultTexture=e=t}return this.backend.get(e).texture}_getDefaultCubeTextureGPU(){let e=this.defaultTexture;if(null===e){const t=new cs;t.minFilter=_,t.magFilter=_,this.createTexture(t,{width:1,height:1,depth:6}),this.defaultCubeTexture=e=t}return this.backend.get(e).texture}_copyCubeMapToTexture(e,t,s,r){for(let n=0;n<6;n++){const i=e[n],o=!0===r?Lx[n]:n;i.isDataTexture?this._copyBufferToTexture(i.image,t,s,o,r):this._copyImageToTexture(i,t,s,o,r)}}_copyImageToTexture(e,t,s,r,n){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===n&&this._flipY(t,s,r)}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new Ux(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,r,n,i=0){const o=this.backend.device,a=e.data,u=this._getBytesPerTexel(s.format),l=e.width*u;o.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},a,{offset:e.width*e.height*u*i,bytesPerRow:l},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===n&&this._flipY(t,s,r)}_copyCompressedBufferToTexture(e,t,s){const r=this.backend.device,n=this._getBlockData(s.format);for(let s=0;s<e.length;s++){const i=e[s],o=i.width,a=i.height,u=Math.ceil(o/n.width)*n.byteLength;r.queue.writeTexture({texture:t,mipLevel:s},i.data,{offset:0,bytesPerRow:u},{width:Math.ceil(o/n.width)*n.width,height:Math.ceil(a/n.width)*n.width,depthOrArrayLayers:1})}}_getBlockData(e){return e===Qf.BC1RGBAUnorm||e===Qf.BC1RGBAUnormSRGB?{byteLength:8,width:4,height:4}:e===Qf.BC2RGBAUnorm||e===Qf.BC2RGBAUnormSRGB||e===Qf.BC3RGBAUnorm||e===Qf.BC3RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===Qf.BC4RUnorm||e===Qf.BC4RSNorm?{byteLength:8,width:4,height:4}:e===Qf.BC5RGUnorm||e===Qf.BC5RGSnorm||e===Qf.BC6HRGBUFloat||e===Qf.BC6HRGBFloat||e===Qf.BC7RGBAUnorm||e===Qf.BC7RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===Qf.ETC2RGB8Unorm||e===Qf.ETC2RGB8UnormSRGB||e===Qf.ETC2RGB8A1Unorm||e===Qf.ETC2RGB8A1UnormSRGB?{byteLength:8,width:4,height:4}:e===Qf.ETC2RGBA8Unorm||e===Qf.ETC2RGBA8UnormSRGB?{byteLength:16,width:4,height:4}:e===Qf.EACR11Unorm||e===Qf.EACR11Snorm?{byteLength:8,width:4,height:4}:e===Qf.EACRG11Unorm||e===Qf.EACRG11Snorm||e===Qf.ASTC4x4Unorm||e===Qf.ASTC4x4UnormSRGB?{byteLength:16,width:4,height:4}:e===Qf.ASTC5x4Unorm||e===Qf.ASTC5x4UnormSRGB?{byteLength:16,width:5,height:4}:e===Qf.ASTC5x5Unorm||e===Qf.ASTC5x5UnormSRGB?{byteLength:16,width:5,height:5}:e===Qf.ASTC6x5Unorm||e===Qf.ASTC6x5UnormSRGB?{byteLength:16,width:6,height:5}:e===Qf.ASTC6x6Unorm||e===Qf.ASTC6x6UnormSRGB?{byteLength:16,width:6,height:6}:e===Qf.ASTC8x5Unorm||e===Qf.ASTC8x5UnormSRGB?{byteLength:16,width:8,height:5}:e===Qf.ASTC8x6Unorm||e===Qf.ASTC8x6UnormSRGB?{byteLength:16,width:8,height:6}:e===Qf.ASTC8x8Unorm||e===Qf.ASTC8x8UnormSRGB?{byteLength:16,width:8,height:8}:e===Qf.ASTC10x5Unorm||e===Qf.ASTC10x5UnormSRGB?{byteLength:16,width:10,height:5}:e===Qf.ASTC10x6Unorm||e===Qf.ASTC10x6UnormSRGB?{byteLength:16,width:10,height:6}:e===Qf.ASTC10x8Unorm||e===Qf.ASTC10x8UnormSRGB?{byteLength:16,width:10,height:8}:e===Qf.ASTC10x10Unorm||e===Qf.ASTC10x10UnormSRGB?{byteLength:16,width:10,height:10}:e===Qf.ASTC12x10Unorm||e===Qf.ASTC12x10UnormSRGB?{byteLength:16,width:12,height:10}:e===Qf.ASTC12x12Unorm||e===Qf.ASTC12x12UnormSRGB?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=Zf;return e===Kt?t=Jf:e===Zt&&(t=ex),t}_convertFilterMode(e){let t=tx;return e!==_&&e!==A&&e!==Jt||(t=sx),t}_getBytesPerTexel(e){return e===Qf.R8Unorm?1:e===Qf.R16Float||e===Qf.RG8Unorm?2:e===Qf.RG16Float||e===Qf.R32Float||e===Qf.RGBA8Unorm||e===Qf.RGBA8UnormSRGB?4:e===Qf.RG32Float||e===Qf.RGBA16Float?8:e===Qf.RGBA32Float?16:void 0}_getTypedArrayType(e){return e===Qf.R8Uint?Uint8Array:e===Qf.R8Sint?Int8Array:e===Qf.R8Unorm?Uint8Array:e===Qf.R8Snorm?Int8Array:e===Qf.RG8Uint?Uint8Array:e===Qf.RG8Sint?Int8Array:e===Qf.RG8Unorm?Uint8Array:e===Qf.RG8Snorm?Int8Array:e===Qf.RGBA8Uint?Uint8Array:e===Qf.RGBA8Sint?Int8Array:e===Qf.RGBA8Unorm?Uint8Array:e===Qf.RGBA8Snorm?Int8Array:e===Qf.R16Uint?Uint16Array:e===Qf.R16Sint?Int16Array:e===Qf.RG16Uint?Uint16Array:e===Qf.RG16Sint?Int16Array:e===Qf.RGBA16Uint?Uint16Array:e===Qf.RGBA16Sint?Int16Array:e===Qf.R32Uint?Uint32Array:e===Qf.R32Sint?Int32Array:e===Qf.R32Float?Float32Array:e===Qf.RG32Uint?Uint32Array:e===Qf.RG32Sint?Int32Array:e===Qf.RG32Float?Float32Array:e===Qf.RGBA32Uint?Uint32Array:e===Qf.RGBA32Sint?Int32Array:e===Qf.RGBA32Float?Float32Array:void 0}_getDimension(e){let t;return t=e.isData3DTexture?vx:Nx,t}}function Px(e,t=null){const s=e.format,r=e.type,n=e.colorSpace;let i;if(!0===e.isFramebufferTexture)i=Qf.BGRA8Unorm;else if(!0===e.isCompressedTexture)switch(s){case yt:i=n===h?Qf.BC1RGBAUnormSRGB:Qf.BC1RGBAUnorm;break;case Nt:i=n===h?Qf.BC2RGBAUnormSRGB:Qf.BC2RGBAUnorm;break;case vt:i=n===h?Qf.BC3RGBAUnormSRGB:Qf.BC3RGBAUnorm;break;case wt:i=n===h?Qf.ETC2RGB8UnormSRGB:Qf.ETC2RGB8Unorm;break;case Mt:i=n===h?Qf.ETC2RGBA8UnormSRGB:Qf.ETC2RGBA8Unorm;break;case Ot:i=n===h?Qf.ASTC4x4UnormSRGB:Qf.ASTC4x4Unorm;break;case Ft:i=n===h?Qf.ASTC5x4UnormSRGB:Qf.ASTC5x4Unorm;break;case Bt:i=n===h?Qf.ASTC5x5UnormSRGB:Qf.ASTC5x5Unorm;break;case Ut:i=n===h?Qf.ASTC6x5UnormSRGB:Qf.ASTC6x5Unorm;break;case It:i=n===h?Qf.ASTC6x6UnormSRGB:Qf.ASTC6x6Unorm;break;case Lt:i=n===h?Qf.ASTC8x5UnormSRGB:Qf.ASTC8x5Unorm;break;case Dt:i=n===h?Qf.ASTC8x6UnormSRGB:Qf.ASTC8x6Unorm;break;case Pt:i=n===h?Qf.ASTC8x8UnormSRGB:Qf.ASTC8x8Unorm;break;case Gt:i=n===h?Qf.ASTC10x5UnormSRGB:Qf.ASTC10x5Unorm;break;case kt:i=n===h?Qf.ASTC10x6UnormSRGB:Qf.ASTC10x6Unorm;break;case Vt:i=n===h?Qf.ASTC10x8UnormSRGB:Qf.ASTC10x8Unorm;break;case zt:i=n===h?Qf.ASTC10x10UnormSRGB:Qf.ASTC10x10Unorm;break;case $t:i=n===h?Qf.ASTC12x10UnormSRGB:Qf.ASTC12x10Unorm;break;case Ht:i=n===h?Qf.ASTC12x12UnormSRGB:Qf.ASTC12x12Unorm}else switch(s){case ht:switch(r){case nt:i=n===h?Qf.RGBA8UnormSRGB:Qf.RGBA8Unorm;break;case ct:i=Qf.RGBA16Float;break;case b:i=Qf.RGBA32Float}break;case gt:switch(r){case nt:i=Qf.R8Unorm;break;case ct:i=Qf.R16Float;break;case b:i=Qf.R32Float}break;case xt:switch(r){case nt:i=Qf.RG8Unorm;break;case ct:i=Qf.RG16Float;break;case b:i=Qf.RG32Float}break;case C:switch(r){case lt:i=Qf.Depth16Unorm;break;case R:i=Qf.Depth24Plus;break;case b:i=Qf.Depth32Float}break;case fe:switch(r){case xe:i=Qf.Depth24PlusStencil8;break;case b:t&&t.features.has(Mx.Depth32FloatStencil8),i=Qf.Depth32FloatStencil8}}return i}const Gx=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+)?/i,kx=/[a-z_0-9]+|<(.*?)>+/gi,Vx={f32:"float"};class zx extends Dm{constructor(e){const{type:t,inputs:s,name:r,inputsCode:n,blockCode:i}=(e=>{const t=(e=e.trim()).match(Gx);if(null!==t&&4===t.length){const s=t[2],r=[];let n=null;for(;null!==(n=kx.exec(s));)r.push(n);const i=[];let o=0;for(;o<r.length;){const e=r[o++][0];let t=r[o++][0];t=Vx[t]||t,o<r.length&&!0===r[o][0].startsWith("<")&&o++,i.push(new Yc(t,e))}const a=e.substring(t[0].length),u=void 0!==t[1]?t[1]:"";return{type:t[3]||"void",inputs:i,name:u,inputsCode:s,blockCode:a}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,s,r),this.inputsCode=n,this.blockCode=i}getCode(e=this.name){const t="void"!==this.type?"-> "+this.type:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class $x extends Lm{parseFunction(e){return new zx(e)}}const Hx={vertex:GPUShaderStage.VERTEX,fragment:GPUShaderStage.FRAGMENT,compute:GPUShaderStage.COMPUTE},Wx={instance:!0},jx={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat3:"mat3x3<f32>",imat3:"mat3x3<i32>",umat3:"mat3x3<u32>",bmat3:"mat3x3<bool>",mat4:"mat4x4<f32>",imat4:"mat4x4<i32>",umat4:"mat4x4<u32>",bmat4:"mat4x4<bool>"},qx={dFdx:"dpdx",dFdy:"- dpdy",mod:"threejs_mod",lessThanEqual:"threejs_lessThanEqual",inversesqrt:"inverseSqrt"},Xx={lessThanEqual:new Kh("\nfn threejs_lessThanEqual( a : vec3<f32>, b : vec3<f32> ) -> vec3<bool> {\n\n\treturn vec3<bool>( a.x <= b.x, a.y <= b.y, a.z <= b.z );\n\n}\n"),mod:new Kh("\nfn threejs_mod( x : f32, y : f32 ) -> f32 {\n\n\treturn x - y * floor( x / y );\n\n}\n"),repeatWrapping:new Kh("\nfn threejs_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {\n\n\tlet uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );\n\n\treturn ( ( uvScaled % dimension ) + dimension ) % dimension;\n\n}\n")};class Yx extends qc{constructor(e,t,s=null){super(e,t,new $x,s),this.uniformGroups={},this.builtins={}}build(){const{object:e,material:t}=this;return null!==t?Tc.fromMaterial(t).build(this):this.addFlow("compute",e),super.build()}needsColorSpaceToLinear(e){return!0===e.isVideoTexture&&e.colorSpace!==w}_generateTextureSample(e,t,s,r,n=this.shaderStage){return"fragment"===n?r?`textureSample( ${t}, ${t}_sampler, ${s}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${s} )`:this.generateTextureLod(e,t,s)}_generateVideoSample(e,t,s=this.shaderStage){if("fragment"===s)return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`}_generateTextureSampleLevel(e,t,s,r,n,i=this.shaderStage){return"fragment"===i&&!1===this.isUnfilterable(e)?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${r} )`:this.generateTextureLod(e,t,s,r)}generateTextureLod(e,t,s,r="0"){this._include("repeatWrapping");return`textureLoad( ${t}, threejs_repeatWrapping( ${s}, ${`textureDimensions( ${t}, 0 )`} ), i32( ${r} ) )`}generateTextureLoad(e,t,s,r,n="0u"){return r?`textureLoad( ${t}, ${s}, ${r}, ${n} )`:`textureLoad( ${t}, ${s}, ${n} )`}isUnfilterable(e){return!0===e.isDataTexture&&e.type===b}generateTexture(e,t,s,r,n=this.shaderStage){let i=null;return i=!0===e.isVideoTexture?this._generateVideoSample(t,s,n):this.isUnfilterable(e)?this.generateTextureLod(e,t,s,"0",r,n):this._generateTextureSample(e,t,s,r,n),i}generateTextureCompare(e,t,s,r,n,i=this.shaderStage){if("fragment"===i)return`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${r} )`}generateTextureLevel(e,t,s,r,n,i=this.shaderStage){let o=null;return o=!0===e.isVideoTexture?this._generateVideoSample(t,s,i):this._generateTextureSampleLevel(e,t,s,r,n,i),o}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`varyings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,s=e.type;return"texture"===s||"cubeTexture"===s?t:"buffer"===s||"storageBuffer"===s?`NodeBuffer_${e.id}.${t}`:e.groupNode.name+"."+t}return super.getPropertyName(e)}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getUniformFromNode(e,t,s,r=null){const n=super.getUniformFromNode(e,t,s,r),i=this.getDataFromNode(e,s);if(void 0===i.uniformGPU){let r;const o=this.bindings[s];if("texture"===t||"cubeTexture"===t){let i=null;if("texture"===t?i=new nf(n.name,n.node):"cubeTexture"===t&&(i=new of(n.name,n.node)),i.store=!0===e.isStoreTextureNode,i.setVisibility(Hx[s]),"fragment"===s&&!1===this.isUnfilterable(e.value)&&!1===i.store){const e=new Fx(`${n.name}_sampler`,n.node);e.setVisibility(Hx[s]),o.push(e,i),r=[e,i]}else o.push(i),r=[i]}else if("buffer"===t||"storageBuffer"===t){const n=new("storageBuffer"===t?Bx:Zg)("NodeBuffer_"+e.id,e.value);n.setVisibility(Hx[s]),o.push(n),r=n}else{const i=e.groupNode,a=i.name,u=this.uniformGroups[s]||(this.uniformGroups[s]={});let l=u[a];if(void 0===l&&(l=new tf(a,i),l.setVisibility(Hx[s]),u[a]=l,o.push(l)),!0===e.isArrayUniformNode){r=[];for(const s of e.nodes){const e=this.getNodeUniform(s,t);e.boundary=Yg(e.itemSize),e.itemSize=Kg(e.itemSize),l.addUniform(e),r.push(e)}}else r=this.getNodeUniform(n,t),l.addUniform(r)}i.uniformGPU=r,"vertex"===s&&(this.bindingsOffset.fragment=o.length)}return n}isReference(e){return super.isReference(e)||"texture_2d"===e||"texture_cube"===e||"texture_storage_2d"===e}getBuiltin(e,t,s,r=this.shaderStage){const n=this.builtins[r]||(this.builtins[r]=new Map);return!1===n.has(e)&&n.set(e,{name:e,property:t,type:s}),t}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionNode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(e.name+" : "+this.getType(e.type));const n=`fn ${t.name}( ${r.join(", ")} ) -> ${this.getType(t.type)} {\n${s.vars}\n${s.code}\n\treturn ${s.result};\n\n}`;return new rp(n)}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}isFlipY(){return!1}getBuiltins(e){const t=[],s=this.builtins[e];if(void 0!==s)for(const{name:e,property:r,type:n}of s.values())t.push(`@builtin( ${e} ) ${r} : ${n}`);return t.join(",\n\t")}getAttributes(e){const t=[];if("compute"===e&&this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),"vertex"===e||"compute"===e){const e=this.getBuiltins("attribute");e&&t.push(e);const s=this.getAttributesArray();for(let e=0,r=s.length;e<r;e++){const r=s[e],n=r.name,i=this.getType(r.type);t.push(`@location( ${e} ) ${n} : ${i}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`\t@location( ${e} ) m${e} : ${r}<f32>`)}return t.join(",\n")}getStructs(e){const t=[],s=this.structs[e];for(let e=0,r=s.length;e<r;e++){const r=s[e];let n=`struct ${r.name} {\n`;n+=this.getStructMembers(r),n+="\n}",t.push(n)}return t.join("\n\n")}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`\t${this.getVar(e.type,e.name)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const s=this.varyings,r=this.vars[e];for(let n=0;n<s.length;n++){const i=s[n];if(i.needsInterpolation){let e=`@location( ${n} )`;/^(int|uint|ivec|uvec)/.test(i.type)&&(e+=" @interpolate( flat )"),t.push(`${e} ${i.name} : ${this.getType(i.type)}`)}else"vertex"===e&&!1===r.includes(i)&&r.push(i)}}const s=this.getBuiltins(e);s&&t.push(s);const r=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("VaryingsStruct","\t"+r):r}getUniforms(e){const t=this.uniforms[e],s=[],r=[],n=[],i={};let o=this.bindingsOffset[e];for(const n of t)if("texture"===n.type||"cubeTexture"===n.type){const t=n.node.value;let r;if("fragment"===e&&!1===this.isUnfilterable(t)&&!0!==n.node.isStoreTextureNode&&(!0===t.isDepthTexture&&null!==t.compareFunction?s.push(`@binding( ${o++} ) @group( 0 ) var ${n.name}_sampler : sampler_comparison;`):s.push(`@binding( ${o++} ) @group( 0 ) var ${n.name}_sampler : sampler;`)),!0===t.isCubeTexture)r="texture_cube<f32>";else if(!0===t.isDataArrayTexture)r="texture_2d_array<f32>";else if(!0===t.isDepthTexture)r="texture_depth_2d";else if(!0===t.isVideoTexture)r="texture_external";else if(!0===n.node.isStoreTextureNode){r="texture_storage_2d<"+Px(t)+", write>"}else r="texture_2d<f32>";s.push(`@binding( ${o++} ) @group( 0 ) var ${n.name} : ${r};`)}else if("buffer"===n.type||"storageBuffer"===n.type){const e=n.node,t=this.getType(e.bufferType),s=e.bufferCount,i=s>0?", "+s:"",a=`\t${n.name} : array< ${t}${i} >\n`,u=e.isStorageBufferNode?"storage,read_write":"uniform";r.push(this._getWGSLStructBinding("NodeBuffer_"+e.id,a,u,o++))}else{const e=this.getType(this.getVectorType(n.type)),t=n.groupNode.name,s=i[t]||(i[t]={index:o++,snippets:[]});if(!0===Array.isArray(n.value)){const t=n.value.length;s.snippets.push(`uniform ${e}[ ${t} ] ${n.name}`)}else s.snippets.push(`\t${n.name} : ${e}`)}for(const e in i){const t=i[e];n.push(this._getWGSLStructBinding(e,t.snippets.join(",\n"),"uniform",t.index))}let a=s.join("\n");return a+=r.join("\n"),a+=n.join("\n"),a}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};for(const t in e){const s=e[t];s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.structs=this.getStructs(t),s.vars=this.getVars(t),s.codes=this.getCodes(t);let r="// code\n\n";r+=this.flowCode[t];const n=this.flowNodes[t],i=n[n.length-1],o=i.outputNode,a=void 0!==o&&!0===o.isOutputStructNode;for(const e of n){const n=this.getFlowData(e),u=e.name;if(u&&(r.length>0&&(r+="\n"),r+=`\t// flow -> ${u}\n\t`),r+=`${n.code}\n\t`,e===i&&"compute"!==t)if(r+="// result\n\n\t","vertex"===t)r+=`varyings.Vertex = ${n.result};`;else if("fragment"===t)if(a)s.returnType=o.nodeType,r+=`return ${n.result};`;else{let e="\t@location(0) color: vec4<f32>";const t=this.getBuiltins("output");t&&(e+=",\n\t"+t),s.returnType="OutputStruct",s.structs+=this._getWGSLStruct("OutputStruct",e),s.structs+="\nvar<private> output : OutputStruct;\n\n",r+=`output.color = ${n.result};\n\n\treturn output;`}}s.flow=r}null!==this.material?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e){return void 0!==Xx[e]&&this._include(e),qx[e]||e}getType(e){return jx[e]||e}isAvailable(e){return!0===Wx[e]}_include(e){Xx[e].build(this)}_getWGSLVertexCode(e){return`${this.getSignature()}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\nvar<private> varyings : VaryingsStruct;\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> VaryingsStruct {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn varyings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n\n// uniforms\n${e.uniforms}\n\n// structs\n${e.structs}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){return`${this.getSignature()}\n// system\nvar<private> instanceIndex : u32;\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${t} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = id.x;\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,s,r=0,n=0){const i=e+"Struct";return`${this._getWGSLStruct(i,t)}\n@binding( ${r} ) @group( ${n} )\nvar<${s}> ${e} : ${i};`}}class Kx{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=Qf.Depth24PlusStencil8:e.depth&&(t=Qf.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).texture.format}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):Qf.BGRA8Unorm,t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?wf:e.isLineSegments||e.isMesh&&!0===t.wireframe?Mf:e.isLine?Of:e.isMesh?Ff:void 0}getSampleCount(e){return null!==e.textures?e.sampleCount:this.backend.parameters.sampleCount}}const Qx=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),Zx=new Map([[z,["float16"]]]),Jx=new Map([[Int32Array,"sint32"],[Uint32Array,"uint32"],[Float32Array,"float32"]]);class eb{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),r=this.backend,n=r.get(s);let i=n.buffer;if(void 0===i){const e=r.device,o=s.array,a=o.byteLength+(4-o.byteLength%4)%4;i=e.createBuffer({label:s.name,size:a,usage:t,mappedAtCreation:!0}),new o.constructor(i.getMappedRange()).set(o),i.unmap(),n.buffer=i}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,r=s.device,n=s.get(t).buffer,i=t.array,o=t.updateRanges;if(0===o.length)r.queue.writeBuffer(n,0,i,0);else{for(let e=0,t=o.length;e<t;e++){const t=o[e];r.queue.writeBuffer(n,0,i,t.start*i.BYTES_PER_ELEMENT,t.count*i.BYTES_PER_ELEMENT)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let e=0;e<t.length;e++){const r=t[e],n=r.array.BYTES_PER_ELEMENT,i=this._getBufferAttribute(r);let o=s.get(i);if(void 0===o){let e,t;!0===r.isInterleavedBufferAttribute?(e=r.data.stride*n,t=r.data.isInstancedInterleavedBuffer?wx:Ex):(e=r.itemSize*n,t=r.isInstancedBufferAttribute?wx:Ex),o={arrayStride:e,attributes:[],stepMode:t},s.set(i,o)}const a=this._getVertexFormat(r),u=!0===r.isInterleavedBufferAttribute?r.offset*n:0;o.attributes.push({shaderLocation:e,offset:u,format:a})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,r=t.get(this._getBufferAttribute(e)),n=r.buffer,i=n.size;let o=r.readBuffer,a=!0;void 0===o&&(o=s.createBuffer({label:e.name,size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=!1,r.readBuffer=o);const u=s.createCommandEncoder({});u.copyBufferToBuffer(n,0,o,0,i),a&&o.unmap();const l=u.finish();s.queue.submit([l]),await o.mapAsync(GPUMapMode.READ);return o.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,r=e.array.constructor,n=e.constructor;let i;if(1==t)i=Jx.get(r);else{const e=(Zx.get(n)||Qx.get(r))[s?1:0];if(e){const s=r.BYTES_PER_ELEMENT*t,n=4*Math.floor((s+3)/4)/r.BYTES_PER_ELEMENT;if(n%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");i=`${e}x${n}`}}return i}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class tb{constructor(e){this.backend=e}createBindingsLayout(e){const t=this.backend.device,s=[];let r=0;for(const t of e){const e={binding:r++,visibility:t.visibility};if(t.isUniformBuffer||t.isStorageBuffer){const s={};t.isStorageBuffer&&(s.type=Tx),e.buffer=s}else if(t.isSampler){const s={};t.texture.isDepthTexture&&null!==t.texture.compareFunction&&(s.type="comparison"),e.sampler=s}else if(t.isSampledTexture&&t.texture.isVideoTexture)e.externalTexture={};else if(t.isSampledTexture&&t.store){const s=this.backend.get(t.texture).texture.format;e.storageTexture={format:s}}else if(t.isSampledTexture){const s={};t.texture.isDepthTexture?s.sampleType=yx:t.texture.isDataTexture&&t.texture.type===b&&(s.sampleType=_x),t.isSampledCubeTexture?s.viewDimension=Rx:t.texture.isDataArrayTexture&&(s.viewDimension=Ax),e.texture=s}s.push(e)}return t.createBindGroupLayout({entries:s})}createBindings(e){const t=this.backend.get(e),s=this.createBindingsLayout(e),r=this.createBindGroup(e,s);t.layout=s,t.group=r,t.bindings=e}updateBinding(e){const t=this.backend,s=t.device,r=e.buffer,n=t.get(e).buffer;s.queue.writeBuffer(n,0,r,0)}createBindGroup(e,t){const s=this.backend,r=s.device;let n=0;const i=[];for(const t of e){if(t.isUniformBuffer){const e=s.get(t);if(void 0===e.buffer){const s=t.byteLength,n=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,i=r.createBuffer({label:"bindingBuffer_"+t.name,size:s,usage:n});e.buffer=i}i.push({binding:n,resource:{buffer:e.buffer}})}else if(t.isStorageBuffer){const e=s.get(t);if(void 0===e.buffer){const r=t.attribute;e.buffer=s.get(r).buffer}i.push({binding:n,resource:{buffer:e.buffer}})}else if(t.isSampler){const e=s.get(t.texture);i.push({binding:n,resource:e.sampler})}else if(t.isSampledTexture){const e=s.get(t.texture);let o,a;if(o=t.isSampledCubeTexture?Rx:t.texture.isDataArrayTexture?Ax:Sx,void 0!==e.externalTexture)a=r.importExternalTexture({source:e.externalTexture});else{const t=Cx;a=e.texture.createView({aspect:t,dimension:o})}i.push({binding:n,resource:a})}n++}return r.createBindGroup({layout:t,entries:i})}}class sb{constructor(e){this.backend=e}createRenderPipeline(e){const{object:t,material:s,geometry:r,pipeline:n}=e,{vertexProgram:i,fragmentProgram:o}=n,a=this.backend,u=a.device,l=a.utils,c=a.get(n),d=a.get(e.getBindings()),h=a.attributeUtils.createShaderVertexBuffers(e);let p;!0===s.transparent&&s.blending!==U&&(p=this._getBlending(s));let m={};!0===s.stencilWrite&&(m={compare:this._getStencilCompare(s),failOp:this._getStencilOperation(s.stencilFail),depthFailOp:this._getStencilOperation(s.stencilZFail),passOp:this._getStencilOperation(s.stencilZPass)});const g=this._getColorWriteMask(s),f=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const s=l.getTextureFormatGPU(t[e]);f.push({format:s,blend:p,writeMask:g})}}else{const t=l.getCurrentColorFormat(e.context);f.push({format:t,blend:p,writeMask:g})}const x=a.get(i).module,b=a.get(o).module,T=this._getPrimitiveState(t,r,s),_=this._getDepthCompare(s),y=l.getCurrentDepthStencilFormat(e.context),N=l.getSampleCount(e.context);c.pipeline=u.createRenderPipeline({vertex:Object.assign({},x,{buffers:h}),fragment:Object.assign({},b,{targets:f}),primitive:T,depthStencil:{format:y,depthWriteEnabled:s.depthWrite,depthCompare:_,stencilFront:m,stencilBack:{},stencilReadMask:s.stencilFuncMask,stencilWriteMask:s.stencilWriteMask},multisample:{count:N,alphaToCoverageEnabled:s.alphaToCoverage},layout:u.createPipelineLayout({bindGroupLayouts:[d.layout]})})}createComputePipeline(e,t){const s=this.backend,r=s.device,n=s.get(e.computeProgram).module,i=s.get(e),o=s.get(t);i.pipeline=r.createComputePipeline({compute:n,layout:r.createPipelineLayout({bindGroupLayouts:[o.layout]})})}_getBlending(e){let t,s;const r=e.blending;if(r===We){const r=null!==e.blendSrcAlpha?e.blendSrcAlpha:rx.One,n=null!==e.blendDstAlpha?e.blendDstAlpha:rx.Zero,i=null!==e.blendEquationAlpha?e.blendEquationAlpha:rx.Add;t={srcFactor:this._getBlendFactor(e.blendSrc),dstFactor:this._getBlendFactor(e.blendDst),operation:this._getBlendOperation(e.blendEquation)},s={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(n),operation:this._getBlendOperation(i)}}else{const n=(e,r,n,i)=>{t={srcFactor:e,dstFactor:r,operation:nx},s={srcFactor:n,dstFactor:i,operation:nx}};if(e.premultipliedAlpha)switch(r){case Ye:n(rx.SrcAlpha,rx.OneMinusSrcAlpha,rx.One,rx.OneMinusSrcAlpha);break;case Xe:n(rx.SrcAlpha,rx.One,rx.One,rx.One);break;case qe:n(rx.Zero,rx.OneMinusSrc,rx.Zero,rx.One);break;case je:n(rx.Zero,rx.Src,rx.Zero,rx.SrcAlpha)}else switch(r){case Ye:n(rx.SrcAlpha,rx.OneMinusSrcAlpha,rx.One,rx.OneMinusSrcAlpha);break;case Xe:n(rx.SrcAlpha,rx.One,rx.SrcAlpha,rx.One);break;case qe:n(rx.Zero,rx.OneMinusSrc,rx.Zero,rx.One);break;case je:n(rx.Zero,rx.Src,rx.Zero,rx.Src)}}if(void 0!==t&&void 0!==s)return{color:t,alpha:s}}_getBlendFactor(e){let t;switch(e){case Oe:t=rx.Zero;break;case Fe:t=rx.One;break;case Be:t=rx.Src;break;case Pe:t=rx.OneMinusSrc;break;case Ue:t=rx.SrcAlpha;break;case Ge:t=rx.OneMinusSrcAlpha;break;case Le:t=rx.Dst;break;case ke:t=rx.OneMinusDstColor;break;case De:t=rx.DstAlpha;break;case Ve:t=rx.OneMinusDstAlpha;break;case Ie:t=rx.SrcAlphaSaturated;break;case 211:t=rx.Constant;break;case 212:t=rx.OneMinusConstant}return t}_getStencilCompare(e){let t;switch(e.stencilFunc){case bs:t=Uf;break;case xs:t=Vf;break;case fs:t=If;break;case gs:t=Df;break;case ms:t=Lf;break;case ps:t=kf;break;case hs:t=Pf;break;case ds:t=Gf}return t}_getStencilOperation(e){let t;switch(e){case Rs:t=dx;break;case As:t=hx;break;case Ss:t=px;break;case vs:t=mx;break;case Ns:t=gx;break;case ys:t=fx;break;case _s:t=xx;break;case Ts:t=bx}return t}_getBlendOperation(e){let t;switch(e){case Ee:t=nx;break;case we:t=ix;break;case Me:t=ox;break;case Es:t=ax;break;case Cs:t=ux}return t}_getPrimitiveState(e,t,s){const r={},n=this.backend.utils;switch(r.topology=n.getPrimitiveTopology(e,s),null!==t.index&&!0===e.isLine&&!0!==e.isLineSegments&&(r.stripIndexFormat=t.index.array instanceof Uint16Array?Yf:Kf),s.side){case Ae:r.frontFace=Wf,r.cullMode=Xf;break;case B:r.frontFace=Wf,r.cullMode=qf;break;case Se:r.frontFace=Wf,r.cullMode=jf}return r}_getColorWriteMask(e){return!0===e.colorWrite?cx:lx}_getDepthCompare(e){let t;if(!1===e.depthTest)t=Vf;else{switch(e.depthFunc){case rt:t=Uf;break;case st:t=Vf;break;case tt:t=If;break;case et:t=Df;break;case Je:t=Lf;break;case Ze:t=kf;break;case Qe:t=Pf;break;case Ke:t=Gf}}return t}}let rb=null;void 0!==navigator.gpu&&(rb=await navigator.gpu.requestAdapter());class nb extends gf{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.antialias=!0===e.antialias,!0===this.parameters.antialias?this.parameters.sampleCount=void 0===e.sampleCount?4:e.sampleCount:this.parameters.sampleCount=1,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.adapter=null,this.device=null,this.context=null,this.colorBuffer=null,this.utils=new Kx(this),this.attributeUtils=new eb(this),this.bindingUtils=new tb(this),this.pipelineUtils=new sb(this),this.textureUtils=new Dx(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters,s={powerPreference:t.powerPreference},r=await navigator.gpu.requestAdapter(s);if(null===r)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const n=Object.values(Mx),i=[];for(const e of n)r.features.has(e)&&i.push(e);const o={requiredFeatures:i,requiredLimits:t.requiredLimits},a=await r.requestDevice(o),u=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.adapter=r,this.device=a,this.context=u,this.context.configure({device:this.device,format:Qf.BGRA8Unorm,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:"premultiplied"}),this.updateSize()}get coordinateSystem(){return N}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}beginRender(e){const t=this.get(e),s=this.device,r=e.occlusionQueryCount;let n;r>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,n=s.createQuerySet({type:"occlusion",count:r}),t.occlusionQuerySet=n,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(r),t.lastOcclusionObject=null);const i={colorAttachments:[{view:null}],depthStencilAttachment:{view:null},occlusionQuerySet:n},o=i.colorAttachments[0],a=i.depthStencilAttachment,u=this.parameters.antialias;if(null!==e.textures){const t=e.textures;i.colorAttachments=[];const s=i.colorAttachments;for(let r=0;r<t.length;r++){const n=this.get(t[r]),i=n.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:Sx});let o,a;void 0!==n.msaaTexture?(o=n.msaaTexture.createView(),a=i):(o=i,a=void 0),s.push({view:o,resolveTarget:a,loadOp:$f,storeOp:zf})}const r=this.get(e.depthTexture);a.view=r.texture.createView(),e.stencil&&e.depthTexture.format===C&&(e.stencil=!1)}else!0===u?(o.view=this.colorBuffer.createView(),o.resolveTarget=this.context.getCurrentTexture().createView()):(o.view=this.context.getCurrentTexture().createView(),o.resolveTarget=void 0),a.view=this.textureUtils.getDepthBuffer(e.depth,e.stencil).createView();if(null!==e.textures){const t=i.colorAttachments;for(let s=0;s<t.length;s++){const r=t[s];e.clearColor?(r.clearValue=e.clearColorValue,r.loadOp=Hf,r.storeOp=zf):(r.loadOp=$f,r.storeOp=zf)}}else e.clearColor?(o.clearValue=e.clearColorValue,o.loadOp=Hf,o.storeOp=zf):(o.loadOp=$f,o.storeOp=zf);e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=Hf,a.depthStoreOp=zf):(a.depthLoadOp=$f,a.depthStoreOp=zf)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=Hf,a.stencilStoreOp=zf):(a.stencilLoadOp=$f,a.stencilStoreOp=zf));const l=s.createCommandEncoder({label:"renderContext_"+e.id}),c=l.beginRenderPass(i);if(t.descriptor=i,t.encoder=l,t.currentPass=c,t.currentSets={attributes:{}},e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:s,width:r,height:n}=e.scissorValue;c.setScissorRect(t,e.height-n-s,r,n)}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;if(s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),s>0){const r=8*s;let n=this.occludedResolveCache.get(r);void 0===n&&(n=this.device.createBuffer({size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(r,n));const i=this.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,n,0),t.encoder.copyBufferToBuffer(n,0,i,0,r),t.occlusionQueryBuffer=i,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const s=t[e];!0===s.generateMipmaps&&this.textureUtils.generateMipmaps(s)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const n=s.getMappedRange(),i=new BigUint64Array(n);for(let t=0;t<r.length;t++)0n!==i[t]&&e.add(r[t]);s.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e);let{x:s,y:r,width:n,height:i,minDepth:o,maxDepth:a}=e.viewportValue;t.setViewport(s,e.height-i-r,n,i,o,a)}clear(e,t,s,r=null){const n=this.device,i=this.renderer,o=[];let a,u,l,c;if(e){const e=this.getClearColor();u={r:e.r,g:e.g,b:e.b,a:e.a}}if(null===r){if(l=i.depth,c=i.stencil,t=t&&l,s=s&&c,e){const e={};!0===this.parameters.antialias?(e.view=this.colorBuffer.createView(),e.resolveTarget=this.context.getCurrentTexture().createView()):e.view=this.context.getCurrentTexture().createView(),e.clearValue=u,e.loadOp=Hf,e.storeOp=zf,o.push(e)}(t||s)&&(a={view:this.textureUtils.getDepthBuffer(i.depth,i.stencil).createView()})}else{if(l=r.depth,c=r.stencil,t=t&&l,s=s&&c,e)for(const e of r.textures){const t=this.get(e),s=t.texture.createView();let r,n;void 0!==t.msaaTexture?(r=t.msaaTexture.createView(),n=s):(r=s,n=void 0),o.push({view:r,resolveTarget:n,clearValue:u,loadOp:Hf,storeOp:zf})}if(t||s){a={view:this.get(r.depthTexture).texture.createView()}}}void 0!==a&&(t?(a.depthLoadOp=Hf,a.depthClearValue=i.getClearDepth(),a.depthStoreOp=zf):(a.depthLoadOp=$f,a.depthStoreOp=zf),s?(a.stencilLoadOp=Hf,a.stencilClearValue=i.getClearStencil(),a.stencilStoreOp=zf):(a.stencilLoadOp=$f,a.stencilStoreOp=zf));const d=n.createCommandEncoder({});d.beginRenderPass({colorAttachments:o,depthStencilAttachment:a}).end(),n.queue.submit([d.finish()])}beginCompute(e){const t=this.get(e);t.cmdEncoderGPU=this.device.createCommandEncoder({}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass()}compute(e,t,s,r){const{passEncoderGPU:n}=this.get(e),i=this.get(r).pipeline;n.setPipeline(i);const o=this.get(s).group;n.setBindGroup(0,o),n.dispatchWorkgroups(t.dispatchCount)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}draw(e,t){const{object:s,geometry:r,context:n,pipeline:i}=e,o=this.get(e.getBindings()),a=this.get(n),u=this.get(i).pipeline,l=a.currentSets,c=a.currentPass;l.pipeline!==u&&(c.setPipeline(u),l.pipeline=u);const d=o.group;c.setBindGroup(0,d);const h=e.getIndex(),p=null!==h;if(!0===p&&l.index!==h){const e=this.get(h).buffer,t=h.array instanceof Uint16Array?Yf:Kf;c.setIndexBuffer(e,t),l.index=h}const m=e.getVertexBuffers();for(let e=0,t=m.length;e<t;e++){const t=m[e];if(l.attributes[e]!==t){const s=this.get(t).buffer;c.setVertexBuffer(e,s),l.attributes[e]=t}}if(void 0!==a.occlusionQuerySet){const e=a.lastOcclusionObject;e!==s&&(null!==e&&!0===e.occlusionTest&&(c.endOcclusionQuery(),a.occlusionQueryIndex++),!0===s.occlusionTest&&(c.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=s),a.lastOcclusionObject=s)}const g=r.drawRange,f=g.start,x=this.getInstanceCount(e);if(0!==x)if(!0===p){const e=g.count!==1/0?g.count:h.count;c.drawIndexed(e,x,f,0,0),t.update(s,e,x)}else{const e=r.attributes.position,n=g.count!==1/0?g.count:e.count;c.draw(n,x,f,0),t.update(s,n,x)}}needsRenderUpdate(e){const t=this.get(e),{object:s,material:r}=e,n=this.utils,i=n.getSampleCount(e.context),o=n.getCurrentColorSpace(e.context),a=n.getCurrentColorFormat(e.context),u=n.getCurrentDepthStencilFormat(e.context),l=n.getPrimitiveTopology(s,r);let c=!1;return t.material===r&&t.materialVersion===r.version&&t.transparent===r.transparent&&t.blending===r.blending&&t.premultipliedAlpha===r.premultipliedAlpha&&t.blendSrc===r.blendSrc&&t.blendDst===r.blendDst&&t.blendEquation===r.blendEquation&&t.blendSrcAlpha===r.blendSrcAlpha&&t.blendDstAlpha===r.blendDstAlpha&&t.blendEquationAlpha===r.blendEquationAlpha&&t.colorWrite===r.colorWrite&&t.depthWrite===r.depthWrite&&t.depthTest===r.depthTest&&t.depthFunc===r.depthFunc&&t.stencilWrite===r.stencilWrite&&t.stencilFunc===r.stencilFunc&&t.stencilFail===r.stencilFail&&t.stencilZFail===r.stencilZFail&&t.stencilZPass===r.stencilZPass&&t.stencilFuncMask===r.stencilFuncMask&&t.stencilWriteMask===r.stencilWriteMask&&t.side===r.side&&t.alphaToCoverage===r.alphaToCoverage&&t.sampleCount===i&&t.colorSpace===o&&t.colorFormat===a&&t.depthStencilFormat===u&&t.primitiveTopology===l||(t.material=r,t.materialVersion=r.version,t.transparent=r.transparent,t.blending=r.blending,t.premultipliedAlpha=r.premultipliedAlpha,t.blendSrc=r.blendSrc,t.blendDst=r.blendDst,t.blendEquation=r.blendEquation,t.blendSrcAlpha=r.blendSrcAlpha,t.blendDstAlpha=r.blendDstAlpha,t.blendEquationAlpha=r.blendEquationAlpha,t.colorWrite=r.colorWrite,t.depthWrite=r.depthWrite,t.depthTest=r.depthTest,t.depthFunc=r.depthFunc,t.stencilWrite=r.stencilWrite,t.stencilFunc=r.stencilFunc,t.stencilFail=r.stencilFail,t.stencilZFail=r.stencilZFail,t.stencilZPass=r.stencilZPass,t.stencilFuncMask=r.stencilFuncMask,t.stencilWriteMask=r.stencilWriteMask,t.side=r.side,t.alphaToCoverage=r.alphaToCoverage,t.sampleCount=i,t.colorSpace=o,t.colorFormat=a,t.depthStencilFormat=u,t.primitiveTopology=l,c=!0),c}getRenderCacheKey(e){const{object:t,material:s}=e,r=this.utils,n=e.context;return[s.transparent,s.blending,s.premultipliedAlpha,s.blendSrc,s.blendDst,s.blendEquation,s.blendSrcAlpha,s.blendDstAlpha,s.blendEquationAlpha,s.colorWrite,s.depthWrite,s.depthTest,s.depthFunc,s.stencilWrite,s.stencilFunc,s.stencilFail,s.stencilZFail,s.stencilZPass,s.stencilFuncMask,s.stencilWriteMask,s.side,r.getSampleCount(n),r.getCurrentColorSpace(n),r.getCurrentColorFormat(n),r.getCurrentDepthStencilFormat(n),r.getPrimitiveTopology(t,s)].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,n){return this.textureUtils.copyTextureToBuffer(e,t,s,r,n)}createNodeBuilder(e,t,s=null){return new Yx(e,t,s)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e){this.pipelineUtils.createRenderPipeline(e)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}createBindings(e){this.bindingUtils.createBindings(e)}updateBindings(e){this.bindingUtils.createBindings(e)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer()}hasFeature(e){const t=this.adapter||rb;if(!1===Object.values(Mx).includes(e))throw new Error("THREE.WebGPURenderer: Unknown WebGPU GPU feature: "+e);return t.features.has(e)}copyFramebufferToTexture(e,t){const s=this.get(t),{encoder:r,descriptor:n}=s;let i=null;e.isFramebufferTexture?i=this.context.getCurrentTexture():e.isDepthTexture&&(i=this.textureUtils.getDepthBuffer(t.depth,t.stencil));const o=this.get(e).texture;s.currentPass.end(),r.copyTextureToTexture({texture:i,origin:{x:0,y:0,z:0}},{texture:o},[e.image.width,e.image.height]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),n.colorAttachments[0].loadOp=$f,t.depth&&(n.depthStencilAttachment.depthLoadOp=$f),t.stencil&&(n.depthStencilAttachment.stencilLoadOp=$f),s.currentPass=r.beginRenderPass(n),s.currentSets={attributes:{}}}}class ib extends jg{constructor(e={}){let t;t=Ms.isAvailable()?nb:Ef;super(new t(e),e),this.isWebGPURenderer=!0}}class ob extends jg{constructor(e={},t=!1){let s;s=Ms.isAvailable()&&!t?nb:Ef;super(new s(e)),this.isWebGPURenderer=!0}}const ab="requestVideoFrameCallback"in HTMLVideoElement.prototype,ub=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,lb=window.cancelAnimationFrame||window.mozCancelAnimationFrame;let cb;class db{constructor(e,t){this._callback=e,this.video=t,this.animationID=null,this.running=!1}set callback(e){this._callback=e}async animateLegacy(){const e=this.video.currentTime;e>cb&&((1/(e-cb)).toFixed(),await this._callback(e,{width:this.video.videoWidth,height:this.video.videoHeight})),cb=e,this.animationID=ub((async()=>await this.animateLegacy()))}async animate(e,t){await this._callback(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initAnimate(){this.animateRef=async(e,t)=>await this.animate(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initLegacyAnimate(){this.animateLegacy()}start(){this.stop(),ab?this.initAnimate():(cb=new Date,this.initLegacyAnimate()),this.running=!0}stop(){this.running=!1,ab?this.animateRef=()=>{}:lb(this.animationID&&this.animationID.data&&this.animationID.data.handleId||this.animationID)}}const hb="requestVideoFrameCallback"in HTMLVideoElement.prototype,pb=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,mb=window.cancelAnimationFrame||window.mozCancelAnimationFrame;let gb;class fb{constructor(e,t){this._callback=e,this.video=t,this.animationID=null,this.running=!1,this.updateNodesRef=()=>{}}set nodes(e){this._nodes=e,e&&(this.updateNodesRef=()=>{this._nodes.nodeFrame.update()})}set callback(e){this._callback=e}async animateLegacy(){const e=this.video.currentTime;e>gb&&((1/(e-gb)).toFixed(),this.updateNodesRef(),await this._callback(e,{width:this.video.videoWidth,height:this.video.videoHeight})),gb=e,this.animationID=pb((async()=>await this.animateLegacy()))}async animate(e,t){this.updateNodesRef(),await this._callback(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initAnimate(){this.animateRef=async(e,t)=>await this.animate(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initLegacyAnimate(){this.animateLegacy()}start(){this.stop(),hb?this.initAnimate():(gb=new Date,this.initLegacyAnimate()),this.running=!0}stop(){this.running=!1,hb?this.animateRef=()=>{}:mb(this.animationID&&this.animationID.data&&this.animationID.data.handleId||this.animationID)}}export{Il as AONode,Bp as AmbientLightNode,wl as AnalyticLightNode,Ar as ArrayElementNode,Kn as ArrayUniformNode,Qn as AssignNode,ti as AttributeNode,cm as BRDF_GGX,Zp as BRDF_Lambert,Fd as BitangentNode,hh as BlendModeNode,el as BufferAttributeNode,al as BufferNode,Nh as BumpMapNode,ri as BypassNode,ai as CacheNode,ja as CameraNode,Lp as CheckerNode,Kh as CodeNode,Ch as ColorAdjustmentNode,Ta as ColorSpaceNode,Sp as ComputeNode,Dc as CondNode,Fr as ConstNode,li as ContextNode,Rr as ConvertNode,Al as CubeTextureNode,dm as DFGApprox,lm as D_GGX,Mp as DirectionalLightNode,sd as DiscardNode,xo as EPSILON,$l as EnvironmentNode,Pl as EquirectUVNode,Aa as ExpressionNode,Qp as F_Schlick,bp as FogExp2Node,mp as FogNode,fp as FogRangeNode,xh as FrontFacingNode,tp as FunctionCallNode,rp as FunctionNode,zm as GLSLNodeParser,Jc as HashNode,Up as HemisphereLightNode,Fp as IESSpotLightNode,bo as INFINITY,fn as If,hi as IndexNode,il as InstanceNode,kp as InstancedPointsNodeMaterial,Er as JoinNode,Rp as LightNode,Ll as LightingContextNode,gi as LightingModel,Cl as LightingNode,Ol as LightsNode,jp as Line2NodeMaterial,zp as LineBasicNodeMaterial,Hp as LineDashedNodeMaterial,id as LoopNode,ad as MatcapUVNode,bu as MaterialNode,La as MaterialReferenceNode,fo as MathNode,Ca as MaxMipLevelNode,Kp as MeshBasicNodeMaterial,rm as MeshLambertNodeMaterial,Xp as MeshNormalNodeMaterial,im as MeshPhongNodeMaterial,Em as MeshPhysicalNodeMaterial,Rm as MeshStandardNodeMaterial,tu as ModelNode,Zu as ModelViewProjectionNode,yl as MorphNode,gr as Node,bi as NodeAttribute,qc as NodeBuilder,oi as NodeCache,Ni as NodeCode,Xc as NodeFrame,Yc as NodeFunctionInput,vi as NodeKeywords,Pp as NodeLoader,Tc as NodeMaterial,Um as NodeMaterialLoader,Im as NodeObjectLoader,Js as NodeShaderStage,tr as NodeType,Ti as NodeUniform,er as NodeUpdateType,hr as NodeUtils,_i as NodeVar,yi as NodeVarying,Uh as NormalMapNode,lu as NormalNode,Pa as Object3DNode,Yi as OperatorNode,md as OscNode,Qc as OutputStructNode,Td as PackingNode,$i as ParameterNode,tm as PhongLightingModel,Sm as PhysicalLightingModel,wp as PointLightNode,Qd as PointUVNode,Mm as PointsNodeMaterial,Wu as PositionNode,Dh as PosterizeNode,Si as PropertyNode,Np as RangeNode,Ba as ReferenceNode,vl as ReflectVectorNode,Nd as RemapNode,Ad as RotateUVNode,Jd as SceneNode,pm as Schlick_to_F0,hp as ScriptableNode,ap as ScriptableValueNode,Or as SetNode,on as ShaderNode,fl as SkinningNode,kl as SpecularMIPLevelNode,Mr as SplitNode,Op as SpotLightNode,Fm as SpriteNodeMaterial,Cd as SpriteSheetUVNode,Gc as StackNode,sh as StorageBufferNode,Lh as TBNViewMatrix,ll as TangentNode,Cr as TempNode,Yd as TextureBicubicNode,wa as TextureNode,nh as TextureStoreNode,ld as TimerNode,Wh as ToneMappingNode,wd as TriplanarTexturesNode,Wi as UVNode,Tr as UniformGroupNode,Xn as UniformNode,oh as UserDataNode,um as V_GGX_SmithCorrelated,fi as VarNode,Jn as VaryingNode,db as VideoAnimation,lc as ViewportDepthNode,ac as ViewportDepthTextureNode,Xl as ViewportNode,Xh as ViewportSharedTextureNode,rc as ViewportTextureNode,Ms as WebGPU,ob as WebGPUGLRenderer,ib as WebGPURenderer,fb as WebGPUVideoAnimation,Do as abs,Io as acos,Ki as add,Ul as addLightNode,fr as addNodeClass,Ir as addNodeElement,_c as addNodeMaterial,ao as and,xn as append,Hn as arrayBuffer,Uo as asin,Zn as assign,Lo as atan,Xo as atan2,si as attribute,eh as backgroundBlurriness,th as backgroundIntensity,co as bitAnd,ho as bitOr,po as bitXor,Bd as bitangentGeometry,Ud as bitangentLocal,Id as bitangentView,Ld as bitangentWorld,Pn as bmat3,zn as bmat4,Nn as bool,ul as buffer,tl as bufferAttribute,vh as bumpMap,ph as burn,Rn as bvec2,Mn as bvec3,Un as bvec4,ni as bypass,ui as cache,sp as call,Ya as cameraFar,Ka as cameraLogDepth,Xa as cameraNear,Za as cameraNormalMatrix,eu as cameraPosition,qa as cameraProjectionMatrix,Qa as cameraViewMatrix,Ja as cameraWorldMatrix,Eo as ceil,Dp as checker,ca as clamp,Mi as clearcoat,Oi as clearcoatRoughness,Qh as code,bn as color,Na as colorSpaceToLinear,yd as colorToDirection,Ap as compute,Pc as cond,ci as context,jn as convert,Fo as cos,xr as createNodeFromType,yc as createNodeMaterialFromType,ra as cross,Rl as cubeTexture,zo as dFdx,$o as dFdy,ki as dashSize,rr as defaultBuildStages,sr as defaultShaderStages,_o as degrees,Tp as densityFog,gc as depth,xc as depthPixel,fc as depthTexture,ta as difference,Ci as diffuseColor,_d as directionToColor,nd as discard,ea as distance,Ji as div,mh as dodge,sa as dot,sl as dynamicBufferAttribute,Wn as element,to as equal,Gl as equirectUV,yo as exp,No as exp2,Ra as expression,Th as faceDirection,ma as faceForward,Tn as float,Co as floor,gp as fog,Mo as fract,Nr as frameGroup,pd as frameId,bh as frontFacing,qo as fwidth,Vi as gapSize,nn as getConstNodeType,gn as getCurrentStack,Ep as getDistanceAttenuation,om as getGeometryRoughness,am as getRoughness,dp as global,ep as glsl,ip as glslFn,no as greaterThan,oo as greaterThanEqual,ed as hash,Mh as hue,Ln as imat3,kn as imat4,ol as instance,mi as instanceIndex,rl as instancedBufferAttribute,nl as instancedDynamicBufferAttribute,_n as int,Ro as inverseSqrt,Ui as iridescence,Ii as iridescenceIOR,Li as iridescenceThickness,Sn as ivec2,En as ivec3,Fn as ivec4,Zh as js,di as label,Go as length,ro as lessThan,io as lessThanEqual,Bl as lightNodes,Cp as lightTargetDirection,Dl as lightingContext,Fl as lights,ya as linearToColorSpace,va as linearTosRGB,vo as log,So as log2,od as loop,Oh as lumaCoeffs,Fh as luminance,In as mat3,Gn as mat4,ud as matcapUV,Tu as materialAlphaTest,Mu as materialClearcoat,Fu as materialClearcoatNormal,Ou as materialClearcoatRoughness,_u as materialColor,Nu as materialEmissive,Lu as materialIridescence,Du as materialIridescenceIOR,Pu as materialIridescenceThickness,$u as materialLineDashOffset,ku as materialLineDashSize,Vu as materialLineGapSize,Gu as materialLineScale,zu as materialLineWidth,Eu as materialMetalness,wu as materialNormal,vu as materialOpacity,Hu as materialPointWidth,Da as materialReference,Ru as materialReflectivity,Bu as materialRotation,Cu as materialRoughness,Uu as materialSheen,Iu as materialSheenRoughness,yu as materialShininess,Su as materialSpecularColor,Au as materialSpecularStrength,Ko as max,Ea as maxMipLevel,wi as metalness,Yo as min,la as mix,Qo as mod,su as modelDirection,nu as modelNormalMatrix,ou as modelPosition,au as modelScale,ru as modelViewMatrix,uu as modelViewPosition,Ju as modelViewProjection,iu as modelWorldMatrix,Nl as morph,Zi as mul,ng as mx_aastep,yg as mx_cell_noise_float,pg as mx_contrast,Ng as mx_fractal_noise_float,vg as mx_fractal_noise_vec2,Sg as mx_fractal_noise_vec3,Ag as mx_fractal_noise_vec4,tg as mx_hsvtorgb,mg as mx_noise_float,gg as mx_noise_vec2,fg as mx_noise_vec3,xg as mx_noise_vec4,og as mx_ramplr,ag as mx_ramptb,sg as mx_rgbtohsv,hg as mx_safepower,lg as mx_splitlr,cg as mx_splittb,rg as mx_srgb_texture_to_lin_rec709,dg as mx_transform_uv,bg as mx_worley_noise_float,Tg as mx_worley_noise_vec2,_g as mx_worley_noise_vec3,ko as negate,ln as nodeArray,dn as nodeImmutable,an as nodeObject,un as nodeObjects,cn as nodeProxy,cu as normalGeometry,du as normalLocal,Ih as normalMap,hu as normalView,pu as normalWorld,wo as normalize,Ga as objectDirection,Sr as objectGroup,Va as objectNormalMatrix,$a as objectPosition,Ha as objectScale,ka as objectViewMatrix,Wa as objectViewPosition,za as objectWorldMatrix,Vo as oneMinus,uo as or,dc as orthographicDepthToViewZ,bd as oscSawtooth,gd as oscSine,fd as oscSquare,xd as oscTriangle,Gi as output,Zc as outputStruct,gh as overlay,Hi as parameter,pc as perspectiveDepthToViewZ,Zd as pointUV,zi as pointWidth,ju as positionGeometry,qu as positionLocal,Ku as positionView,Qu as positionViewDirection,Xu as positionWorld,Yu as positionWorldDirection,Ph as posterize,na as pow,ia as pow2,oa as pow3,aa as pow4,Ai as property,To as radians,vp as range,xp as rangeFog,Wo as reciprocal,Ua as reference,Ia as referenceIndex,Jo as reflect,Sl as reflectVector,ha as refract,eo as remainder,vd as remap,Sd as remapClamp,vr as renderGroup,Rd as rotateUV,Ei as roughness,Ho as round,Sa as sRGBToLinear,Fa as sampler,da as saturate,Eh as saturation,fh as screen,pp as scriptable,up as scriptableValue,mn as setCurrentStack,hn as shader,nr as shaderStages,Fi as sheen,Bi as sheenRoughness,mo as shiftLeft,go as shiftRight,Pi as shininess,Po as sign,Oo as sin,xl as skinning,pa as smoothstep,Di as specularColor,Vl as specularMIPLevel,qn as split,Ed as spritesheetUV,Ao as sqrt,kc as stack,Zo as step,rh as storage,$n as string,Qi as sub,Bo as tan,cl as tangentGeometry,dl as tangentLocal,hl as tangentView,pl as tangentWorld,xi as temp,Ma as texture,Kd as textureBicubic,Oa as textureLoad,ih as textureStore,hd as timerDelta,dd as timerGlobal,cd as timerLocal,jh as toneMapping,ua as transformDirection,Dd as transformedBitangentView,Pd as transformedBitangentWorld,fu as transformedClearcoatNormalView,mu as transformedNormalView,gu as transformedNormalWorld,ml as transformedTangentView,gl as transformedTangentWorld,Od as triplanarTexture,Md as triplanarTextures,jo as trunc,pn as tslFn,yn as uint,Dn as umat3,Vn as umat4,Yn as uniform,_r as uniformGroup,ah as userData,ji as uv,An as uvec2,wn as uvec3,Bn as uvec4,ei as varying,Ri as varyingProperty,vn as vec2,Cn as vec3,On as vec4,ir as vectorComponents,pi as vertexIndex,wh as vibrance,cc as viewZToOrthographicDepth,hc as viewZToPerspectiveDepth,Ql as viewport,Jl as viewportBottomLeft,tc as viewportBottomRight,Yl as viewportCoordinate,uc as viewportDepthTexture,ic as viewportMipTexture,Kl as viewportResolution,Yh as viewportSharedTexture,nc as viewportTexture,Zl as viewportTopLeft,ec as viewportTopRight,Jh as wgsl,op as wgslFn,lo as xor};
