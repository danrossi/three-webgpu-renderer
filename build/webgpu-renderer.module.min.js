/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{DynamicDrawUsage as e,Uint32BufferAttribute as t,Uint16BufferAttribute as s,Color as r,Vector2 as i,Vector3 as n,Vector4 as o,Matrix3 as a,Matrix4 as u,EventDispatcher as l,MathUtils as d,LinearSRGBColorSpace as c,SRGBColorSpace as h,StaticDrawUsage as p,InterleavedBuffer as g,InterleavedBufferAttribute as m,InstancedInterleavedBuffer as f,DataArrayTexture as T,FloatType as x,WebGPUCoordinateSystem as y,DepthTexture as b,NearestFilter as N,LessCompare as _,FramebufferTexture as v,LinearMipmapLinearFilter as S,NearestMipmapNearestFilter as A,UnsignedIntType as R,DepthFormat as E,ShaderMaterial as C,NoColorSpace as w,Material as M,WebGLCubeRenderTarget as F,BoxGeometry as B,BackSide as O,NoBlending as L,Mesh as U,Scene as I,LinearFilter as D,CubeCamera as P,RenderTarget as V,sRGBEncoding as G,LinearEncoding as k,Float16BufferAttribute as z,REVISION as $,TangentSpaceNormalMap as H,ObjectSpaceNormalMap as W,NoToneMapping as j,LinearToneMapping as X,ReinhardToneMapping as q,CineonToneMapping as Y,ACESFilmicToneMapping as K,OrthographicCamera as Q,BufferGeometry as Z,Float32BufferAttribute as J,HalfFloatType as ee,PointLight as te,DirectionalLight as se,SpotLight as re,AmbientLight as ie,HemisphereLight as ne,Loader as oe,FileLoader as ae,PointsMaterial as ue,LineBasicMaterial as le,LineDashedMaterial as de,MeshNormalMaterial as ce,MeshBasicMaterial as he,MeshLambertMaterial as pe,MeshPhongMaterial as ge,MeshStandardMaterial as me,MeshPhysicalMaterial as fe,SpriteMaterial as Te,MaterialLoader as xe,ObjectLoader as ye,DepthStencilFormat as be,UnsignedInt248Type as Ne,EquirectangularReflectionMapping as _e,EquirectangularRefractionMapping as ve,CubeReflectionMapping as Se,CubeRefractionMapping as Ae,SphereGeometry as Re,Frustum as Ee,DoubleSide as Ce,FrontSide as we,IntType as Me,createCanvasElement as Fe,AddEquation as Be,SubtractEquation as Oe,ReverseSubtractEquation as Le,ZeroFactor as Ue,OneFactor as Ie,SrcColorFactor as De,SrcAlphaFactor as Pe,SrcAlphaSaturateFactor as Ve,DstColorFactor as Ge,DstAlphaFactor as ke,OneMinusSrcColorFactor as ze,OneMinusSrcAlphaFactor as $e,OneMinusDstColorFactor as He,OneMinusDstAlphaFactor as We,CullFaceNone as je,CullFaceBack as Xe,CullFaceFront as qe,CustomBlending as Ye,MultiplyBlending as Ke,SubtractiveBlending as Qe,AdditiveBlending as Ze,NormalBlending as Je,NotEqualDepth as et,GreaterDepth as tt,GreaterEqualDepth as st,EqualDepth as rt,LessEqualDepth as it,LessDepth as nt,AlwaysDepth as ot,NeverDepth as at,UnsignedByteType as ut,UnsignedShort4444Type as lt,UnsignedShort5551Type as dt,ByteType as ct,ShortType as ht,UnsignedShortType as pt,AlphaFormat as gt,RGBAFormat as mt,LuminanceFormat as ft,LuminanceAlphaFormat as Tt,RedFormat as xt,RedIntegerFormat as yt,RGFormat as bt,RGIntegerFormat as Nt,RGBAIntegerFormat as _t,RGB_S3TC_DXT1_Format as vt,RGBA_S3TC_DXT1_Format as St,RGBA_S3TC_DXT3_Format as At,RGBA_S3TC_DXT5_Format as Rt,RGB_PVRTC_4BPPV1_Format as Et,RGB_PVRTC_2BPPV1_Format as Ct,RGBA_PVRTC_4BPPV1_Format as wt,RGBA_PVRTC_2BPPV1_Format as Mt,RGB_ETC1_Format as Ft,RGB_ETC2_Format as Bt,RGBA_ETC2_EAC_Format as Ot,RGBA_ASTC_4x4_Format as Lt,RGBA_ASTC_5x4_Format as Ut,RGBA_ASTC_5x5_Format as It,RGBA_ASTC_6x5_Format as Dt,RGBA_ASTC_6x6_Format as Pt,RGBA_ASTC_8x5_Format as Vt,RGBA_ASTC_8x6_Format as Gt,RGBA_ASTC_8x8_Format as kt,RGBA_ASTC_10x5_Format as zt,RGBA_ASTC_10x6_Format as $t,RGBA_ASTC_10x8_Format as Ht,RGBA_ASTC_10x10_Format as Wt,RGBA_ASTC_12x10_Format as jt,RGBA_ASTC_12x12_Format as Xt,RGBA_BPTC_Format as qt,RED_RGTC1_Format as Yt,SIGNED_RED_RGTC1_Format as Kt,RED_GREEN_RGTC2_Format as Qt,SIGNED_RED_GREEN_RGTC2_Format as Zt,RepeatWrapping as Jt,ClampToEdgeWrapping as es,MirroredRepeatWrapping as ts,NearestMipmapLinearFilter as ss,LinearMipmapNearestFilter as rs,NeverCompare as is,AlwaysCompare as ns,LessEqualCompare as os,EqualCompare as as,GreaterEqualCompare as us,GreaterCompare as ls,NotEqualCompare as ds,WebGLCoordinateSystem as cs,Texture as hs,CubeTexture as ps,NotEqualStencilFunc as gs,GreaterStencilFunc as ms,GreaterEqualStencilFunc as fs,EqualStencilFunc as Ts,LessEqualStencilFunc as xs,LessStencilFunc as ys,AlwaysStencilFunc as bs,NeverStencilFunc as Ns,DecrementWrapStencilOp as _s,IncrementWrapStencilOp as vs,DecrementStencilOp as Ss,IncrementStencilOp as As,InvertStencilOp as Rs,ReplaceStencilOp as Es,ZeroStencilOp as Cs,KeepStencilOp as ws,MaxEquation as Ms,MinEquation as Fs}from"three";void 0===window.GPUShaderStage&&(window.GPUShaderStage={VERTEX:1,FRAGMENT:2,COMPUTE:4});let Bs=!1;if(void 0!==navigator.gpu){null!==await navigator.gpu.requestAdapter()&&(Bs=!0)}class Os{static isAvailable(){return Bs}static getErrorMessage(){const e=document.createElement("div");return e.id="webgpumessage",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.maxWidth="400px",e.style.margin="5em auto 0",e.innerHTML='Your browser does not support <a href="https://gpuweb.github.io/gpuweb/" style="color:blue">WebGPU</a> yet',e}}class Ls{constructor(e,t){this.nodes=e,this.info=t,this.animationLoop=null,this.requestId=null,this._init()}_init(){const e=(t,s)=>{this.requestId=self.requestAnimationFrame(e),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this.animationLoop&&this.animationLoop(t,s)};e()}dispose(){self.cancelAnimationFrame(this.requestId)}setAnimationLoop(e){this.animationLoop=e}}class Us{constructor(){this.weakMap=new WeakMap}get(e){if(Array.isArray(e)){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return;return t.get(e[e.length-1])}return super.get(e)}set(e,t){if(Array.isArray(e)){let s=this.weakMap;for(let t=0;t<e.length;t++){const r=e[t];!1===s.has(r)&&s.set(r,new WeakMap),s=s.get(r)}return s.set(e[e.length-1],t)}return super.set(e,t)}delete(e){if(Array.isArray(e)){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return!1;return t.delete(e[e.length-1])}return super.delete(e)}dispose(){this.weakMap.clear()}}let Is=0;class Ds{constructor(e,t,s,r,i,n,o,a,u){this._nodes=e,this._geometries=t,this.id=Is++,this.renderer=s,this.object=r,this.material=i,this.scene=n,this.camera=o,this.lightsNode=a,this.context=u,this.geometry=r.geometry,this.version=i.version,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.initialNodesCacheKey=this.getNodesCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],r=new Set;for(const i of e){const e=i.node&&i.node.attribute?i.node.attribute:t.getAttribute(i.name);if(void 0===e)continue;s.push(e);const n=e.isInterleavedBufferAttribute?e.data:e;r.add(n)}return this.attributes=s,this.vertexBuffers=Array.from(r.values()),s}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getMaterialCacheKey(){const{object:e,material:t}=this;let s=t.customProgramCacheKey();for(const e in t){if(/^(is[A-Z])|^(visible|version|uuid|name|opacity|userData)$/.test(e))continue;let r=t[e];if(null!==r){const e=typeof r;"number"===e?r=0!==r?"1":"0":"object"===e&&(r="{}")}s+=r+","}return e.skeleton&&(s+=e.skeleton.uuid+","),e.morphTargetInfluences&&(s+=e.morphTargetInfluences.length+","),s}get needsUpdate(){return this.initialNodesCacheKey!==this.getNodesCacheKey()}getNodesCacheKey(){return this._nodes.getCacheKey(this.scene,this.lightsNode)}getCacheKey(){return this.getMaterialCacheKey()+","+this.getNodesCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}class Ps{constructor(e,t,s,r,i,n){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=r,this.bindings=i,this.info=n,this.chainMaps={}}get(e,t,s,r,i,n,o){const a=this.getChainMap(o),u=[e,t,n,i];let l=a.get(u);return void 0===l?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,r,i,n,o),a.set(u,l)):(l.version!==t.version||l.needsUpdate)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(e,t,s,r,i,n,o)):l.version=t.version),l}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Us)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,r,i,n,o,a,u,l){const d=this.getChainMap(l),c=new Ds(e,t,s,r,i,n,o,a,u);return c.onDispose=()=>{this.pipelines.delete(c),this.bindings.delete(c),this.nodes.delete(c),d.delete(c.getChainArray())},c}}class Vs{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const Gs=1,ks=2,zs=4,$s=16;class Hs extends Vs{constructor(e){super(),this.backend=e}delete(e){void 0!==super.delete(e)&&this.backend.destroyAttribute(e)}update(t,s){const r=this.get(t);if(void 0===r.version)s===Gs?this.backend.createAttribute(t):s===ks?this.backend.createIndexAttribute(t):s===zs&&this.backend.createStorageAttribute(t),r.version=this._getBufferAttribute(t).version;else{const s=this._getBufferAttribute(t);(r.version<s.version||s.usage===e)&&(this.backend.updateAttribute(t),r.version=s.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function Ws(e){return null!==e.index?e.index.version:e.attributes.position.version}function js(e){const r=[],i=e.index,n=e.attributes.position;if(null!==i){const e=i.array;for(let t=0,s=e.length;t<s;t+=3){const s=e[t+0],i=e[t+1],n=e[t+2];r.push(s,i,i,n,n,s)}}else{for(let e=0,t=n.array.length/3-1;e<t;e+=3){const t=e+0,s=e+1,i=e+2;r.push(t,s,s,i,i,t)}}const o=new(function(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}(r)?t:s)(r,1);return o.version=Ws(e),o}class Xs extends Vs{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const r=t.index,i=e.getAttributes();null!==r&&this.attributes.delete(r);for(const e of i)this.attributes.delete(e);const n=this.wireframes.get(t);void 0!==n&&this.attributes.delete(n),t.removeEventListener("dispose",s)};t.addEventListener("dispose",s)}updateAttributes(e){const t=e.getAttributes();for(const e of t)this.updateAttribute(e,Gs);const s=this.getIndex(e);null!==s&&this.updateAttribute(s,ks)}updateAttribute(e,t){const s=this.info.render.calls;this.attributeCall.get(e)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e,s))}getIndex(e){const{geometry:t,material:s}=e;let r=t.index;if(!0===s.wireframe){const e=this.wireframes;let s=e.get(t);void 0===s?(s=js(t),e.set(t,s)):s.version!==Ws(t)&&(this.attributes.delete(s),s=js(t),e.set(t,s)),r=s}return r}}class qs{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,drawCalls:0,triangles:0,points:0,lines:0},this.compute={calls:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine&&(this.render.lines+=s*(t-1))}reset(){this.render.drawCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.memory.geometries=0,this.memory.textures=0}}class Ys{constructor(e){this.cacheKey=e,this.usedTimes=0}}class Ks extends Ys{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class Qs extends Ys{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let Zs=0;class Js{constructor(e,t){this.id=Zs++,this.code=e,this.stage=t,this.usedTimes=0}}class er extends Vs{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,r=this.get(e);if(this._needsComputeUpdate(e)){const i=r.pipeline;i&&(i.usedTimes--,i.computeProgram.usedTimes--);const n=this.nodes.getForCompute(e);let o=this.programs.compute.get(n.computeShader);void 0===o&&(i&&0===i.computeProgram.usedTimes&&this._releaseProgram(i.computeProgram),o=new Js(n.computeShader,"compute"),this.programs.compute.set(n.computeShader,o),s.createProgram(o));const a=this._getComputeCacheKey(e,o);let u=this.caches.get(a);void 0===u&&(i&&0===i.usedTimes&&this._releasePipeline(e),u=this._getComputePipeline(e,o,a,t)),u.usedTimes++,o.usedTimes++,r.version=e.version,r.pipeline=u}return r.pipeline}getForRender(e){const{backend:t}=this,s=this.get(e);if(this._needsRenderUpdate(e)){const r=s.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const i=e.getNodeBuilderState();let n=this.programs.vertex.get(i.vertexShader);void 0===n&&(r&&0===r.vertexProgram.usedTimes&&this._releaseProgram(r.vertexProgram),n=new Js(i.vertexShader,"vertex"),this.programs.vertex.set(i.vertexShader,n),t.createProgram(n));let o=this.programs.fragment.get(i.fragmentShader);void 0===o&&(r&&0===r.fragmentProgram.usedTimes&&this._releaseProgram(r.fragmentProgram),o=new Js(i.fragmentShader,"fragment"),this.programs.fragment.set(i.fragmentShader,o),t.createProgram(o));const a=this._getRenderCacheKey(e,n,o);let u=this.caches.get(a);void 0===u?(r&&0===r.usedTimes&&this._releasePipeline(r),u=this._getRenderPipeline(e,n,o,a)):e.pipeline=u,u.usedTimes++,n.usedTimes++,o.usedTimes++,s.pipeline=u}return s.pipeline}delete(e){const t=this.get(e).pipeline;t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,r){s=s||this._getComputeCacheKey(e,t);let i=this.caches.get(s);return void 0===i&&(i=new Qs(s,t),this.caches.set(s,i),this.backend.createComputePipeline(i,r)),i}_getRenderPipeline(e,t,s,r){r=r||this._getRenderCacheKey(e,t,s);let i=this.caches.get(r);return void 0===i&&(i=new Ks(r,t,s),this.caches.set(r,i),e.pipeline=i,this.backend.createRenderPipeline(e)),i}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,s){return t.id+","+s.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){return void 0===this.get(e).pipeline||this.backend.needsRenderUpdate(e)}}class tr extends Vs{constructor(e,t,s,r,i,n){super(),this.backend=e,this.textures=s,this.pipelines=i,this.attributes=r,this.nodes=t,this.info=n,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings(),s=this.get(e);return s.bindings!==t&&(s.bindings=t,this._init(t),this.backend.createBindings(t)),s.bindings}getForCompute(e){const t=this.get(e);if(void 0===t.bindings){const s=this.nodes.getForCompute(e).bindings.compute;t.bindings=s,this._init(s),this.backend.createBindings(s)}return t.bindings}updateForCompute(e){this._update(e,this.getForCompute(e))}updateForRender(e){this._update(e,this.getForRender(e))}_init(e){for(const t of e)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute;this.attributes.update(e,zs)}}_update(e,t){const{backend:s}=this;let r=!1;for(const e of t){if(e.isNodeUniformsGroup){if(!this.nodes.updateGroup(e))continue}if(e.isUniformBuffer){e.update()&&s.updateBinding(e)}else if(e.isSampledTexture){const t=e.texture;e.needsBindingsUpdate&&(r=!0);if(e.update()&&this.textures.updateTexture(e.texture),!0===t.isStorageTexture){const s=this.get(t);!0===e.store?s.needsMipmap=!0:!0===t.generateMipmaps&&this.textures.needsMipmaps(t)&&!0===s.needsMipmap&&(this.backend.generateMipmaps(t),s.needsMipmap=!1)}}}if(!0===r){const s=this.pipelines.getForRender(e);this.backend.updateBindings(t,s)}}}const sr={VERTEX:"vertex",FRAGMENT:"fragment"},rr={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},ir={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX3:"mat3",MATRIX4:"mat4"},nr=["fragment","vertex"],or=["setup","analyze","generate"],ar=[...nr,"compute"],ur=["x","y","z","w"];function lr(e){let t="{";!0===e.isNode&&(t+=e.id);for(const{property:s,childNode:r}of dr(e))t+=","+s.slice(0,-4)+":"+r.getCacheKey();return t+="}",t}function*dr(e,t=!1){for(const s in e){if(!0===s.startsWith("_"))continue;const r=e[s];if(!0===Array.isArray(r))for(let e=0;e<r.length;e++){const i=r[e];i&&(!0===i.isNode||t&&"function"==typeof i.toJSON)&&(yield{property:s,index:e,childNode:i})}else if(r&&!0===r.isNode)yield{property:s,childNode:r};else if("object"==typeof r)for(const e in r){const i=r[e];i&&(!0===i.isNode||t&&"function"==typeof i.toJSON)&&(yield{property:s,index:e,childNode:i})}}}function cr(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function hr(e,...t){const s=e?e.slice(-4):void 0;return 1===t.length&&("vec2"===s?t=[t[0],t[0]]:"vec3"===s?t=[t[0],t[0],t[0]]:"vec4"===s&&(t=[t[0],t[0],t[0],t[0]])),"color"===e?new r(...t):"vec2"===s?new i(...t):"vec3"===s?new n(...t):"vec4"===s?new o(...t):"mat3"===s?new a(...t):"mat4"===s?new u(...t):"bool"===e?t[0]||!1:"float"===e||"int"===e||"uint"===e?t[0]||0:"string"===e?t[0]||"":"ArrayBuffer"===e?gr(t[0]):null}function pr(e){let t="";const s=new Uint8Array(e);for(let e=0;e<s.length;e++)t+=String.fromCharCode(s[e]);return btoa(t)}function gr(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0))).buffer}var mr=Object.freeze({__proto__:null,getCacheKey:lr,getNodeChildren:dr,getValueType:cr,getValueFromType:hr,arrayBufferToBase64:pr,base64ToArrayBuffer:gr});const fr=new Map;let Tr=0;class xr extends l{constructor(e=null){super(),this.nodeType=e,this.updateType=rr.NONE,this.updateBeforeType=rr.NONE,this.uuid=d.generateUUID(),this.isNode=!0,Object.defineProperty(this,"id",{value:Tr++})}get type(){return this.constructor.type}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return!1}*getChildren(){for(const{childNode:e}of dr(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(){return lr(this)}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);for(const e of this.getChildren())t["_node"+e.id]=e;return null}construct(e){return this.setup(e)}analyze(e){const t=e.getDataFromNode(this);if(t.dependenciesCount=void 0===t.dependenciesCount?1:t.dependenciesCount+1,1===t.dependenciesCount){const t=e.getNodeProperties(this);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&!0===s.isNode)return s.build(e,t)}updateBefore(){}update(){}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);e.addNode(this),e.addChain(this);let r=null;const i=e.getBuildStage();if("setup"===i){const t=e.getNodeProperties(this);if(!0!==t.initialized||!1===e.context.tempRead){const s=e.stack.nodes.length;t.initialized=!0,t.outputNode=this.setup(e),null!==t.outputNode&&e.stack.nodes.length!==s&&(t.outputNode=e.stack);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}else if("analyze"===i)this.analyze(e);else if("generate"===i){if(1===this.generate.length){const s=this.getNodeType(e),i=e.getDataFromNode(this);r=i.snippet,void 0===r&&(r=this.generate(e)||"",i.snippet=r),r=e.format(r,s,t)}else r=this.generate(e,t)||""}return e.removeChain(this),r}getSerializeChildren(){return dr(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:r,index:i,childNode:n}of t)void 0!==i?(void 0===s[r]&&(s[r]=Number.isInteger(i)?[]:{}),s[r][i]=n.toJSON(e.meta).uuid):s[r]=n.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const r=[];for(const i of e.inputNodes[s])r.push(t[i]);this[s]=r}else if("object"==typeof e.inputNodes[s]){const r={};for(const i in e.inputNodes[s]){const n=e.inputNodes[s][i];r[i]=t[n]}this[s]=r}else{const r=e.inputNodes[s];this[s]=t[r]}}}toJSON(e){const{uuid:t,type:s}=this,r=void 0===e||"string"==typeof e;r&&(e={textures:{},images:{},nodes:{}});let i=e.nodes[t];function n(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(void 0===i&&(i={uuid:t,type:s,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==r&&(e.nodes[i.uuid]=i),this.serialize(i),delete i.meta),r){const t=n(e.textures),s=n(e.images),r=n(e.nodes);t.length>0&&(i.textures=t),s.length>0&&(i.images=s),r.length>0&&(i.nodes=r)}return i}}function yr(e,t){if("function"!=typeof t||!e)throw new Error(`Node class ${e} is not a class`);fr.has(e)||(fr.set(e,t),t.type=e)}function br(e){const t=fr.get(e);if(void 0!==t)return new t}class Nr extends xr{constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?cr(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=cr(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=pr(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?hr(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){}}yr("InputNode",Nr);class _r extends xr{constructor(e,t=!1){super("string"),this.name=e,this.version=0,this.shared=t,this.isUniformGroup=!0}set needsUpdate(e){!0===e&&this.version++}}const vr=e=>new _r(e),Sr=e=>new _r(e,!0),Ar=Sr("frame"),Rr=Sr("render"),Er=vr("object");yr("UniformGroupNode",_r);class Cr extends xr{constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getNodeType(e)}generate(e){return`${this.node.build(e)}[ ${this.indexNode.build(e,"uint")} ]`}}yr("ArrayElementNode",Cr);class wr extends xr{constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const r of this.convertTo.split("|"))null!==s&&e.getTypeLength(t)!==e.getTypeLength(r)||(s=r);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,r=this.getNodeType(e),i=s.build(e,r);return e.format(i,r,t)}}yr("ConvertNode",wr);class Mr extends xr{constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).dependenciesCount>1}build(e,t){if("generate"===e.getBuildStage()){const s=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(!1!==e.context.tempRead&&void 0!==r.propertyName)return e.format(r.propertyName,s,t);if(!1!==e.context.tempWrite&&"void"!==s&&"void"!==t&&this.hasDependencies(e)){const i=super.build(e,s),n=e.getVarFromNode(this,null,s),o=e.getPropertyName(n);return e.addLineFlowCode(`${o} = ${i}`),r.snippet=i,r.propertyName=o,e.format(r.propertyName,s,t)}}return super.build(e,t)}}yr("TempNode",Mr);class Fr extends Mr{constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce(((t,s)=>t+e.getTypeLength(s.getNodeType(e))),0))}generate(e,t){const s=this.getNodeType(e),r=this.nodes,i=e.getPrimitiveType(s),n=[];for(const t of r){let s=t.build(e);const r=e.getPrimitiveType(t.getNodeType(e));r!==i&&(s=e.format(s,r,i)),n.push(s)}const o=`${e.getType(s)}( ${n.join(", ")} )`;return e.format(o,s,t)}}yr("JoinNode",Fr);const Br=ur.join("");class Or extends xr{constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(ur.indexOf(t)+1,e);return e}getPrimitiveType(e){return e.getPrimitiveType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getPrimitiveType(e))}generate(e,t){const s=this.node,r=e.getTypeLength(s.getNodeType(e));let i=null;if(r>1){let n=null;this.getVectorLength()>=r&&(n=e.getTypeFromLength(this.getVectorLength(),this.getPrimitiveType(e)));const o=s.build(e,n);i=this.components.length===r&&this.components===Br.slice(0,this.components.length)?e.format(o,n,t):e.format(`${o}.${this.components}`,this.getNodeType(e),t)}else i=s.build(e,t);return i}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}yr("SplitNode",Or);class Lr extends Mr{constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:r}=this,i=this.getNodeType(e),n=e.getTypeFromLength(s.length),o=r.build(e,n),a=t.build(e,i),u=e.getTypeLength(i),l=[];for(let e=0;e<u;e++){const t=ur[e];t===s[0]?(l.push(o),e+=s.length-1):l.push(a+"."+t)}return`${e.getType(i)}( ${l.join(", ")} )`}}yr("SetNode",Lr);class Ur extends Nr{constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return e.format(this.generateConst(e),s,t)}}yr("ConstNode",Ur);let Ir=null;const Dr=new Map;function Pr(e,t){if(!Dr.has(e)){if("function"!=typeof t)throw new Error(`Node element ${e} is not a function`);Dr.set(e,t)}}const Vr=e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Gr={setup(e,t){const s=t.shift();return e(di(s),...t)},get(e,t,s){if("string"==typeof t&&void 0===e[t]){if(!0!==e.isStackNode&&"assign"===t)return(...e)=>(Ir.assign(s,...e),s);if(Dr.has(t)){const r=Dr.get(t);return e.isStackNode?(...e)=>s.add(r(...e)):(...e)=>r(s,...e)}if("self"===t)return e;if(t.endsWith("Assign")&&Dr.has(t.slice(0,t.length-6))){const r=Dr.get(t.slice(0,t.length-6));return e.isStackNode?(...e)=>s.assign(e[0],r(...e)):(...e)=>s.assign(r(s,...e))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=Vr(t),li(new Or(s,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=(t=Vr(t.slice(3).toLowerCase())).split("").sort().join(""),s=>li(new Lr(e,t,s));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),li(new Or(e,t));if(!0===/^\d+$/.test(t))return li(new Cr(s,new Ur(Number(t),"uint")))}return Reflect.get(e,t,s)},set:(e,t,s,r)=>"string"!=typeof t||void 0!==e[t]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(t)&&"width"!==t&&"height"!==t&&"depth"!==t&&!0!==/^\d+$/.test(t)?Reflect.set(e,t,s,r):(r[t].assign(s),!0)},kr=new WeakMap,zr=new WeakMap,$r=function(e,t=null){for(const s in e)e[s]=li(e[s],t);return e},Hr=function(e,t=null){const s=e.length;for(let r=0;r<s;r++)e[r]=li(e[r],t);return e},Wr=function(e,t=null,s=null,r=null){const i=e=>li(null!==r?Object.assign(e,r):e);return null===t?(...t)=>i(new e(...ci(t))):null!==s?(s=li(s),(...r)=>i(new e(t,...ci(r),s))):(...s)=>i(new e(t,...ci(s)))},jr=function(e,...t){return li(new e(...ci(t)))};class Xr extends xr{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){const{outputNode:t}=e.getNodeProperties(this);return t?t.getNodeType(e):super.getNodeType(e)}call(e){const{shaderNode:t,inputNodes:s}=this;if(t.layout){let r=zr.get(e.constructor);void 0===r&&(r=new WeakMap,zr.set(e.constructor,r));let i=r.get(t);return void 0===i&&(i=li(e.buildFunctionNode(t)),r.set(t,i)),null!==e.currentFunctionNode&&e.currentFunctionNode.includes.push(i),li(i.call(s))}const r=t.jsFunc,i=null!==s?r(s,e.stack,e):r(e.stack,e);return li(i)}setup(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);return null===s?this.call(e).build(e,t):super.generate(e,t)}}class qr extends xr{constructor(e){super(),this.jsFunc=e,this.layout=null}get isArrayInput(){return/^\((\s+)?\[/.test(this.jsFunc.toString())}setLayout(e){return this.layout=e,this}call(e=null){return di(e),li(new Xr(this,e))}setup(){return this.call()}}const Yr=[!1,!0],Kr=[0,1,2,3],Qr=[-1,-2],Zr=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],Jr=new Map;for(const e of Yr)Jr.set(e,new Ur(e));const ei=new Map;for(const e of Kr)ei.set(e,new Ur(e,"uint"));const ti=new Map([...ei].map((e=>new Ur(e.value,"int"))));for(const e of Qr)ti.set(e,new Ur(e,"int"));const si=new Map([...ti].map((e=>new Ur(e.value))));for(const e of Zr)si.set(e,new Ur(e));for(const e of Zr)si.set(-e,new Ur(-e));const ri={bool:Jr,uint:ei,ints:ti,float:si},ii=new Map([...Jr,...si]),ni=(e,t)=>ii.has(e)?ii.get(e):!0===e.isNode?e:new Ur(e,t),oi=function(e,t=null){return(...s)=>{if((0===s.length||!["bool","float","int","uint"].includes(e)&&s.every((e=>"object"!=typeof e)))&&(s=[hr(e,...s)]),1===s.length&&null!==t&&t.has(s[0]))return li(t.get(s[0]));if(1===s.length){const t=ni(s[0],e);return(e=>{try{return e.getNodeType()}catch(e){return}})(t)===e?li(t):li(new wr(t,e))}const r=s.map((e=>ni(e)));return li(new Fr(r,e))}},ai=e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null;function ui(e){return new Proxy(new qr(e),Gr)}const li=(e,t=null)=>function(e,t=null){const s=cr(e);if("node"===s){let t=kr.get(e);return void 0===t&&(t=new Proxy(e,Gr),kr.set(e,t),kr.set(t,t)),t}return null===t&&("float"===s||"boolean"===s)||s&&"shader"!==s&&"string"!==s?li(ni(e,t)):"shader"===s?mi(e):e}(e,t),di=(e,t=null)=>new $r(e,t),ci=(e,t=null)=>new Hr(e,t),hi=(...e)=>new Wr(...e),pi=(...e)=>new jr(...e),gi=e=>new ui(e),mi=e=>{const t=new ui(e),s=(...e)=>{let s;return di(e),s=e[0]&&e[0].isNode?[...e]:e[0],t.call(s)};return s.shaderNode=t,s.setLayout=e=>(t.setLayout(e),s),s};yr("ShaderNode",ui);const fi=e=>{Ir=e},Ti=()=>Ir,xi=(...e)=>Ir.if(...e);function yi(e){return Ir&&Ir.add(e),e}Pr("append",yi);const bi=new oi("color"),Ni=new oi("float",ri.float),_i=new oi("int",ri.int),vi=new oi("uint",ri.uint),Si=new oi("bool",ri.bool),Ai=new oi("vec2"),Ri=new oi("ivec2"),Ei=new oi("uvec2"),Ci=new oi("bvec2"),wi=new oi("vec3"),Mi=new oi("ivec3"),Fi=new oi("uvec3"),Bi=new oi("bvec3"),Oi=new oi("vec4"),Li=new oi("ivec4"),Ui=new oi("uvec4"),Ii=new oi("bvec4"),Di=new oi("mat3"),Pi=new oi("imat3"),Vi=new oi("umat3"),Gi=new oi("bmat3"),ki=new oi("mat4"),zi=new oi("imat4"),$i=new oi("umat4"),Hi=new oi("bmat4"),Wi=(e="")=>li(new Ur(e,"string")),ji=e=>li(new Ur(e,"ArrayBuffer"));Pr("color",bi),Pr("float",Ni),Pr("int",_i),Pr("uint",vi),Pr("bool",Si),Pr("vec2",Ai),Pr("ivec2",Ri),Pr("uvec2",Ei),Pr("bvec2",Ci),Pr("vec3",wi),Pr("ivec3",Mi),Pr("uvec3",Fi),Pr("bvec3",Bi),Pr("vec4",Oi),Pr("ivec4",Li),Pr("uvec4",Ui),Pr("bvec4",Ii),Pr("mat3",Di),Pr("imat3",Pi),Pr("umat3",Vi),Pr("bmat3",Gi),Pr("mat4",ki),Pr("imat4",zi),Pr("umat4",$i),Pr("bmat4",Hi),Pr("string",Wi),Pr("arrayBuffer",ji);const Xi=hi(Cr),qi=(e,t)=>li(new wr(li(e),t)),Yi=(e,t)=>li(new Or(li(e),t));Pr("element",Xi),Pr("convert",qi);class Ki extends Nr{constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.groupNode=Er}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}generate(e,t){const s=this.getNodeType(e),r=this.getUniformHash(e);let i=e.getNodeFromHash(r);void 0===i&&(e.setHashNode(this,r),i=this);const n=i.getInputType(e),o=e.getUniformFromNode(i,n,e.shaderStage,e.context.label),a=e.getPropertyName(o);return void 0!==e.context.label&&delete e.context.label,e.format(a,s,t)}}const Qi=(e,t)=>{const s=ai(t||e),r=e&&!0===e.isNode?e.node&&e.node.value||e.value:e;return li(new Ki(r,s))};yr("UniformNode",Ki);class Zi extends Ki{constructor(e=[]){super(),this.isArrayUniformNode=!0,this.nodes=e}getNodeType(e){return this.nodes[0].getNodeType(e)}}yr("ArrayUniformNode",Zi);class Ji extends Mr{constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return"void"!==t?this.targetNode.getNodeType(e):"void"}generate(e,t){const s=this.targetNode,r=this.sourceNode,i=s.getNodeType(e),n=s.build(e),o=`${n} = ${r.build(e,i)}`;if("void"!==t){return"void"===r.getNodeType(e)?(e.addLineFlowCode(o),n):e.format(o,i,t)}e.addLineFlowCode(o)}}const en=hi(Ji);yr("AssignNode",Ji),Pr("assign",en);class tn extends xr{constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{name:t,node:s}=this,r=this.getNodeType(e),i=e.getVaryingFromNode(this,t,r);i.needsInterpolation||(i.needsInterpolation="fragment"===e.shaderStage);const n=e.getPropertyName(i,sr.VERTEX);return e.flowNodeFromShaderStage(sr.VERTEX,s,r,n),e.getPropertyName(i)}}const sn=hi(tn);Pr("varying",sn),yr("VaryingNode",tn);class rn extends xr{constructor(e,t=null){super(t),this._attributeName=e}isGlobal(){return!0}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=super.getNodeType(e);if(null===t){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const r=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(r)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const r=e.geometry.getAttribute(t),i=e.getTypeFromAttribute(r),n=e.getAttribute(t,i);if("vertex"===e.shaderStage)return e.format(n.name,i,s);return sn(this).build(e,s)}return e.generateConst(s)}}const nn=(e,t)=>li(new rn(e,t));yr("AttributeNode",rn);class on extends xr{constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t),this.outputNode.build(e)}}const an=hi(on);Pr("bypass",an),yr("BypassNode",on);let un=0;class ln{constructor(){this.id=un++,this.nodesData=new WeakMap}getNodeData(e){return this.nodesData.get(e)}setNodeData(e,t){this.nodesData.set(e,t)}}class dn extends xr{constructor(e,t=new ln){super(),this.isCacheNode=!0,this.node=e,this.cache=t}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const s=e.getCache(),r=this.cache||e.globalCache;e.setCache(r);const i=this.node.build(e,...t);return e.setCache(s),i}}const cn=hi(dn);Pr("cache",cn),Pr("globalCache",(e=>cn(e,null))),yr("CacheNode",dn);class hn extends xr{constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.context=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.context});const s=this.node.build(e);return e.setContext(t),s}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.context});const r=this.node.build(e,t);return e.setContext(s),r}}const pn=hi(hn),gn=(e,t)=>pn(e,{label:t});Pr("context",pn),Pr("label",gn),yr("ContextNode",hn);class mn extends xr{constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let r,i;if(s===mn.VERTEX)r=e.getVertexIndex();else{if(s!==mn.INSTANCE)throw new Error("THREE.IndexNode: Unknown scope: "+s);r=e.getInstanceIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)i=r;else{i=sn(this).build(e,t)}return i}}mn.VERTEX="vertex",mn.INSTANCE="instance";const fn=pi(mn,mn.VERTEX),Tn=pi(mn,mn.INSTANCE);yr("IndexNode",mn);class xn{start(){}finish(){}direct(){}indirectDiffuse(){}indirectSpecular(){}ambientOcclusion(){}}class yn extends xr{constructor(e,t=null){super(),this.node=e,this.name=t,this.isVarNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:s}=this,r=e.getVarFromNode(this,s,e.getVectorType(this.getNodeType(e))),i=e.getPropertyName(r),n=t.build(e,r.type);return e.addLineFlowCode(`${i} = ${n}`),i}}const bn=hi(yn);Pr("temp",bn),Pr("toVar",((...e)=>bn(...e).append())),yr("VarNode",yn);class Nn{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class _n{constructor(e,t,s,r=void 0){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s.getSelf(),this.needsUpdate=r}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class vn{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class Sn extends vn{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class An{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}class Rn{constructor(){this.keywords=[],this.nodes=[],this.keywordsCallback={}}getNode(e){let t=this.nodes[e];return void 0===t&&void 0!==this.keywordsCallback[e]&&(t=this.keywordsCallback[e](e),this.nodes[e]=t),t}addKeyword(e,t){return this.keywords.push(e),this.keywordsCallback[e]=t,this}parse(e){const t=this.keywords,s=new RegExp(`\\b${t.join("\\b|\\b")}\\b`,"g"),r=e.match(s),i=[];if(null!==r)for(const e of r){const t=this.getNode(e);void 0!==t&&-1===i.indexOf(t)&&i.push(t)}return i}include(e,t){const s=this.parse(t);for(const t of s)t.build(e)}}class En extends xr{constructor(e,t=null,s=!1){super(e),this.name=t,this.varying=s,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return!0===this.varying?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const Cn=(e,t)=>li(new En(e,t)),wn=(e,t)=>li(new En(e,t,!0)),Mn=pi(En,"vec4","DiffuseColor"),Fn=pi(En,"float","Roughness"),Bn=pi(En,"float","Metalness"),On=pi(En,"float","Clearcoat"),Ln=pi(En,"float","ClearcoatRoughness"),Un=pi(En,"vec3","Sheen"),In=pi(En,"float","SheenRoughness"),Dn=pi(En,"float","Iridescence"),Pn=pi(En,"float","IridescenceIOR"),Vn=pi(En,"float","IridescenceThickness"),Gn=pi(En,"color","SpecularColor"),kn=pi(En,"float","Shininess"),zn=pi(En,"vec4","Output"),$n=pi(En,"float","dashSize"),Hn=pi(En,"float","gapSize"),Wn=pi(En,"float","pointWidth");yr("PropertyNode",En);class jn extends En{constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const Xn=(e,t)=>li(new jn(e,t));yr("ParameterNode",jn);class qn extends xr{constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=s,this.includes=t}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const s of t)s.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const Yn=hi(qn),Kn=(e,t)=>Yn(e,t,"js"),Qn=(e,t)=>Yn(e,t,"wgsl"),Zn=(e,t)=>Yn(e,t,"glsl");yr("CodeNode",qn);class Jn extends qn{constructor(e="",t=[],s=""){super(e,t,s),this.keywords={}}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return void 0===s&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),r=s.name,i=s.type,n=e.getCodeFromNode(this,i);""!==r&&(n.name=r);const o=e.getPropertyName(n);let a=this.getNodeFunction(e).getCode(o);const u=this.keywords,l=Object.keys(u);if(l.length>0)for(const t of l){const s=new RegExp(`\\b${t}\\b`,"g"),r=u[t].build(e,"property");a=a.replace(s,r)}return n.code=a+"\n","property"===t?o:e.format(`${o}()`,i,t)}}const eo=(e,t=[],s="")=>{for(let e=0;e<t.length;e++){const s=t[e];"function"==typeof s&&(t[e]=s.functionNode)}const r=li(new Jn(e,t,s)),i=(...e)=>r.call(...e);return i.functionNode=r,i},to=(e,t)=>eo(e,t,"glsl"),so=(e,t)=>eo(e,t,"wgsl");yr("FunctionNode",Jn);class ro extends rn{constructor(e=0){super(null,"vec2"),this.isUVNode=!0,this.index=e}getAttributeName(){const e=this.index;return"uv"+(e>0?e:"")}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const io=(...e)=>li(new ro(...e));yr("UVNode",ro);class no extends xr{constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),r=this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${r} )`,this.getNodeType(e),t)}}const oo=hi(no);Pr("textureSize",oo),yr("TextureSizeNode",no);class ao extends Mr{constructor(e,t,s,...r){if(super(),this.op=e,r.length>0){let t=s;for(let s=0;s<r.length;s++)t=new ao(e,t,r[s]);s=t}this.aNode=t,this.bNode=s}getNodeType(e,t){const s=this.op,r=this.aNode,i=this.bNode,n=r.getNodeType(e),o=i.getNodeType(e);if("void"===n||"void"===o)return"void";if("%"===s)return n;if("&"===s||"|"===s||"^"===s||">>"===s||"<<"===s)return e.getIntegerType(n);if("=="===s||"&&"===s||"||"===s||"^^"===s)return"bool";if("<"===s||">"===s||"<="===s||">="===s){const s=t?e.getTypeLength(t):Math.max(e.getTypeLength(n),e.getTypeLength(o));return s>1?`bvec${s}`:"bool"}return"float"===n&&e.isMatrix(o)?o:e.isMatrix(n)&&e.isVector(o)?e.getVectorFromMatrix(n):e.isVector(n)&&e.isMatrix(o)?e.getVectorFromMatrix(o):e.getTypeLength(o)>e.getTypeLength(n)?o:n}generate(e,t){const s=this.op,r=this.aNode,i=this.bNode,n=this.getNodeType(e,t);let o=null,a=null;"void"!==n?(o=r.getNodeType(e),a=i.getNodeType(e),"<"===s||">"===s||"<="===s||">="===s||"=="===s?e.isVector(o)?a=o:o=a="float":">>"===s||"<<"===s?(o=n,a=e.changeComponentType(a,"uint")):e.isMatrix(o)&&e.isVector(a)?a=e.getVectorFromMatrix(o):o=e.isVector(o)&&e.isMatrix(a)?e.getVectorFromMatrix(a):a=n):o=a=n;const u=r.build(e,o),l=i.build(e,a),d=e.getTypeLength(t),c=e.getFunctionOperator(s);return"void"!==t?"<"===s&&d>1?e.format(`${e.getMethod("lessThan")}( ${u}, ${l} )`,n,t):"<="===s&&d>1?e.format(`${e.getMethod("lessThanEqual")}( ${u}, ${l} )`,n,t):">"===s&&d>1?e.format(`${e.getMethod("greaterThan")}( ${u}, ${l} )`,n,t):">="===s&&d>1?e.format(`${e.getMethod("greaterThanEqual")}( ${u}, ${l} )`,n,t):c?e.format(`${c}( ${u}, ${l} )`,n,t):e.format(`( ${u} ${s} ${l} )`,n,t):"void"!==o?c?e.format(`${c}( ${u}, ${l} )`,n,t):e.format(`${u} ${s} ${l}`,n,t):void 0}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const uo=hi(ao,"+"),lo=hi(ao,"-"),co=hi(ao,"*"),ho=hi(ao,"/"),po=hi(ao,"%"),go=hi(ao,"=="),mo=hi(ao,"!="),fo=hi(ao,"<"),To=hi(ao,">"),xo=hi(ao,"<="),yo=hi(ao,">="),bo=hi(ao,"&&"),No=hi(ao,"||"),_o=hi(ao,"^^"),vo=hi(ao,"&"),So=hi(ao,"|"),Ao=hi(ao,"^"),Ro=hi(ao,"<<"),Eo=hi(ao,">>");Pr("add",uo),Pr("sub",lo),Pr("mul",co),Pr("div",ho),Pr("remainder",po),Pr("equal",go),Pr("notEqual",mo),Pr("lessThan",fo),Pr("greaterThan",To),Pr("lessThanEqual",xo),Pr("greaterThanEqual",yo),Pr("and",bo),Pr("or",No),Pr("xor",_o),Pr("bitAnd",vo),Pr("bitOr",So),Pr("bitXor",Ao),Pr("shiftLeft",Ro),Pr("shiftRight",Eo),yr("OperatorNode",ao);class Co extends Mr{constructor(e,t,s=null,r=null){super(),this.method=e,this.aNode=t,this.bNode=s,this.cNode=r}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,r=this.cNode?this.cNode.getNodeType(e):null,i=e.isMatrix(t)?0:e.getTypeLength(t),n=e.isMatrix(s)?0:e.getTypeLength(s),o=e.isMatrix(r)?0:e.getTypeLength(r);return i>n&&i>o?t:n>o?s:o>i?r:t}getNodeType(e){const t=this.method;return t===Co.LENGTH||t===Co.DISTANCE||t===Co.DOT?"float":t===Co.CROSS?"vec3":t===Co.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const s=this.method,r=this.getNodeType(e),i=this.getInputType(e),n=this.aNode,o=this.bNode,a=this.cNode,u=!0===e.renderer.isWebGLRenderer;if(s===Co.TRANSFORM_DIRECTION){let s=n,r=o;e.isMatrix(s.getNodeType(e))?r=Oi(wi(r),0):s=Oi(wi(s),0);const i=co(s,r).xyz;return ko(i).build(e,t)}if(s===Co.NEGATE)return e.format("( - "+n.build(e,i)+" )",r,t);if(s===Co.ONE_MINUS)return lo(1,n).build(e,t);if(s===Co.RECIPROCAL)return ho(1,n).build(e,t);if(s===Co.DIFFERENCE)return Yo(lo(n,o)).build(e,t);{const l=[];return s===Co.CROSS||s===Co.MOD?l.push(n.build(e,r),o.build(e,r)):s===Co.STEP?l.push(n.build(e,1===e.getTypeLength(n.getNodeType(e))?"float":i),o.build(e,i)):u&&(s===Co.MIN||s===Co.MAX)||s===Co.MOD?l.push(n.build(e,i),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":i)):s===Co.REFRACT?l.push(n.build(e,i),o.build(e,i),a.build(e,"float")):s===Co.MIX?l.push(n.build(e,i),o.build(e,i),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":i)):(l.push(n.build(e,i)),null!==o&&l.push(o.build(e,i)),null!==a&&l.push(a.build(e,i))),e.format(`${e.getMethod(s,r)}( ${l.join(", ")} )`,r,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Co.RADIANS="radians",Co.DEGREES="degrees",Co.EXP="exp",Co.EXP2="exp2",Co.LOG="log",Co.LOG2="log2",Co.SQRT="sqrt",Co.INVERSE_SQRT="inversesqrt",Co.FLOOR="floor",Co.CEIL="ceil",Co.NORMALIZE="normalize",Co.FRACT="fract",Co.SIN="sin",Co.COS="cos",Co.TAN="tan",Co.ASIN="asin",Co.ACOS="acos",Co.ATAN="atan",Co.ABS="abs",Co.SIGN="sign",Co.LENGTH="length",Co.NEGATE="negate",Co.ONE_MINUS="oneMinus",Co.DFDX="dFdx",Co.DFDY="dFdy",Co.ROUND="round",Co.RECIPROCAL="reciprocal",Co.TRUNC="trunc",Co.FWIDTH="fwidth",Co.BITCAST="bitcast",Co.ATAN2="atan2",Co.MIN="min",Co.MAX="max",Co.MOD="mod",Co.STEP="step",Co.REFLECT="reflect",Co.DISTANCE="distance",Co.DIFFERENCE="difference",Co.DOT="dot",Co.CROSS="cross",Co.POW="pow",Co.TRANSFORM_DIRECTION="transformDirection",Co.MIX="mix",Co.CLAMP="clamp",Co.REFRACT="refract",Co.SMOOTHSTEP="smoothstep",Co.FACEFORWARD="faceforward";const wo=Ni(1e-6),Mo=Ni(1e6),Fo=hi(Co,Co.RADIANS),Bo=hi(Co,Co.DEGREES),Oo=hi(Co,Co.EXP),Lo=hi(Co,Co.EXP2),Uo=hi(Co,Co.LOG),Io=hi(Co,Co.LOG2),Do=hi(Co,Co.SQRT),Po=hi(Co,Co.INVERSE_SQRT),Vo=hi(Co,Co.FLOOR),Go=hi(Co,Co.CEIL),ko=hi(Co,Co.NORMALIZE),zo=hi(Co,Co.FRACT),$o=hi(Co,Co.SIN),Ho=hi(Co,Co.COS),Wo=hi(Co,Co.TAN),jo=hi(Co,Co.ASIN),Xo=hi(Co,Co.ACOS),qo=hi(Co,Co.ATAN),Yo=hi(Co,Co.ABS),Ko=hi(Co,Co.SIGN),Qo=hi(Co,Co.LENGTH),Zo=hi(Co,Co.NEGATE),Jo=hi(Co,Co.ONE_MINUS),ea=hi(Co,Co.DFDX),ta=hi(Co,Co.DFDY),sa=hi(Co,Co.ROUND),ra=hi(Co,Co.RECIPROCAL),ia=hi(Co,Co.TRUNC),na=hi(Co,Co.FWIDTH),oa=hi(Co,Co.BITCAST),aa=hi(Co,Co.ATAN2),ua=hi(Co,Co.MIN),la=hi(Co,Co.MAX),da=hi(Co,Co.MOD),ca=hi(Co,Co.STEP),ha=hi(Co,Co.REFLECT),pa=hi(Co,Co.DISTANCE),ga=hi(Co,Co.DIFFERENCE),ma=hi(Co,Co.DOT),fa=hi(Co,Co.CROSS),Ta=hi(Co,Co.POW),xa=hi(Co,Co.POW,2),ya=hi(Co,Co.POW,3),ba=hi(Co,Co.POW,4),Na=hi(Co,Co.TRANSFORM_DIRECTION),_a=e=>co(Ko(e),Ta(Yo(e),1/3)),va=hi(Co,Co.MIX),Sa=(e,t=0,s=1)=>li(new Co(Co.CLAMP,li(e),li(t),li(s))),Aa=e=>Sa(e),Ra=hi(Co,Co.REFRACT),Ea=hi(Co,Co.SMOOTHSTEP),Ca=hi(Co,Co.FACEFORWARD);Pr("radians",Fo),Pr("degrees",Bo),Pr("exp",Oo),Pr("exp2",Lo),Pr("log",Uo),Pr("log2",Io),Pr("sqrt",Do),Pr("inverseSqrt",Po),Pr("floor",Vo),Pr("ceil",Go),Pr("normalize",ko),Pr("fract",zo),Pr("sin",$o),Pr("cos",Ho),Pr("tan",Wo),Pr("asin",jo),Pr("acos",Xo),Pr("atan",qo),Pr("abs",Yo),Pr("sign",Ko),Pr("length",Qo),Pr("negate",Zo),Pr("oneMinus",Jo),Pr("dFdx",ea),Pr("dFdy",ta),Pr("round",sa),Pr("reciprocal",ra),Pr("trunc",ia),Pr("fwidth",na),Pr("atan2",aa),Pr("min",ua),Pr("max",la),Pr("mod",da),Pr("step",ca),Pr("reflect",ha),Pr("distance",pa),Pr("dot",ma),Pr("cross",fa),Pr("pow",Ta),Pr("pow2",xa),Pr("pow3",ya),Pr("pow4",ba),Pr("transformDirection",Na),Pr("mix",((e,t,s)=>va(t,s,e))),Pr("clamp",Sa),Pr("refract",Ra),Pr("smoothstep",((e,t,s)=>Ea(t,s,e))),Pr("faceForward",Ca),Pr("difference",ga),Pr("saturate",Aa),Pr("cbrt",_a),yr("MathNode",Co);const wa=mi((e=>{const{value:t}=e,{rgb:s}=t,r=s.mul(.9478672986).add(.0521327014).pow(2.4),i=s.mul(.0773993808),n=s.lessThanEqual(.04045),o=va(r,i,n);return Oi(o,t.a)})),Ma=mi((e=>{const{value:t}=e,{rgb:s}=t,r=s.pow(.41666).mul(1.055).sub(.055),i=s.mul(12.92),n=s.lessThanEqual(.0031308),o=va(r,i,n);return Oi(o,t.a)})),Fa=e=>{let t=null;return e===c?t="Linear":e===h&&(t="sRGB"),t},Ba=(e,t)=>Fa(e)+"To"+Fa(t);class Oa extends Mr{constructor(e,t){super("vec4"),this.method=e,this.node=t}setup(){const{method:e,node:t}=this;return e===Oa.LINEAR_TO_LINEAR?t:La[e]({value:t})}}Oa.LINEAR_TO_LINEAR="LinearToLinear",Oa.LINEAR_TO_sRGB="LinearTosRGB",Oa.sRGB_TO_LINEAR="sRGBToLinear";const La={[Oa.LINEAR_TO_sRGB]:Ma,[Oa.sRGB_TO_LINEAR]:wa},Ua=(e,t)=>li(new Oa(Ba(c,t),li(e))),Ia=(e,t)=>li(new Oa(Ba(t,c),li(e))),Da=hi(Oa,Oa.LINEAR_TO_sRGB),Pa=hi(Oa,Oa.sRGB_TO_LINEAR);Pr("linearTosRGB",Da),Pr("sRGBToLinear",Pa),Pr("linearToColorSpace",Ua),Pr("colorSpaceToLinear",Ia),yr("ColorSpaceNode",Oa);class Va extends xr{constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),r=this.snippet;if("void"!==s)return e.format(`( ${r} )`,s,t);e.addLineFlowCode(r)}}const Ga=hi(Va);yr("ExpressionNode",Va);class ka extends Ki{constructor(e){super(0),this.textureNode=e,this.updateType=rr.FRAME}get texture(){return this.textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&void 0!==s.width){const{width:e,height:t}=s;this.value=Math.log2(Math.max(e,t))}}}const za=hi(ka);yr("MaxMipLevelNode",ka);class $a extends Ki{constructor(e,t=null,s=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.compareNode=null,this.depthNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=rr.NONE,this.setUpdateMatrix(null===t)}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":"vec4"}getInputType(){return"texture"}getDefaultUV(){return io(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){const t=this.value;return Qi(t.matrix).mul(wi(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?rr.FRAME:rr.NONE,this}setupUV(e,t){const s=this.value;return!e.isFlipY()||!0!==s.isRenderTargetTexture&&!0!==s.isFramebufferTexture&&!0!==s.isDepthTexture||(t=t.setY(t.y.oneMinus())),t}setup(e){const t=e.getNodeProperties(this);let s=this.uvNode;null!==s&&!0!==e.context.forceUVContext||!e.context.getUV||(s=e.context.getUV(this)),s||(s=this.getDefaultUV()),!0===this.updateMatrix&&(s=this.getTransformedUV(s)),s=this.setupUV(e,s);let r=this.levelNode;null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),null!==r&&void 0!==e.context.getTextureLevelAlgorithm&&(r=e.context.getTextureLevelAlgorithm(this,r)),t.uvNode=s,t.levelNode=r,t.compareNode=this.compareNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,!0===this.sampler?"vec2":"ivec2")}generateSnippet(e,t,s,r,i,n){const o=this.value;let a;return a=r?e.generateTextureLevel(o,t,s,r,i):n?e.generateTextureCompare(o,t,s,n,i):!1===this.sampler?e.generateTextureLoad(o,t,s,i):e.generateTexture(o,t,s,i),a}generate(e,t){const s=e.getNodeProperties(this),r=this.value;if(!r||!0!==r.isTexture)throw new Error("TextureNode: Need a three.js texture.");const i=super.generate(e,"property");if("sampler"===t)return i+"_sampler";if(e.isReference(t))return i;{const n=e.getDataFromNode(this);let o=n.propertyName;if(void 0===o){const{uvNode:t,levelNode:r,compareNode:a,depthNode:u}=s,l=this.generateUV(e,t),d=r?r.build(e,"float"):null,c=u?u.build(e,"int"):null,h=a?a.build(e,"float"):null,p=e.getVarFromNode(this);o=e.getPropertyName(p);const g=this.generateSnippet(e,i,l,d,c,h);e.addLineFlowCode(`${o} = ${g}`),!1!==e.context.tempWrite&&(n.snippet=g,n.propertyName=o)}let a=o;const u=this.getNodeType(e);return e.needsColorSpaceToLinear(r)&&(a=Ia(Ga(a,u),r.colorSpace).setup(e).build(e,u)),e.format(a,u,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=e,li(t)}blur(e){const t=this.clone();return t.levelNode=e.mul(za(t)),li(t)}level(e){const t=this.clone();return t.levelNode=e,t}size(e){return oo(this,e)}compare(e){const t=this.clone();return t.compareNode=li(e),li(t)}depth(e){const t=this.clone();return t.depthNode=li(e),li(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value]}update(){const e=this.value;!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e}}const Ha=hi($a),Wa=(...e)=>Ha(...e).setSampler(!1),ja=e=>(!0===e.isNode?e:Ha(e)).convert("sampler");Pr("texture",Ha),yr("TextureNode",$a);class Xa extends xr{constructor(e,t,s=null){super(),this.property=e,this.index=null,this.uniformType=t,this.object=s,this.reference=null,this.node=null,this.updateType=rr.OBJECT,this.setNodeType(t)}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setIndex(e){return this.index=e,this}getIndex(){return this.index}setNodeType(e){let t=null;t="texture"===e?Ha(null):Qi(e),this.node=t}getNodeType(e){return this.node.getNodeType(e)}update(){let e=this.reference[this.property];null!==this.index&&(e=e[this.index]),this.node.value=e}setup(){return this.node}}const qa=(e,t,s)=>li(new Xa(e,t,s)),Ya=(e,t,s,r)=>li(new Xa(e,s,r).setIndex(t));yr("ReferenceNode",Xa);class Ka extends Xa{constructor(e,t,s=null){super(e,t,s),this.material=s}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}setup(e){const t=null!==this.material?this.material:e.material;return this.node.value=t[this.property],super.setup(e)}}const Qa=(e,t,s)=>li(new Ka(e,t,s));yr("MaterialReferenceNode",Ka);class Za extends xr{constructor(e=Za.VIEW_MATRIX,t=null){super(),this.scope=e,this.object3d=t,this.updateType=rr.OBJECT,this._uniformNode=new Ki(null)}getNodeType(){const e=this.scope;return e===Za.WORLD_MATRIX||e===Za.VIEW_MATRIX?"mat4":e===Za.NORMAL_MATRIX?"mat3":e===Za.POSITION||e===Za.VIEW_POSITION||e===Za.DIRECTION||e===Za.SCALE?"vec3":void 0}update(e){const t=this.object3d,s=this._uniformNode,r=this.scope;if(r===Za.VIEW_MATRIX)s.value=t.modelViewMatrix;else if(r===Za.NORMAL_MATRIX)s.value=t.normalMatrix;else if(r===Za.WORLD_MATRIX)s.value=t.matrixWorld;else if(r===Za.POSITION)s.value=s.value||new n,s.value.setFromMatrixPosition(t.matrixWorld);else if(r===Za.SCALE)s.value=s.value||new n,s.value.setFromMatrixScale(t.matrixWorld);else if(r===Za.DIRECTION)s.value=s.value||new n,t.getWorldDirection(s.value);else if(r===Za.VIEW_POSITION){const r=e.camera;s.value=s.value||new n,s.value.setFromMatrixPosition(t.matrixWorld),s.value.applyMatrix4(r.matrixWorldInverse)}}generate(e){const t=this.scope;return t===Za.WORLD_MATRIX||t===Za.VIEW_MATRIX?this._uniformNode.nodeType="mat4":t===Za.NORMAL_MATRIX?this._uniformNode.nodeType="mat3":t!==Za.POSITION&&t!==Za.VIEW_POSITION&&t!==Za.DIRECTION&&t!==Za.SCALE||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Za.VIEW_MATRIX="viewMatrix",Za.NORMAL_MATRIX="normalMatrix",Za.WORLD_MATRIX="worldMatrix",Za.POSITION="position",Za.SCALE="scale",Za.VIEW_POSITION="viewPosition",Za.DIRECTION="direction";const Ja=hi(Za,Za.DIRECTION),eu=hi(Za,Za.VIEW_MATRIX),tu=hi(Za,Za.NORMAL_MATRIX),su=hi(Za,Za.WORLD_MATRIX),ru=hi(Za,Za.POSITION),iu=hi(Za,Za.SCALE),nu=hi(Za,Za.VIEW_POSITION);yr("Object3DNode",Za);class ou extends Za{constructor(e=ou.POSITION){super(e),this.updateType=rr.RENDER}getNodeType(e){const t=this.scope;return t===ou.PROJECTION_MATRIX?"mat4":t===ou.NEAR||t===ou.FAR||t===ou.LOG_DEPTH?"float":super.getNodeType(e)}update(e){const t=e.camera,s=this._uniformNode,r=this.scope;r===ou.VIEW_MATRIX?s.value=t.matrixWorldInverse:r===ou.PROJECTION_MATRIX?s.value=t.projectionMatrix:r===ou.NEAR?s.value=t.near:r===ou.FAR?s.value=t.far:r===ou.LOG_DEPTH?s.value=2/(Math.log(t.far+1)/Math.LN2):(this.object3d=t,super.update(e))}generate(e){const t=this.scope;return t===ou.PROJECTION_MATRIX?this._uniformNode.nodeType="mat4":t!==ou.NEAR&&t!==ou.FAR&&t!==ou.LOG_DEPTH||(this._uniformNode.nodeType="float"),super.generate(e)}}ou.PROJECTION_MATRIX="projectionMatrix",ou.NEAR="near",ou.FAR="far",ou.LOG_DEPTH="logDepth";const au=gn(pi(ou,ou.PROJECTION_MATRIX),"projectionMatrix"),uu=pi(ou,ou.NEAR),lu=pi(ou,ou.FAR),du=pi(ou,ou.LOG_DEPTH),cu=pi(ou,ou.VIEW_MATRIX),hu=pi(ou,ou.NORMAL_MATRIX),pu=pi(ou,ou.WORLD_MATRIX),gu=pi(ou,ou.POSITION);yr("CameraNode",ou);class mu extends Za{constructor(e=mu.VIEW_MATRIX){super(e)}update(e){this.object3d=e.object,super.update(e)}}const fu=pi(mu,mu.DIRECTION),Tu=pi(mu,mu.VIEW_MATRIX).label("modelViewMatrix").temp("ModelViewMatrix"),xu=pi(mu,mu.NORMAL_MATRIX),yu=pi(mu,mu.WORLD_MATRIX),bu=pi(mu,mu.POSITION),Nu=pi(mu,mu.SCALE),_u=pi(mu,mu.VIEW_POSITION);yr("ModelNode",mu);class vu extends xr{constructor(e=vu.LOCAL){super("vec3"),this.scope=e}isGlobal(){return!0}getHash(){return`normal-${this.scope}`}generate(e){const t=this.scope;let s=null;if(t===vu.GEOMETRY)s=nn("normal","vec3");else if(t===vu.LOCAL)s=sn(Su);else if(t===vu.VIEW){const e=xu.mul(Au);s=ko(sn(e))}else if(t===vu.WORLD){const e=Ru.transformDirection(cu);s=ko(sn(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}vu.GEOMETRY="geometry",vu.LOCAL="local",vu.VIEW="view",vu.WORLD="world";const Su=pi(vu,vu.GEOMETRY),Au=pi(vu,vu.LOCAL).temp("Normal"),Ru=pi(vu,vu.VIEW),Eu=pi(vu,vu.WORLD),Cu=Cn("vec3","TransformedNormalView"),wu=Cu.transformDirection(cu).normalize(),Mu=Cn("vec3","TransformedClearcoatNormalView");yr("NormalNode",vu);const Fu=new Map;class Bu extends xr{constructor(e){super(),this.scope=e}getCache(e,t){let s=Fu.get(e);return void 0===s&&(s=Qa(e,t),Fu.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache("map"===e?"map":e+"Map","texture")}setup(e){const t=e.context.material,s=this.scope;let r=null;if(s===Bu.COLOR){const e=this.getColor(s);r=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(s===Bu.OPACITY){const e=this.getFloat(s);r=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alpha")):e}else if(s===Bu.SPECULAR_STRENGTH)r=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture(s).r:Ni(1);else if(s===Bu.ROUGHNESS){const e=this.getFloat(s);r=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture(s).g):e}else if(s===Bu.METALNESS){const e=this.getFloat(s);r=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture(s).b):e}else if(s===Bu.EMISSIVE){const e=this.getColor(s);r=t.emissiveMap&&!0===t.emissiveMap.isTexture?e.mul(this.getTexture(s)):e}else if(s===Bu.NORMAL)r=t.normalMap?this.getTexture("normal").normalMap(this.getCache("normalScale","vec2")):t.bumpMap?this.getTexture("bump").r.bumpMap(this.getFloat("bumpScale")):Ru;else if(s===Bu.CLEARCOAT){const e=this.getFloat(s);r=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===Bu.CLEARCOAT_ROUGHNESS){const e=this.getFloat(s);r=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===Bu.CLEARCOAT_NORMAL)r=t.clearcoatNormalMap?this.getTexture(s).normalMap(this.getCache(s+"Scale","vec2")):Ru;else if(s===Bu.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));r=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColor").rgb):e}else if(s===Bu.SHEEN_ROUGHNESS){const e=this.getFloat(s);r=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture(s).a):e,r=r.clamp(.07,1)}else if(s===Bu.IRIDESCENCE_THICKNESS){const e=qa(1,"float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const i=qa(0,"float",t.iridescenceThicknessRange);r=e.sub(i).mul(this.getTexture(s).g).add(i)}else r=e}else{const t=this.getNodeType(e);r=this.getCache(s,t)}return r}}Bu.ALPHA_TEST="alphaTest",Bu.COLOR="color",Bu.OPACITY="opacity",Bu.SHININESS="shininess",Bu.SPECULAR_COLOR="specular",Bu.SPECULAR_STRENGTH="specularStrength",Bu.REFLECTIVITY="reflectivity",Bu.ROUGHNESS="roughness",Bu.METALNESS="metalness",Bu.NORMAL="normal",Bu.CLEARCOAT="clearcoat",Bu.CLEARCOAT_ROUGHNESS="clearcoatRoughness",Bu.CLEARCOAT_NORMAL="clearcoatNormal",Bu.EMISSIVE="emissive",Bu.ROTATION="rotation",Bu.SHEEN="sheen",Bu.SHEEN_ROUGHNESS="sheenRoughness",Bu.IRIDESCENCE="iridescence",Bu.IRIDESCENCE_IOR="iridescenceIOR",Bu.IRIDESCENCE_THICKNESS="iridescenceThickness",Bu.LINE_SCALE="scale",Bu.LINE_DASH_SIZE="dashSize",Bu.LINE_GAP_SIZE="gapSize",Bu.LINE_WIDTH="linewidth",Bu.LINE_DASH_OFFSET="dashOffset",Bu.POINT_WIDTH="pointWidth";const Ou=pi(Bu,Bu.ALPHA_TEST),Lu=pi(Bu,Bu.COLOR),Uu=pi(Bu,Bu.SHININESS),Iu=pi(Bu,Bu.EMISSIVE),Du=pi(Bu,Bu.OPACITY),Pu=pi(Bu,Bu.SPECULAR_COLOR),Vu=pi(Bu,Bu.SPECULAR_STRENGTH),Gu=pi(Bu,Bu.REFLECTIVITY),ku=pi(Bu,Bu.ROUGHNESS),zu=pi(Bu,Bu.METALNESS),$u=pi(Bu,Bu.NORMAL),Hu=pi(Bu,Bu.CLEARCOAT),Wu=pi(Bu,Bu.CLEARCOAT_ROUGHNESS),ju=pi(Bu,Bu.CLEARCOAT_NORMAL),Xu=pi(Bu,Bu.ROTATION),qu=pi(Bu,Bu.SHEEN),Yu=pi(Bu,Bu.SHEEN_ROUGHNESS),Ku=pi(Bu,Bu.IRIDESCENCE),Qu=pi(Bu,Bu.IRIDESCENCE_IOR),Zu=pi(Bu,Bu.IRIDESCENCE_THICKNESS),Ju=pi(Bu,Bu.LINE_SCALE),el=pi(Bu,Bu.LINE_DASH_SIZE),tl=pi(Bu,Bu.LINE_GAP_SIZE),sl=pi(Bu,Bu.LINE_WIDTH),rl=pi(Bu,Bu.LINE_DASH_OFFSET),il=pi(Bu,Bu.POINT_WIDTH);yr("MaterialNode",Bu);class nl extends xr{constructor(e=nl.LOCAL){super("vec3"),this.scope=e}isGlobal(){return!0}getHash(){return`position-${this.scope}`}generate(e){const t=this.scope;let s=null;if(t===nl.GEOMETRY)s=nn("position","vec3");else if(t===nl.LOCAL)s=sn(ol);else if(t===nl.WORLD){const e=yu.mul(al);s=sn(e)}else if(t===nl.VIEW){const e=Tu.mul(al);s=sn(e)}else if(t===nl.VIEW_DIRECTION){const e=dl.negate();s=ko(sn(e))}else if(t===nl.WORLD_DIRECTION){const e=al.transformDirection(yu);s=ko(sn(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}nl.GEOMETRY="geometry",nl.LOCAL="local",nl.WORLD="world",nl.WORLD_DIRECTION="worldDirection",nl.VIEW="view",nl.VIEW_DIRECTION="viewDirection";const ol=pi(nl,nl.GEOMETRY),al=pi(nl,nl.LOCAL).temp("Position"),ul=pi(nl,nl.WORLD),ll=pi(nl,nl.WORLD_DIRECTION),dl=pi(nl,nl.VIEW),cl=pi(nl,nl.VIEW_DIRECTION);yr("PositionNode",nl);class hl extends Mr{constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if("fragment"===e.shaderStage)return sn(e.context.mvp);const t=this.positionNode||al;return au.mul(Tu).mul(t)}}const pl=hi(hl);yr("ModelViewProjectionNode",hl);class gl extends Nr{constructor(e,t=null,s=0,r=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=r,this.usage=p,this.instanced=!1,this.attribute=null,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),s=this.value,r=e.getTypeLength(t),i=this.bufferStride||r,n=this.bufferOffset,o=!0===s.isInterleavedBuffer?s:new g(s,i),a=new m(o,r,n);o.setUsage(this.usage),this.attribute=a,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),r=e.getPropertyName(s);let i=null;if("vertex"===e.shaderStage)i=r;else{i=sn(this).build(e,t)}return i}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this}setInstanced(e){return this.instanced=e,this}}const ml=(e,t,s,r)=>li(new gl(e,t,s,r)),fl=(t,s,r,i)=>ml(t,s,r,i).setUsage(e),Tl=(e,t,s,r)=>ml(e,t,s,r).setInstanced(!0),xl=(e,t,s,r)=>fl(e,t,s,r).setInstanced(!0);Pr("toAttribute",(e=>ml(e.value))),yr("BufferAttributeNode",gl);class yl extends xr{constructor(e){super("void"),this.instanceMesh=e,this.instanceMatrixNode=null}setup(){let t=this.instanceMatrixNode;if(null===t){const s=this.instanceMesh.instanceMatrix,r=new f(s.array,16,1),i=s.usage===e?xl:Tl,n=[i(r,"vec4",16,0),i(r,"vec4",16,4),i(r,"vec4",16,8),i(r,"vec4",16,12)];t=ki(...n),this.instanceMatrixNode=t}const s=t.mul(al).xyz,r=Di(t[0].xyz,t[1].xyz,t[2].xyz),i=Au.div(wi(r[0].dot(r[0]),r[1].dot(r[1]),r[2].dot(r[2]))),n=r.mul(i).xyz;al.assign(s),Au.assign(n)}}const bl=hi(yl);yr("InstanceNode",yl);class Nl extends Ki{constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getInputType(){return"buffer"}}const _l=(e,t,s)=>li(new Nl(e,t,s));yr("BufferNode",Nl);class vl extends xr{constructor(e=vl.LOCAL){super(),this.scope=e}getHash(){return`tangent-${this.scope}`}getNodeType(){return this.scope===vl.GEOMETRY?"vec4":"vec3"}generate(e){const t=this.scope;let s=null;if(t===vl.GEOMETRY)s=nn("tangent","vec4");else if(t===vl.LOCAL)s=sn(Sl.xyz);else if(t===vl.VIEW){const e=Tu.mul(Al).xyz;s=ko(sn(e))}else if(t===vl.WORLD){const e=Rl.transformDirection(cu);s=ko(sn(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}vl.GEOMETRY="geometry",vl.LOCAL="local",vl.VIEW="view",vl.WORLD="world";const Sl=pi(vl,vl.GEOMETRY),Al=pi(vl,vl.LOCAL),Rl=pi(vl,vl.VIEW),El=pi(vl,vl.WORLD),Cl=bn(Rl,"TransformedTangentView"),wl=ko(Cl.transformDirection(cu));yr("TangentNode",vl);class Ml extends xr{constructor(e){super("void"),this.skinnedMesh=e,this.updateType=rr.OBJECT,this.skinIndexNode=nn("skinIndex","uvec4"),this.skinWeightNode=nn("skinWeight","vec4"),this.bindMatrixNode=Qi(e.bindMatrix,"mat4"),this.bindMatrixInverseNode=Qi(e.bindMatrixInverse,"mat4"),this.boneMatricesNode=_l(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)}setup(e){const{skinIndexNode:t,skinWeightNode:s,bindMatrixNode:r,bindMatrixInverseNode:i,boneMatricesNode:n}=this,o=n.element(t.x),a=n.element(t.y),u=n.element(t.z),l=n.element(t.w),d=r.mul(al),c=uo(o.mul(s.x).mul(d),a.mul(s.y).mul(d),u.mul(s.z).mul(d),l.mul(s.w).mul(d)),h=i.mul(c).xyz;let p=uo(s.x.mul(o),s.y.mul(a),s.z.mul(u),s.w.mul(l));p=i.mul(p).mul(r);const g=p.transformDirection(Au).xyz;al.assign(h),Au.assign(g),e.hasGeometryAttribute("tangent")&&Al.assign(g)}generate(e,t){if("void"!==t)return al.build(e,t)}update(){this.skinnedMesh.skeleton.update()}}const Fl=hi(Ml);yr("SkinningNode",Ml);const Bl=new WeakMap,Ol=new o,Ll=mi((({bufferMap:e,influence:t,stride:s,width:r,depth:i,offset:n})=>{const o=_i(fn).mul(s).add(n),a=o.div(r),u=o.sub(a.mul(r));return Wa(e,Ri(u,a)).depth(i).mul(t)}));class Ul extends xr{constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=Qi(1),this.updateType=rr.OBJECT}setup(e){const{geometry:t}=e,s=void 0!==t.morphAttributes.position,r=void 0!==t.morphAttributes.normal,n=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,o=void 0!==n?n.length:0,{texture:a,stride:u,size:l}=function(e){const t=void 0!==e.morphAttributes.position,s=void 0!==e.morphAttributes.normal,r=void 0!==e.morphAttributes.color,n=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,o=void 0!==n?n.length:0;let a=Bl.get(e);if(void 0===a||a.count!==o){void 0!==a&&a.texture.dispose();const n=e.morphAttributes.position||[],u=e.morphAttributes.normal||[],l=e.morphAttributes.color||[];let d=0;!0===t&&(d=1),!0===s&&(d=2),!0===r&&(d=3);let c=e.attributes.position.count*d,h=1;const p=4096;c>p&&(h=Math.ceil(c/p),c=p);const g=new Float32Array(c*h*4*o),m=new T(g,c,h,o);m.type=x,m.needsUpdate=!0;const f=4*d;for(let e=0;e<o;e++){const i=n[e],o=u[e],a=l[e],d=c*h*4*e;for(let e=0;e<i.count;e++){const n=e*f;!0===t&&(Ol.fromBufferAttribute(i,e),g[d+n+0]=Ol.x,g[d+n+1]=Ol.y,g[d+n+2]=Ol.z,g[d+n+3]=0),!0===s&&(Ol.fromBufferAttribute(o,e),g[d+n+4]=Ol.x,g[d+n+5]=Ol.y,g[d+n+6]=Ol.z,g[d+n+7]=0),!0===r&&(Ol.fromBufferAttribute(a,e),g[d+n+8]=Ol.x,g[d+n+9]=Ol.y,g[d+n+10]=Ol.z,g[d+n+11]=4===a.itemSize?Ol.w:1)}}a={count:o,texture:m,stride:d,size:new i(c,h)},Bl.set(e,a),e.addEventListener("dispose",(function t(){m.dispose(),Bl.delete(e),e.removeEventListener("dispose",t)}))}return a}(t);!0===s&&al.mulAssign(this.morphBaseInfluence),!0===r&&Au.mulAssign(this.morphBaseInfluence);const d=_i(l.width);for(let e=0;e<o;e++){const t=Ya("morphTargetInfluences",e,"float"),i=_i(e);!0===s&&al.addAssign(Ll({bufferMap:a,influence:t,stride:u,width:d,depth:i,offset:_i(0)})),!0===r&&Au.addAssign(Ll({bufferMap:a,influence:t,stride:u,width:d,depth:i,offset:_i(1)}))}}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce(((e,t)=>e+t),0)}}const Il=hi(Ul);yr("MorphNode",Ul);class Dl extends xr{constructor(){super("vec3")}getHash(){return"reflectVector"}setup(){return cl.negate().reflect(Cu).transformDirection(cu)}}const Pl=pi(Dl);yr("ReflectVectorNode",Dl);class Vl extends $a{constructor(e,t=null,s=null){super(e,t,s),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){return Pl}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return e.renderer.coordinateSystem!==y&&s.isRenderTargetTexture?t:wi(t.x.negate(),t.yz)}generateUV(e,t){return t.build(e,"vec3")}}const Gl=hi(Vl);Pr("cubeTexture",Gl),yr("CubeTextureNode",Vl);class kl extends xr{constructor(){super("vec3")}generate(){}}yr("LightingNode",kl);let zl=null;class $l extends kl{constructor(e=null){super(),this.updateType=rr.FRAME,this.light=e,this.rtt=null,this.shadowNode=null,this.color=new r,this._defaultColorNode=Qi(this.color),this.colorNode=this._defaultColorNode,this.isAnalyticLightNode=!0}getCacheKey(){return super.getCacheKey()+"-"+this.light.id+"-"+(this.light.castShadow?"1":"0")}getHash(){return this.light.uuid}setupShadow(e){let t=this.shadowNode;if(null===t){null===zl&&(zl=e.createNodeMaterial("MeshBasicNodeMaterial"));const s=this.light.shadow,r=e.getRenderTarget(s.mapSize.width,s.mapSize.height),i=new b;i.minFilter=N,i.magFilter=N,i.image.width=s.mapSize.width,i.image.height=s.mapSize.height,i.compareFunction=_,r.depthTexture=i,s.camera.updateProjectionMatrix();const n=qa("bias","float",s),o=qa("normalBias","float",s);let a=Qi(s.matrix).mul(ul.add(Eu.mul(o)));a=a.xyz.div(a.w);const u=a.x.greaterThanEqual(0).and(a.x.lessThanEqual(1)).and(a.y.greaterThanEqual(0)).and(a.y.lessThanEqual(1)).and(a.z.lessThanEqual(1));let l=a.z.add(n);e.renderer.coordinateSystem===y&&(l=l.mul(2).sub(1)),a=wi(a.x,a.y.oneMinus(),l);const d=(e,t,s)=>Ha(e,t).compare(s);t=d(i,a.xy,a.z),this.rtt=r,this.colorNode=this.colorNode.mul(u.mix(1,t)),this.shadowNode=t,this.updateBeforeType=rr.RENDER}}setup(e){this.light.castShadow?this.setupShadow(e):null!==this.shadowNode&&this.disposeShadow()}updateShadow(e){const{rtt:t,light:s}=this,{renderer:r,scene:i}=e,n=i.overrideMaterial;i.overrideMaterial=zl,t.setSize(s.shadow.mapSize.width,s.shadow.mapSize.height),s.shadow.updateMatrices(s);const o=r.getRenderTarget(),a=r.getRenderObjectFunction();r.setRenderObjectFunction(((e,...t)=>{!0===e.castShadow&&r.renderObject(e,...t)})),r.setRenderTarget(t),r.render(i,s.shadow.camera),r.setRenderTarget(o),r.setRenderObjectFunction(a),i.overrideMaterial=n}disposeShadow(){this.rtt.dispose(),this.shadowNode=null,this.rtt=null,this.colorNode=this._defaultColorNode}updateBefore(e){const{light:t}=this;t.castShadow&&this.updateShadow(e)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}yr("AnalyticLightNode",$l);const Hl=new WeakMap;class Wl extends xr{constructor(e=[]){super("vec3"),this.totalDiffuseNode=wi().temp("totalDiffuse"),this.totalSpecularNode=wi().temp("totalSpecular"),this.outgoingLightNode=wi().temp("outgoingLight"),this.lightNodes=e,this._hash=null}get hasLight(){return this.lightNodes.length>0}getHash(){if(null===this._hash){const e=[];for(const t of this.lightNodes)e.push(t.getHash());this._hash="lights-"+e.join(",")}return this._hash}setup(e){const t=e.context,s=t.lightingModel;let r=this.outgoingLightNode;if(s){const{lightNodes:i,totalDiffuseNode:n,totalSpecularNode:o}=this;t.outgoingLight=r;const a=e.addStack();s.start(t,a,e);for(const t of i)t.build(e);s.indirectDiffuse(t,a,e),s.indirectSpecular(t,a,e),s.ambientOcclusion(t,a,e);const{backdrop:u,backdropAlpha:l}=t,{directDiffuse:d,directSpecular:c,indirectDiffuse:h,indirectSpecular:p}=t.reflectedLight;let g=d.add(h);null!==u&&(g=wi(null!==l?l.mix(g,u):u)),n.assign(g),o.assign(c.add(p)),r.assign(n.add(o)),s.finish(t,a,e),r=r.bypass(e.removeStack())}return r}_getLightNodeById(e){for(const t of this.lightNodes)if(t.isAnalyticLightNode&&t.light.id===e)return t;return null}fromLights(e=[]){const t=[];e=(e=>e.sort(((e,t)=>e.id-t.id)))(e);for(const s of e){let e=this._getLightNodeById(s.id);if(null===e){const t=s.constructor,r=Hl.has(t)?Hl.get(t):$l;e=li(new r(s))}t.push(e)}return this.lightNodes=t,this._hash=null,this}}const jl=e=>li((new Wl).fromLights(e)),Xl=hi(Wl);function ql(e,t){if(!Hl.has(e)){if("function"!=typeof e)throw new Error(`Light ${e.name} is not a class`);if("function"!=typeof t||!t.type)throw new Error(`Light node ${t.type} is not a class`);Hl.set(e,t)}}class Yl extends kl{constructor(e=null){super(),this.aoNode=e}setup(e){const t=this.aoNode.x.sub(1).mul(1).add(1);e.context.ambientOcclusion.mulAssign(t)}}yr("AONode",Yl);class Kl extends hn{constructor(e,t=null,s=null,r=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=r,this._context=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s={directDiffuse:wi().temp("directDiffuse"),directSpecular:wi().temp("directSpecular"),indirectDiffuse:wi().temp("indirectDiffuse"),indirectSpecular:wi().temp("indirectSpecular")};return{radiance:wi().temp("radiance"),irradiance:wi().temp("irradiance"),iblIrradiance:wi().temp("iblIrradiance"),ambientOcclusion:Ni(1).temp("ambientOcclusion"),reflectedLight:s,backdrop:e,backdropAlpha:t}}setup(e){return this.context=this._context||(this._context=this.getContext()),this.context.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const Ql=hi(Kl);Pr("lightingContext",Ql),yr("LightingContextNode",Kl);class Zl extends Mr{constructor(e=ll){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(2*Math.PI)).add(.5),s=e.y.negate().clamp(-1,1).asin().mul(1/Math.PI).add(.5);return Ai(t,s)}}const Jl=hi(Zl);yr("EquirectUVNode",Zl);class ed extends xr{constructor(e,t=null){super("float"),this.textureNode=e,this.roughnessNode=t}setup(){const{textureNode:e,roughnessNode:t}=this,s=za(e),r=t.mul(t).mul(Math.PI).div(t.add(1));return s.add(r.log2()).clamp(0,s)}}const td=hi(ed);yr("SpecularMIPLevelNode",ed);const sd=new WeakMap;class rd extends kl{constructor(e=null){super(),this.envNode=e}setup(e){let t=this.envNode;if(t.isTextureNode&&!0!==t.value.isCubeTexture){let s=sd.get(t.value);if(void 0===s){const r=t.value,i=e.renderer,n=e.getCubeRenderTarget(512).fromEquirectangularTexture(i,r);s=Gl(n.texture),sd.set(t.value,s)}t=s}const s=qa("envMapIntensity","float",e.material),r=pn(t,id(Fn,Cu)).mul(s),i=pn(t,nd(wu)).mul(Math.PI).mul(s),n=cn(r);e.context.radiance.addAssign(n),e.context.iblIrradiance.addAssign(i);const o=e.context.lightingModel.clearcoatRadiance;if(o){const e=pn(t,id(Ln,Mu)).mul(s),r=cn(e);o.addAssign(r)}}}const id=(e,t)=>{let s=null,r=null;return{getUV:i=>{let n=null;return null===s&&(s=cl.negate().reflect(t),s=e.mul(e).mix(s,t).normalize(),s=s.transformDirection(cu)),i.isCubeTextureNode?n=s:i.isTextureNode&&(null===r&&(r=Jl(s)),n=r),n},getTextureLevel:()=>e,getTextureLevelAlgorithm:(e,t)=>td(e,t)}},nd=e=>{let t=null;return{getUV:s=>{let r=null;return s.isCubeTextureNode?r=e:s.isTextureNode&&(null===t&&(t=Jl(e),t=Ai(t.x,t.y.oneMinus())),r=t),r},getTextureLevel:e=>za(e)}};let od,ad;yr("EnvironmentNode",rd);class ud extends xr{constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===ud.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=rr.NONE;return this.scope!==ud.RESOLUTION&&this.scope!==ud.VIEWPORT||(e=rr.FRAME),this.updateType=e,e}update({renderer:e}){this.scope===ud.VIEWPORT?e.getViewport(ad):e.getDrawingBufferSize(od)}setup(){const e=this.scope;if(e===ud.COORDINATE)return;let t=null;if(e===ud.RESOLUTION)t=Qi(od||(od=new i));else if(e===ud.VIEWPORT)t=Qi(ad||(ad=new o));else{t=ld.div(dd);let s=t.x,r=t.y;/bottom/i.test(e)&&(r=r.oneMinus()),/right/i.test(e)&&(s=s.oneMinus()),t=Ai(s,r)}return t}generate(e){if(this.scope===ud.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const s=e.getNodeProperties(dd).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${s}.y - ${t}.y )`}return t}return super.generate(e)}}ud.COORDINATE="coordinate",ud.RESOLUTION="resolution",ud.VIEWPORT="viewport",ud.TOP_LEFT="topLeft",ud.BOTTOM_LEFT="bottomLeft",ud.TOP_RIGHT="topRight",ud.BOTTOM_RIGHT="bottomRight";const ld=pi(ud,ud.COORDINATE),dd=pi(ud,ud.RESOLUTION),cd=pi(ud,ud.VIEWPORT),hd=pi(ud,ud.TOP_LEFT),pd=pi(ud,ud.BOTTOM_LEFT),gd=pi(ud,ud.TOP_RIGHT),md=pi(ud,ud.BOTTOM_RIGHT);yr("ViewportNode",ud);const fd=new i;class Td extends $a{constructor(e=hd,t=null,s=null){null===s&&((s=new v).minFilter=S),super(s,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=rr.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(fd);const s=this.value;s.image.width===fd.width&&s.image.height===fd.height||(s.image.width=fd.width,s.image.height=fd.height,s.needsUpdate=!0);const r=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(s),s.generateMipmaps=r}clone(){return new this.constructor(this.uvNode,this.levelNode,this.value)}}const xd=hi(Td),yd=hi(Td,null,null,{generateMipmaps:!0});Pr("viewportTexture",xd),Pr("viewportMipTexture",yd),yr("ViewportTextureNode",Td);let bd=null;class Nd extends Td{constructor(e=hd,t=null){null===bd&&(bd=new b,bd.minFilter=A,bd.type=R,bd.format=E),super(e,t,bd)}}const _d=hi(Nd);Pr("viewportDepthTexture",_d),yr("ViewportDepthTextureNode",Nd);class vd extends xr{constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===vd.DEPTH_PIXEL?e.getFragDepth():super.generate(e)}setup(){const{scope:e}=this;let t=null;if(e===vd.DEPTH)t=Sd(dl.z,uu,lu);else if(e===vd.DEPTH_TEXTURE){const e=this.valueNode||_d(),s=Ed(e,uu,lu);t=Sd(s,uu,lu)}else e===vd.DEPTH_PIXEL&&null!==this.valueNode&&(t=Cd().assign(this.valueNode));return t}}const Sd=(e,t,s)=>e.add(t).div(t.sub(s)),Ad=(e,t,s)=>t.sub(s).mul(e).sub(t),Rd=(e,t,s)=>t.add(e).mul(s).div(t.sub(s).mul(e)),Ed=(e,t,s)=>t.mul(s).div(s.sub(t).mul(e).sub(s));vd.DEPTH="depth",vd.DEPTH_TEXTURE="depthTexture",vd.DEPTH_PIXEL="depthPixel";const Cd=hi(vd,vd.DEPTH_PIXEL),wd=pi(vd,vd.DEPTH),Md=hi(vd,vd.DEPTH_TEXTURE),Fd=pi(vd,vd.DEPTH_PIXEL);Fd.assign=e=>Cd(e),yr("ViewportDepthNode",vd);const Bd=new Map;class Od extends C{constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.fog=!0,this.lights=!0,this.normals=!0,this.colorSpaced=!0,this.lightsNode=null,this.envNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.depthNode=null,this.outputNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+lr(this)}build(e){this.setup(e)}setup(e){let t;if(e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),e.addFlow("vertex",e.removeStack()),e.addStack(),null===this.fragmentNode){!0===this.depthWrite&&this.setupDepth(e),!0===this.normals&&this.setupNormal(e),this.setupDiffuseColor(e),this.setupVariants(e);const s=this.setupLighting(e);t=this.setupOutput(e,Oi(s,Mn.a)),zn.assign(t),null!==this.outputNode&&(t=this.outputNode)}else t=this.setupOutput(e,this.fragmentNode);e.stack.outputNode=t,e.addFlow("fragment",e.removeStack())}setupDepth(e){const{renderer:t}=e;let s=this.depthNode;if(null===s&&!0===t.logarithmicDepthBuffer){s=pl().w.add(1).log2().mul(du).mul(.5)}null!==s&&Fd.assign(s).append()}setupPosition(e){const{object:t}=e,s=t.geometry;e.addStack(),(s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&Il(t).append(),!0===t.isSkinnedMesh&&Fl(t).append(),t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&!0===e.isAvailable("instance")&&bl(t).append(),null!==this.positionNode&&al.assign(this.positionNode);const r=pl();return e.context.vertex=e.removeStack(),e.context.mvp=r,r}setupDiffuseColor({geometry:e}){let t=this.colorNode?Oi(this.colorNode):Lu;!0===this.vertexColors&&e.hasAttribute("color")&&(t=Oi(t.xyz.mul(nn("color","vec3")),t.a)),Mn.assign(t);const s=this.opacityNode?Ni(this.opacityNode):Du;if(Mn.a.assign(Mn.a.mul(s)),null!==this.alphaTestNode||this.alphaTest>0){const e=null!==this.alphaTestNode?Ni(this.alphaTestNode):Ou;Mn.a.lessThanEqual(e).discard()}}setupVariants(){}setupNormal(){if(!0===this.flatShading){const e=dl.dFdx().cross(dl.dFdy()).normalize();Cu.assign(e)}else{const e=this.normalNode?wi(this.normalNode):$u;Cu.assign(e)}}getEnvNode(e){let t=null;return this.envNode?t=this.envNode:this.envMap?t=this.envMap.isCubeTexture?Gl(this.envMap):Ha(this.envMap):e.environmentNode&&(t=e.environmentNode),t}setupLights(e){const t=this.getEnvNode(e),s=[];t&&s.push(new rd(t)),e.material.aoMap&&s.push(new Yl(Ha(e.material.aoMap)));let r=this.lightsNode||e.lightsNode;return s.length>0&&(r=Xl([...r.lightNodes,...s])),r}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:r,emissiveNode:i}=this,n=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let o=Mn.rgb;if(n&&!1!==n.hasLight){const t=this.setupLightingModel(e);o=Ql(n,t,s,r)}else null!==s&&(o=wi(null!==r?va(o,s,r):s));return(i&&!0===i.isNode||t.emissive&&!0===t.emissive.isColor)&&(o=o.add(wi(i||Iu))),o}setupOutput(e,t){const s=e.renderer,r=e.toneMappingNode;if(!0===this.toneMapped&&r&&(t=Oi(r.context({color:t.rgb}),t.a)),!0===this.fog){const s=e.fogNode;s&&(t=Oi(s.mixAssign(t.rgb),t.a))}if(!0===this.colorSpaced){const e=s.currentColorSpace;e!==c&&e!==w&&(t=t.linearToColorSpace(e))}return t}setDefaultValues(e){for(const t in e){const s=e[t];void 0===this[t]&&(this[t]=s,s&&s.clone&&(this[t]=s.clone()))}Object.assign(this.defines,e.defines);const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const e in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,e)&&void 0!==t[e].get&&Object.defineProperty(this.constructor.prototype,e,t[e])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const s=M.prototype.toJSON.call(this,e),r=dr(this);s.inputNodes={};for(const{property:t,childNode:i}of r)s.inputNodes[t]=i.toJSON(e).uuid;function i(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(t){const t=i(e.textures),r=i(e.images),n=i(e.nodes);t.length>0&&(s.textures=t),r.length>0&&(s.images=r),n.length>0&&(s.nodes=n)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.depthNode=e.depthNode,this.outputNode=e.outputNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}static fromMaterial(e){if(!0===e.isNodeMaterial)return e;const t=Ud(e.type.replace("Material","NodeMaterial"));if(void 0===t)throw new Error(`NodeMaterial: Material "${e.type}" is not compatible.`);for(const s in e)t[s]=e[s];return t}}function Ld(e,t){if("function"!=typeof t||!e)throw new Error(`Node material ${e} is not a class`);Bd.has(e)||(Bd.set(e,t),t.type=e)}function Ud(e){const t=Bd.get(e);if(void 0!==t)return new t}Ld("NodeMaterial",Od);class Id{constructor(e,t=null){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class Dd extends Id{constructor(e,t=0){super(e,t),this.isFloatUniform=!0,this.boundary=4,this.itemSize=1}}class Pd extends Id{constructor(e,t=new i){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class Vd extends Id{constructor(e,t=new n){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class Gd extends Id{constructor(e,t=new o){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class kd extends Id{constructor(e,t=new r){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class zd extends Id{constructor(e,t=new a){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class $d extends Id{constructor(e,t=new u){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class Hd extends Dd{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Wd extends Pd{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class jd extends Vd{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Xd extends Gd{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class qd extends kd{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Yd extends zd{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Kd extends $d{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Qd extends xr{constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const t=this.ifNode.getNodeType(e);if(null!==this.elseNode){const s=this.elseNode.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(t))return s}return t}generate(e){const t=this.getNodeType(e),s={tempWrite:!1},{ifNode:r,elseNode:i}=this,n="void"!==r.getNodeType(e)||i&&"void"!==i.getNodeType(e),o=n?Cn(t).build(e):"",a=pn(this.condNode).build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${a} ) {\n\n`).addFlowTab();let u=pn(this.ifNode,s).build(e,t);if(u=n?o+" = "+u+";":u,e.removeFlowTab().addFlowCode(e.tab+"\t"+u+"\n\n"+e.tab+"}"),null!==i){e.addFlowCode(" else {\n\n").addFlowTab();let r=pn(i,s).build(e,t);r=o?o+" = "+r+";":r,e.removeFlowTab().addFlowCode(e.tab+"\t"+r+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return o}}const Zd=hi(Qd);Pr("cond",Zd),yr("CondNode",Qd);class Jd extends xr{constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}if(e,t){const s=new ui(t);return this._currentCond=Zd(e,s),this.add(this._currentCond)}elseif(e,t){const s=new ui(t),r=Zd(e,s);return this._currentCond.elseNode=r,this._currentCond=r,this}else(e){return this._currentCond.elseNode=new ui(e),this}build(e,...t){const s=Ti();fi(this);for(const t of this.nodes)t.build(e,"void");return fi(s),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}}const ec=hi(Jd);yr("StackNode",Jd);class tc extends F{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,r=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i=new B(5,5,5),n=Jl(ll),o=Ud("MeshBasicNodeMaterial");o.colorNode=Ha(t,n,0),o.side=O,o.blending=L;const a=new U(i,o),u=new I;u.add(a),t.minFilter===S&&(t.minFilter=D);return new P(1,10,this).update(e,u),t.minFilter=s,t.currentGenerateMipmaps=r,a.geometry.dispose(),a.material.dispose(),this}}const sc=new Us,rc=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),ic=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),nc=e=>(e=Number(e))+(e%1?"":".0");class oc{constructor(e,t,s,r=null,i=null){this.object=e,this.material=i||e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=r,this.nodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.hashNodes={},this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.toneMappingNode=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:[]},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:[],fragment:[],compute:[]},this.bindingsOffset={vertex:0,fragment:0,compute:0},this.bindingsArray=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=ec(),this.stacks=[],this.tab="\t",this.currentFunctionNode=null,this.context={keywords:new Rn,material:this.material},this.cache=new ln,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null}getRenderTarget(e,t,s){return new V(e,t,s)}getCubeRenderTarget(e,t){return new tc(e,t)}includes(e){return this.nodes.includes(e)}_getSharedBindings(e){const t=[];for(const s of e)if(!0===s.shared){const e=s.getNodes();let r=sc.get(e);void 0===r&&(sc.set(e,s),r=s),t.push(r)}else t.push(s);return t}getBindings(){let e=this.bindingsArray;if(null===e){const t=this.bindings;this.bindingsArray=e=this._getSharedBindings(null!==this.material?[...t.vertex,...t.fragment]:t.compute)}return e}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}buildUpdateNodes(){for(const e of this.nodes){const t=e.getUpdateType(),s=e.getUpdateBeforeType();t!==rr.NONE&&this.updateNodes.push(e.getSelf()),s!==rr.NONE&&this.updateBeforeNodes.push(e)}}get currentNode(){return this.chaining[this.chaining.length-1]}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}setCache(e){this.cache=e}getCache(){return this.cache}isAvailable(){return!1}getVertexIndex(){}getInstanceIndex(){}getFrontFacing(){}getFragCoord(){}isFlipY(){return!1}generateTexture(){}generateTextureLod(){}generateConst(e,t=null){if(null===t&&("float"===e||"int"===e||"uint"===e?t=0:"bool"===e?t=!1:"color"===e?t=new r:"vec2"===e?t=new i:"vec3"===e?t=new n:"vec4"===e&&(t=new o)),"float"===e)return nc(t);if("int"===e)return`${Math.round(t)}`;if("uint"===e)return t>=0?`${Math.round(t)}u`:"0u";if("bool"===e)return t?"true":"false";if("color"===e)return`${this.getType("vec3")}( ${nc(t.r)}, ${nc(t.g)}, ${nc(t.b)} )`;const s=this.getTypeLength(e),a=this.getComponentType(e),u=e=>this.generateConst(a,e);if(2===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)} )`;if(3===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)}, ${u(t.z)} )`;if(4===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)}, ${u(t.z)}, ${u(t.w)} )`;if(s>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(u).join(", ")} )`;if(s>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}generateMethod(e){return e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const s=this.attributes;for(const t of s)if(t.name===e)return t;const r=new Nn(e,t);return s.push(r),r}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"texture"===e||"cubeTexture"===e}needsColorSpaceToLinear(){return!1}getTextureEncodingFromMap(e){return this.getTextureColorSpaceFromMap(e)===h?G:k}getTextureColorSpaceFromMap(e){let t;return t=e&&e.isTexture?e.colorSpace:e&&e.isWebGLRenderTarget?e.texture.colorSpace:w,t}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;const s=rc.get(e);return("float"===t?"":t[0])+s}getTypeFromArray(e){return ic.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,r=e.itemSize,i=e.normalized;let n;return e instanceof z||!0===i||(n=this.getTypeFromArray(s)),this.getTypeFromLength(r,n)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return null!==s?Number(s[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){return this.stack=ec(this.stack),this.stacks.push(Ti()||this.stack),fi(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,fi(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,s=null){let r=(s=null===s?e.isGlobal(this)?this.globalCache:this.cache:s).getNodeData(e);return void 0===r&&(r={},s.setNodeData(e,r)),void 0===r[t]&&(r[t]={}),r[t]}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let r=s.bufferAttribute;if(void 0===r){const i=this.uniforms.index++;r=new Nn("nodeAttribute"+i,t,e),this.bufferAttributes.push(r),s.bufferAttribute=r}return r}getStructTypeFromNode(e,t=this.shaderStage){const s=this.getDataFromNode(e,t);if(void 0===s.structType){const r=this.structs.index++;e.name=`StructType${r}`,this.structs[t].push(e),s.structType=e}return e}getUniformFromNode(e,t,s=this.shaderStage,r=null){const i=this.getDataFromNode(e,s,this.globalCache);let n=i.uniform;if(void 0===n){const o=this.uniforms.index++;n=new _n(r||"nodeUniform"+o,t,e),this.uniforms[s].push(n),i.uniform=n}return n}getVarFromNode(e,t=null,s=e.getNodeType(this),r=this.shaderStage){const i=this.getDataFromNode(e,r);let n=i.variable;if(void 0===n){const e=this.vars[r]||(this.vars[r]=[]);null===t&&(t="nodeVar"+e.length),n=new vn(t,s),e.push(n),i.variable=n}return n}getVaryingFromNode(e,t=null,s=e.getNodeType(this)){const r=this.getDataFromNode(e,"any");let i=r.varying;if(void 0===i){const e=this.varyings,n=e.length;null===t&&(t="nodeVarying"+n),i=new Sn(t,s),e.push(i),r.varying=i}return i}getCodeFromNode(e,t,s=this.shaderStage){const r=this.getDataFromNode(e);let i=r.code;if(void 0===i){const e=this.codes[s]||(this.codes[s]=[]),n=e.length;i=new An("nodeCode"+n,t),e.push(i),r.code=i}return i}addLineFlowCode(e){return""===e||(e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}buildFunctionNode(e){const t=new Jn,s=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=s,t}flowShaderNode(e){const t=e.layout;let s;if(e.isArrayInput){s=[];for(const e of t.inputs)s.push(new jn(e.type,e.name))}else{s={};for(const e of t.inputs)s[e.name]=new jn(e.type,e.name)}e.layout=null;const r=e.call(s),i=this.flowStagesNode(r,t.type);return e.layout=t,i}flowStagesNode(e,t=null){const s=this.flow,r=this.vars,i=this.buildStage,n={code:""};this.flow=n,this.vars={};for(const s of or)this.setBuildStage(s),n.result=e.build(this,t);return n.vars=this.getVars(this.shaderStage),this.flow=s,this.vars=r,this.setBuildStage(i),n}getFunctionOperator(){return null}flowChildNode(e,t=null){const s=this.flow,r={code:""};return this.flow=r,r.result=e.build(this,t),this.flow=s,r}flowNodeFromShaderStage(e,t,s=null,r=null){const i=this.shaderStage;this.setShaderStage(e);const n=this.flowChildNode(t,s);return null!==r&&(n.code+=`${this.tab+r} = ${n.result};\n`),this.flowCode[e]=this.flowCode[e]+n.code,this.setShaderStage(i),n}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){}getVaryings(){}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];if(void 0!==s)for(const e of s)t+=`${this.getVar(e.type,e.name)}; `;return t}getUniforms(){}getCodes(e){const t=this.codes[e];let s="";if(void 0!==t)for(const e of t)s+=e.code+"\n";return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){}build(e=!0){const{object:t,material:s}=this;e&&(null!==s?Od.fromMaterial(s).build(this):this.addFlow("compute",t));for(const e of or){this.setBuildStage(e),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const t of ar){this.setShaderStage(t);const s=this.flowNodes[t];for(const t of s)"generate"===e?this.flowNode(t):t.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t)return new Hd(e);if("vec2"===t)return new Wd(e);if("vec3"===t)return new jd(e);if("vec4"===t)return new Xd(e);if("color"===t)return new qd(e);if("mat3"===t)return new Yd(e);if("mat4"===t)return new Kd(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e){return Ud(e)}getPrimitiveType(e){let t;return t="i"===e[0]?"int":"u"===e[0]?"uint":"float",t}format(e,t,s){if((t=this.getVectorType(t))===(s=this.getVectorType(s))||null===s||this.isReference(s))return e;const r=this.getTypeLength(t),i=this.getTypeLength(s);return r>4||i>4||0===i?e:r===i?`${this.getType(s)}( ${e} )`:r>i?this.format(`${e}.${"xyz".slice(0,i)}`,this.getTypeFromLength(i,this.getComponentType(t)),s):4===i&&r>1?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===r?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:(1===r&&i>1&&t[0]!==s[0]&&(e=`${this.getType(this.getPrimitiveType(s))}( ${e} )`),`${this.getType(s)}( ${e} )`)}getSignature(){return`// Three.js r${$} - NodeMaterial System\n`}}class ac{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return void 0===s&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this);if(t===rr.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(e)!==this.frameId&&(t.set(e,this.frameId),e.updateBefore(this))}else if(t===rr.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(e)!==this.renderId&&(t.set(e,this.renderId),e.updateBefore(this))}else t===rr.OBJECT&&e.updateBefore(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this);if(t===rr.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,s);t.get(e)!==this.frameId&&(t.set(e,this.frameId),e.update(this))}else if(t===rr.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,s);t.get(e)!==this.renderId&&(t.set(e,this.renderId),e.update(this))}else t===rr.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class uc{constructor(e,t,s=null,r="",i=!1){this.type=e,this.name=t,this.count=s,this.qualifier=r,this.isConst=i}}uc.isNodeFunctionInput=!0;class lc extends xr{constructor(e){super(),this.types=e,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}yr("StructTypeNode",lc);class dc extends xr{constructor(...e){super(),this.isOutputStructNode=!0,this.members=e}setup(e){super.setup(e);const t=this.members,s=[];for(let r=0;r<t.length;r++)s.push(t[r].getNodeType(e));this.nodeType=e.getStructTypeFromNode(new lc(s)).name}generate(e,t){const s=e.getVarFromNode(this);s.isOutputStructVar=!0;const r=e.getPropertyName(s),i=this.members,n=""!==r?r+".":"";for(let s=0;s<i.length;s++){const r=i[s].build(e,t);e.addLineFlowCode(`${n}m${s} = ${r}`)}return r}}const cc=hi(dc);yr("OutputStructNode",dc);class hc extends xr{constructor(e){super(),this.seedNode=e}setup(){const e=this.seedNode.uint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).float().mul(1/2**32)}}const pc=hi(hc);let gc;Pr("hash",pc),yr("HashNode",hc);class mc extends Qd{constructor(e){gc=gc||Ga("discard"),super(e,gc)}}const fc=hi(mc),Tc=e=>fc(e).append();Pr("discard",Tc),yr("DiscardNode",mc);class xc extends xr{constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let s=this._candidateFnCall;if(null===s){let r=null,i=-1;for(const s of this.functionNodes){const n=s.shaderNode.layout;if(null===n)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const o=n.inputs;if(t.length===o.length){let n=0;for(let s=0;s<t.length;s++){const r=t[s],i=o[s];r.getNodeType(e)===i.type?n++:n=0}n>i&&(r=s,i=n)}}this._candidateFnCall=s=r(...t)}return s}}const yc=hi(xc),bc=e=>(...t)=>yc(e,...t);yr("FunctionOverloadingNode",xc);class Nc extends xr{constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt()+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const s={};for(let e=0,t=this.params.length-1;e<t;e++){const t=this.params[e],r=!0!==t.isNode&&t.name||this.getVarName(e),i=!0!==t.isNode&&t.type||"int";s[r]=Ga(r,i)}return t.returnsNode=this.params[this.params.length-1](s,e.addStack(),e),t.stackNode=e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,r=t.stackNode;for(let t=0,r=s.length-1;t<r;t++){const r=s[t];let i=null,n=null,o=null,a=null,u=null,l=null;r.isNode?(a="int",o=this.getVarName(t),i="0",n=r.build(e,a),u="<"):(a=r.type||"int",o=r.name||this.getVarName(t),i=r.start,n=r.end,u=r.condition,l=r.update,"number"==typeof i?i=i.toString():i&&i.isNode&&(i=i.build(e,a)),"number"==typeof n?n=n.toString():n&&n.isNode&&(n=n.build(e,a)),void 0!==i&&void 0===n?(i+=" - 1",n="0",u=">="):void 0!==n&&void 0===i&&(i="0",u="<"),void 0===u&&(u=Number(i)>Number(n)?">=":"<"));const d={start:i,end:n,condition:u},c=d.start,h=d.end;let p="",g="",m="";l||(l="int"===a?u.includes("<")?"++":"--":u.includes("<")?"+= 1":"-= 1"),p+=e.getVar(a,o)+" = "+c,g+=o+" "+u+" "+h,m+=o+" "+l;const f=`for ( ${p}; ${g}; ${m} )`;e.addFlowCode((0===t?"\n":"")+e.tab+f+" {\n\n").addFlowTab()}const i=pn(r,{tempWrite:!1}).build(e,"void"),n=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+i);for(let t=0,s=this.params.length-1;t<s;t++)e.addFlowCode((0===t?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),n}}const _c=(...e)=>li(new Nc(ci(e,"int"))).append();Pr("loop",((e,...t)=>an(e,_c(...t)))),yr("LoopNode",Nc);class vc extends Mr{constructor(){super("vec2")}setup(){const e=wi(cl.z,0,cl.x.negate()).normalize(),t=cl.cross(e);return Ai(e.dot(Cu),t.dot(Cu)).mul(.495).add(.5)}}const Sc=pi(vc);yr("MatcapUVNode",vc);class Ac extends Ki{constructor(e=Ac.LOCAL,t=1,s=0){super(s),this.scope=e,this.scale=t,this.updateType=rr.FRAME}update(e){const t=this.scope,s=this.scale;t===Ac.LOCAL?this.value+=e.deltaTime*s:t===Ac.DELTA?this.value=e.deltaTime*s:t===Ac.FRAME?this.value=e.frameId:this.value=e.time*s}serialize(e){super.serialize(e),e.scope=this.scope,e.scale=this.scale}deserialize(e){super.deserialize(e),this.scope=e.scope,this.scale=e.scale}}Ac.LOCAL="local",Ac.GLOBAL="global",Ac.DELTA="delta",Ac.FRAME="frame";const Rc=(e,t=0)=>li(new Ac(Ac.LOCAL,e,t)),Ec=(e,t=0)=>li(new Ac(Ac.GLOBAL,e,t)),Cc=(e,t=0)=>li(new Ac(Ac.DELTA,e,t)),wc=pi(Ac,Ac.FRAME).uint();yr("TimerNode",Ac);class Mc extends xr{constructor(e=Mc.SINE,t=Rc()){super(),this.method=e,this.timeNode=t}getNodeType(e){return this.timeNode.getNodeType(e)}setup(){const e=this.method,t=li(this.timeNode);let s=null;return e===Mc.SINE?s=t.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5):e===Mc.SQUARE?s=t.fract().round():e===Mc.TRIANGLE?s=t.add(.5).fract().mul(2).sub(1).abs():e===Mc.SAWTOOTH&&(s=t.fract()),s}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Mc.SINE="sine",Mc.SQUARE="square",Mc.TRIANGLE="triangle",Mc.SAWTOOTH="sawtooth";const Fc=hi(Mc,Mc.SINE),Bc=hi(Mc,Mc.SQUARE),Oc=hi(Mc,Mc.TRIANGLE),Lc=hi(Mc,Mc.SAWTOOTH);yr("OscNode",Mc);class Uc extends Mr{constructor(e,t){super(),this.scope=e,this.node=t}getNodeType(e){return this.node.getNodeType(e)}setup(){const{scope:e,node:t}=this;let s=null;return e===Uc.DIRECTION_TO_COLOR?s=t.mul(.5).add(.5):e===Uc.COLOR_TO_DIRECTION&&(s=t.mul(2).sub(1)),s}}Uc.DIRECTION_TO_COLOR="directionToColor",Uc.COLOR_TO_DIRECTION="colorToDirection";const Ic=hi(Uc,Uc.DIRECTION_TO_COLOR),Dc=hi(Uc,Uc.COLOR_TO_DIRECTION);Pr("directionToColor",Ic),Pr("colorToDirection",Dc),yr("PackingNode",Uc);class Pc extends xr{constructor(e,t,s,r=Ni(0),i=Ni(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=r,this.outHighNode=i,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:r,outHighNode:i,doClamp:n}=this;let o=e.sub(t).div(s.sub(t));return!0===n&&(o=o.clamp()),o.mul(i.sub(r)).add(r)}}const Vc=hi(Pc,null,null,{doClamp:!1}),Gc=hi(Pc);Pr("remap",Vc),Pr("remapClamp",Gc),yr("RemapNode",Pc);class kc extends Mr{constructor(e,t,s=Ai(.5)){super("vec2"),this.uvNode=e,this.rotationNode=t,this.centerNode=s}setup(){const{uvNode:e,rotationNode:t,centerNode:s}=this,r=t.cos(),i=t.sin(),n=e.sub(s);return Ai(Ai(r,i).dot(n),Ai(i.negate(),r).dot(n)).add(s)}}const zc=hi(kc);Pr("rotateUV",zc),yr("RotateUVNode",kc);class $c extends xr{constructor(e,t=io(),s=Ni(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:r,height:i}=s,n=e.mod(r.mul(i)).floor(),o=n.mod(r),a=i.sub(n.add(1).div(r).ceil()),u=s.reciprocal(),l=Ai(o,a);return t.add(l).mul(u)}}const Hc=hi($c);yr("SpriteSheetUVNode",$c);class Wc extends xr{constructor(e,t=null,s=null,r=Ni(1),i=al,n=Au){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=s,this.scaleNode=r,this.positionNode=i,this.normalNode=n}setup(){const{textureXNode:e,textureYNode:t,textureZNode:s,scaleNode:r,positionNode:i,normalNode:n}=this;let o=n.abs().normalize();o=o.div(o.dot(wi(1)));const a=i.yz.mul(r),u=i.zx.mul(r),l=i.xy.mul(r),d=e.value,c=null!==t?t.value:d,h=null!==s?s.value:d,p=Ha(d,a).mul(o.x),g=Ha(c,u).mul(o.y),m=Ha(h,l).mul(o.z);return uo(p,g,m)}}const jc=hi(Wc),Xc=(...e)=>jc(...e);Pr("triplanarTexture",Xc),yr("TriplanarTexturesNode",Wc);class qc extends xr{constructor(e=qc.LOCAL){super("vec3"),this.scope=e}getHash(){return`bitangent-${this.scope}`}generate(e){const t=this.scope;let s;t===qc.GEOMETRY?s=Su.cross(Sl):t===qc.LOCAL?s=Au.cross(Al):t===qc.VIEW?s=Ru.cross(Rl):t===qc.WORLD&&(s=Eu.cross(El));const r=s.mul(Sl.w).xyz;return ko(sn(r)).build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}qc.GEOMETRY="geometry",qc.LOCAL="local",qc.VIEW="view",qc.WORLD="world";const Yc=pi(qc,qc.GEOMETRY),Kc=pi(qc,qc.LOCAL),Qc=pi(qc,qc.VIEW),Zc=pi(qc,qc.WORLD),Jc=ko(Cu.cross(Cl).mul(Sl.w)),eh=ko(Jc.transformDirection(cu));yr("BitangentNode",qc);class th extends rn{constructor(e=0){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e);let s;return s=!0===e.hasGeometryAttribute(t)?super.generate(e):e.generateConst(this.nodeType,new o(1,1,1,1)),s}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const sh=(...e)=>li(new th(...e));yr("VertexColorNode",th);const rh=1/6,ih=e=>co(rh,co(e,co(e,e.negate().add(3)).sub(3)).add(1)),nh=e=>co(rh,co(e,co(e,co(3,e).sub(6))).add(4)),oh=e=>co(rh,co(e,co(e,co(-3,e).add(3)).add(3)).add(1)),ah=e=>co(rh,Ta(e,3)),uh=e=>ih(e).add(nh(e)),lh=e=>oh(e).add(ah(e)),dh=e=>uo(-1,nh(e).div(ih(e).add(nh(e)))),ch=e=>uo(1,ah(e).div(oh(e).add(ah(e)))),hh=(e,t,s)=>{const r=e.uvNode,i=co(r,t.zw).add(.5),n=Vo(i),o=zo(i),a=uh(o.x),u=lh(o.x),l=dh(o.x),d=ch(o.x),c=dh(o.y),h=ch(o.y),p=Ai(n.x.add(l),n.y.add(c)).sub(.5).mul(t.xy),g=Ai(n.x.add(d),n.y.add(c)).sub(.5).mul(t.xy),m=Ai(n.x.add(l),n.y.add(h)).sub(.5).mul(t.xy),f=Ai(n.x.add(d),n.y.add(h)).sub(.5).mul(t.xy),T=uh(o.y).mul(uo(a.mul(e.uv(p).level(s)),u.mul(e.uv(g).level(s)))),x=lh(o.y).mul(uo(a.mul(e.uv(m).level(s)),u.mul(e.uv(f).level(s))));return T.add(x)};class ph extends Mr{constructor(e,t=Ni(3)){super("vec4"),this.textureNode=e,this.blurNode=t}setup(){return((e,t)=>{const s=Ai(e.size(_i(t))),r=Ai(e.size(_i(t.add(1)))),i=ho(1,s),n=ho(1,r),o=hh(e,Oi(i,s),Vo(t)),a=hh(e,Oi(n,r),Go(t));return zo(t).mix(o,a)})(this.textureNode,this.blurNode)}}const gh=hi(ph);Pr("bicubic",gh),yr("TextureBicubicNode",ph);class mh extends xr{constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const fh=pi(mh);yr("PointUVNode",mh);class Th extends xr{constructor(e=Th.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=null!==this.scene?this.scene:e.scene;let r;return t===Th.BACKGROUND_BLURRINESS?r=qa("backgroundBlurriness","float",s):t===Th.BACKGROUND_INTENSITY&&(r=qa("backgroundIntensity","float",s)),r}}Th.BACKGROUND_BLURRINESS="backgroundBlurriness",Th.BACKGROUND_INTENSITY="backgroundIntensity";const xh=pi(Th,Th.BACKGROUND_BLURRINESS),yh=pi(Th,Th.BACKGROUND_INTENSITY);yr("SceneNode",Th);class bh extends Nl{constructor(e,t,s=0){super(e,t,s),this.isStorageBufferNode=!0}getInputType(){return"storageBuffer"}}const Nh=(e,t,s)=>li(new bh(e,t,s));yr("StorageBufferNode",bh);class _h extends $a{constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStoreTextureNode=!0}getNodeType(){return"void"}}const vh=hi(_h);yr("TextureStoreNode",_h);class Sh extends Xa{constructor(e,t,s=null){super(e,t,s),this.userData=s}update(e){this.reference=null!==this.userData?this.userData:e.object.userData,super.update(e)}}const Ah=(e,t,s)=>li(new Sh(e,t,s));yr("UserDataNode",Sh);const Rh=mi((({base:e,blend:t})=>{const s=s=>t[s].lessThan(wo).cond(t[s],e[s].oneMinus().div(t[s]).oneMinus().max(0));return wi(s("x"),s("y"),s("z"))})),Eh=mi((({base:e,blend:t})=>{const s=s=>t[s].equal(1).cond(t[s],e[s].div(t[s].oneMinus()).max(0));return wi(s("x"),s("y"),s("z"))})),Ch=mi((({base:e,blend:t})=>{const s=s=>e[s].oneMinus().mul(t[s].oneMinus()).oneMinus();return wi(s("x"),s("y"),s("z"))})),wh=mi((({base:e,blend:t})=>{const s=s=>e[s].lessThan(.5).cond(e[s].mul(t[s],2),e[s].oneMinus().mul(t[s].oneMinus()).oneMinus());return wi(s("x"),s("y"),s("z"))}));class Mh extends Mr{constructor(e,t,s){super(),this.blendMode=e,this.baseNode=t,this.blendNode=s}setup(){const{blendMode:e,baseNode:t,blendNode:s}=this,r={base:t,blend:s};let i=null;return e===Mh.BURN?i=Rh(r):e===Mh.DODGE?i=Eh(r):e===Mh.SCREEN?i=Ch(r):e===Mh.OVERLAY&&(i=wh(r)),i}}Mh.BURN="burn",Mh.DODGE="dodge",Mh.SCREEN="screen",Mh.OVERLAY="overlay";const Fh=hi(Mh,Mh.BURN),Bh=hi(Mh,Mh.DODGE),Oh=hi(Mh,Mh.OVERLAY),Lh=hi(Mh,Mh.SCREEN);Pr("burn",Fh),Pr("dodge",Bh),Pr("overlay",Oh),Pr("screen",Lh),yr("BlendModeNode",Mh);class Uh extends xr{constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){return e.getFrontFacing()}}const Ih=pi(Uh),Dh=Ni(Ih).mul(2).sub(1);yr("FrontFacingNode",Uh);const Ph=mi((({textureNode:e,bumpScale:t})=>{let s=e;if(!0!==s.isTextureNode&&s.traverse((e=>{!0===e.isTextureNode&&(s=e)})),!0!==s.isTextureNode)throw new Error("THREE.TSL: dHdxy_fwd() requires a TextureNode.");const r=Ni(e),i=s.uvNode||io(),n=t=>e.cache().context({getUV:()=>t,forceUVContext:!0});return Ai(Ni(n(i.add(i.dFdx()))).sub(r),Ni(n(i.add(i.dFdy()))).sub(r)).mul(t)})),Vh=mi((e=>{const{surf_pos:t,surf_norm:s,dHdxy:r}=e,i=t.dFdx().normalize(),n=s,o=t.dFdy().normalize().cross(n),a=n.cross(i),u=i.dot(o).mul(Dh),l=u.sign().mul(r.x.mul(o).add(r.y.mul(a)));return u.abs().mul(s).sub(l).normalize()}));class Gh extends Mr{constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=Ph({textureNode:this.textureNode,bumpScale:e});return Vh({surf_pos:dl,surf_norm:Ru,dHdxy:t})}}const kh=hi(Gh);Pr("bumpMap",kh),yr("BumpMapNode",Gh);const zh=mi((({color:e,adjustment:t})=>t.mix(Kh(e.rgb),e.rgb))),$h=mi((({color:e,adjustment:t})=>{const s=uo(e.r,e.g,e.b).div(3),r=e.r.max(e.g.max(e.b)),i=r.sub(s).mul(t).mul(-3);return va(e.rgb,r,i)})),Hh=mi((({color:e,adjustment:t})=>{const s=wi(.57735,.57735,.57735),r=t.cos();return wi(e.rgb.mul(r).add(s.cross(e.rgb).mul(t.sin()).add(s.mul(ma(s,e.rgb).mul(r.oneMinus())))))}));class Wh extends Mr{constructor(e,t,s=Ni(1)){super("vec3"),this.method=e,this.colorNode=t,this.adjustmentNode=s}setup(){const{method:e,colorNode:t,adjustmentNode:s}=this,r={color:t,adjustment:s};let i=null;return e===Wh.SATURATION?i=zh(r):e===Wh.VIBRANCE?i=$h(r):e===Wh.HUE&&(i=Hh(r)),i}}Wh.SATURATION="saturation",Wh.VIBRANCE="vibrance",Wh.HUE="hue";const jh=hi(Wh,Wh.SATURATION),Xh=hi(Wh,Wh.VIBRANCE),qh=hi(Wh,Wh.HUE),Yh=wi(.2125,.7154,.0721),Kh=(e,t=Yh)=>ma(e,t);Pr("saturation",jh),Pr("vibrance",Xh),Pr("hue",qh),yr("ColorAdjustmentNode",Wh);const Qh=mi((e=>{const{eye_pos:t,surf_norm:s,mapN:r,uv:i}=e,n=t.dFdx(),o=t.dFdy(),a=i.dFdx(),u=i.dFdy(),l=s,d=o.cross(l),c=l.cross(n),h=d.mul(a.x).add(c.mul(u.x)),p=d.mul(a.y).add(c.mul(u.y)),g=h.dot(h).max(p.dot(p)),m=Dh.mul(g.inverseSqrt());return uo(h.mul(r.x,m),p.mul(r.y,m),l.mul(r.z)).normalize()}));class Zh extends Mr{constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=H}setup(e){const{normalMapType:t,scaleNode:s}=this;let r=this.node.mul(2).sub(1);null!==s&&(r=wi(r.xy.mul(s),r.z));let i=null;if(t===W)i=xu.mul(r).normalize();else if(t===H){i=!0===e.hasGeometryAttribute("tangent")?ep.mul(r).normalize():Qh({eye_pos:dl,surf_norm:Ru,mapN:r,uv:io()})}return i}}const Jh=hi(Zh),ep=Di(Rl,Qc,Ru);Pr("normalMap",Jh),yr("NormalMapNode",Zh);class tp extends Mr{constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const sp=hi(tp);Pr("posterize",sp),yr("PosterizeNode",tp);const rp=mi((({color:e,exposure:t})=>e.mul(t).clamp())),ip=mi((({color:e,exposure:t})=>(e=e.mul(t)).div(e.add(1)).clamp())),np=mi((({color:e,exposure:t})=>{const s=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),r=e.mul(e.mul(6.2).add(1.7)).add(.06);return s.div(r).pow(2.2)})),op=mi((({color:e})=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),s=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(s)})),ap=mi((({color:e,exposure:t})=>{const s=Di(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),r=Di(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=s.mul(e),e=op({color:e}),(e=r.mul(e)).clamp()})),up={[X]:rp,[q]:ip,[Y]:np,[K]:ap};class lp extends Mr{constructor(e=j,t=Ni(1),s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}getCacheKey(){let e=super.getCacheKey();return e="{toneMapping:"+this.toneMapping+",nodes:"+e+"}",e}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===j)return t;const r={exposure:this.exposureNode,color:t},i=up[s];let n=null;return n=i?i(r):t,n}}const dp=(e,t,s)=>li(new lp(e,li(t),li(s)));yr("ToneMappingNode",lp);let cp=null;class hp extends Td{constructor(e=hd,t=null){null===cp&&(cp=new v),super(e,t,cp)}}const pp=hi(hp);Pr("viewportSharedTexture",pp),yr("ViewportSharedTextureNode",hp);const gp=new Q(-1,1,1,-1,0,1);const mp=new class extends Z{constructor(e=!1){super();const t=!1===e?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new J([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new J(t,2))}};class fp{constructor(e=null){this._mesh=new U(mp,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,gp)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}const Tp=new fp,xp=new fp;class yp extends Mr{constructor(e,t=2){super(e),this.textureNode=e,this.sigma=t,this.directionNode=Ai(1),this._invSize=Qi(new i),this._passDirection=Qi(new i),this._horizontalRT=new V,this._horizontalRT.texture.name="GaussianBlurNode.horizontal",this._verticalRT=new V,this._verticalRT.texture.name="GaussianBlurNode.vertical",this.updateBeforeType=rr.RENDER,this.resolution=new i(1,1)}setSize(e,t){e=Math.max(Math.round(e*this.resolution.x),1),t=Math.max(Math.round(t*this.resolution.y),1),this._invSize.value.set(1/e,1/t),this._horizontalRT.setSize(e,t),this._verticalRT.setSize(e,t)}updateBefore(e){const{renderer:t}=e,s=this.textureNode,r=s.value,i=t.getRenderTarget(),n=s.value;Tp.material=this._material,xp.material=this._material,this.setSize(r.image.width,r.image.height),t.setRenderTarget(this._horizontalRT),this._passDirection.value.set(1,0),Tp.render(t),s.value=this._horizontalRT.texture,t.setRenderTarget(this._verticalRT),this._passDirection.value.set(0,1),xp.render(t),t.setRenderTarget(i),s.value=n}setup(e){const t=this.textureNode;if(!0!==t.isTextureNode)return Oi();const s=t.uvNode||io(),r=e=>t.cache().context({getUV:()=>e,forceUVContext:!0}),i=mi((()=>{const e=3+2*this.sigma,t=this._getCoefficients(e),i=this._invSize,n=Ai(this.directionNode).mul(this._passDirection),o=Ni(t[0]).toVar(),a=Oi(r(s).mul(o)).toVar();for(let u=1;u<e;u++){const e=Ni(u),l=Ni(t[u]),d=Ai(n.mul(i.mul(e))).toVar(),c=Oi(r(s.add(d))),h=Oi(r(s.sub(d)));a.addAssign(c.add(h).mul(l)),o.addAssign(co(2,l))}return a.div(o)}));(this._material||(this._material=e.createNodeMaterial("MeshBasicNodeMaterial"))).fragmentNode=i();return e.getNodeProperties(this).textureNode=t,Ha(this._verticalRT.texture)}_getCoefficients(e){const t=[];for(let s=0;s<e;s++)t.push(.39894*Math.exp(-.5*s*s/(e*e))/e);return t}}const bp=(e,t)=>li(new yp(li(e),t));Pr("gaussianBlur",bp);const Np=new fp;class _p extends Mr{constructor(e,t=.96){super(e),this.textureNode=e,this.textureNodeOld=Ha(),this.damp=Qi(t),this._compRT=new V,this._compRT.texture.name="AfterImageNode.comp",this._oldRT=new V,this._oldRT.texture.name="AfterImageNode.old",this.updateBeforeType=rr.RENDER}setSize(e,t){this._compRT.setSize(e,t),this._oldRT.setSize(e,t)}updateBefore(e){const{renderer:t}=e,s=this.textureNode,r=t.getRenderTarget(),i=s.value;this.textureNodeOld.value=this._oldRT.texture,t.setRenderTarget(this._compRT),Np.render(t);const n=this._oldRT;this._oldRT=this._compRT,this._compRT=n;const o=i;this.setSize(o.image.width,o.image.height),t.setRenderTarget(r),s.value=i}setup(e){const t=this.textureNode,s=this.textureNodeOld;if(!0!==t.isTextureNode)return Oi();const r=t.uvNode||io();s.uvNode=r;const i=mi((([e,t])=>{const s=Ni(t).toVar(),r=Oi(e).toVar();return la(Ko(r.sub(s)),0)})),n=mi((()=>{const e=Oi(s),n=Oi((e=>t.cache().context({getUV:()=>e,forceUVContext:!0}))(r));return e.mulAssign(this.damp.mul(i(e,.1))),la(n,e)})),o=this._materialComposed||(this._materialComposed=e.createNodeMaterial("MeshBasicNodeMaterial"));o.fragmentNode=n(),Np.material=o;return e.getNodeProperties(this).textureNode=t,Ha(this._compRT.texture)}}const vp=(e,t)=>li(new _p(li(e),t));Pr("afterImage",vp);class Sp extends $a{constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class Ap extends Mr{constructor(e,t,s){super("vec4"),this.scope=e,this.scene=t,this.camera=s,this._pixelRatio=1,this._width=1,this._height=1;const r=new b;r.isRenderTargetTexture=!0,r.type=x,r.name="PostProcessingDepth";const i=new V(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ee});i.texture.name="PostProcessing",i.depthTexture=r,this.renderTarget=i,this.updateBeforeType=rr.FRAME,this._textureNode=li(new Sp(this,i.texture)),this._depthTextureNode=li(new Sp(this,r)),this._depthNode=null,this._cameraNear=Qi(0),this._cameraFar=Qi(0),this.isPassNode=!0}isGlobal(){return!0}getTextureNode(){return this._textureNode}getTextureDepthNode(){return this._depthTextureNode}getDepthNode(){if(null===this._depthNode){const e=this._cameraNear,t=this._cameraFar;this._depthNode=Sd(Ed(this._depthTextureNode,e,t),e,t)}return this._depthNode}setup(){return this.scope===Ap.COLOR?this.getTextureNode():this.getDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:s,camera:r}=this;this._pixelRatio=t.getPixelRatio();const n=t.getSize(new i);this.setSize(n.width,n.height);const o=t.toneMapping,a=t.toneMappingNode,u=t.getRenderTarget();this._cameraNear.value=r.near,this._cameraFar.value=r.far,t.toneMapping=j,t.toneMappingNode=null,t.setRenderTarget(this.renderTarget),t.render(s,r),t.toneMapping=o,t.toneMappingNode=a,t.setRenderTarget(u)}setSize(e,t){this._width=e,this._height=t;const s=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget.setSize(s,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}Ap.COLOR="color",Ap.DEPTH="depth";const Rp=(e,t)=>li(new Ap(Ap.COLOR,e,t)),Ep=(e,t)=>li(new Ap(Ap.DEPTH,e,t));yr("PassNode",Ap);class Cp extends Mr{constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],s=this.functionNode,r=s.getInputs(e),i=this.parameters;if(Array.isArray(i))for(let s=0;s<i.length;s++){const n=r[s],o=i[s];t.push(o.build(e,n.type))}else for(const s of r){const r=i[s.name];if(void 0===r)throw new Error(`FunctionCallNode: Input '${s.name}' not found in FunctionNode.`);t.push(r.build(e,s.type))}return`${s.build(e,"property")}( ${t.join(", ")} )`}}const wp=(e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?ci(t):di(t[0]),li(new Cp(li(e),t)));Pr("call",wp),yr("FunctionCallNode",Cp);class Mp extends xr{constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new l,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:Ni()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=pr(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?gr(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const Fp=hi(Mp);Pr("scriptableValue",Fp),yr("ScriptableValueNode",Mp);class Bp extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(null!==t){const r=t(...s);return this.set(e,r),r}}}class Op{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const Lp=new Bp;class Up extends xr{constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new Bp,this._output=Fp(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return void 0===s[e]?s[e]=Fp(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):void 0===s[e]?(s[e]=Fp(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const s=this.getObject()[e];if("function"==typeof s)return s(...t)}async callAsync(e,...t){const s=this.getObject()[e];if("function"==typeof s)return"AsyncFunction"===s.constructor.name?await s(...t):s(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new Op(this),t=Lp.get("THREE"),s=Lp.get("TSL"),r=this.getMethod(this.codeNode),i=[e,this._local,Lp,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,s];this._object=r(...i);const n=this._object.layout;if(n&&(!1===n.cache&&this._local.clear(),this._output.outputType=n.outputType||null,Array.isArray(n.elements)))for(const e of n.elements){const t=e.id||e.name;e.inputType&&(void 0===this.getParameter(t)&&this.setParameter(t,null),this.getParameter(t).inputType=e.inputType),e.outputType&&(void 0===this.getOutput(t)&&this.setOutput(t,null),this.getOutput(t).outputType=e.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const e in this.parameters){let t=this.parameters[e];t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:Ni()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",s="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],s),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const Ip=hi(Up);Pr("scriptable",Ip),yr("ScriptableNode",Up);class Dp extends xr{constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}mixAssign(e){return this.mix(e,this.colorNode)}setup(){return this.factorNode}}const Pp=hi(Dp);Pr("fog",Pp),yr("FogNode",Dp);class Vp extends Dp{constructor(e,t,s){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=s}setup(){return Ea(this.nearNode,this.farNode,dl.z.negate())}}const Gp=hi(Vp);Pr("rangeFog",Gp),yr("FogRangeNode",Vp);class kp extends Dp{constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(){const e=dl.z.negate(),t=this.densityNode;return t.mul(t,e,e).negate().exp().oneMinus()}}const zp=hi(kp);Pr("densityFog",zp),yr("FogExp2Node",kp);let $p=null,Hp=null;class Wp extends xr{constructor(e=Ni(),t=Ni()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(cr(this.minNode.value)),s=e.getTypeLength(cr(this.maxNode.value));return t>s?t:s}getNodeType(e){return!0===e.object.isInstancedMesh?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(!0===t.isInstancedMesh){const r=this.minNode.value,i=this.maxNode.value,n=e.getTypeLength(cr(r)),a=e.getTypeLength(cr(i));$p=$p||new o,Hp=Hp||new o,$p.setScalar(0),Hp.setScalar(0),1===n?$p.setScalar(r):r.isColor?$p.set(r.r,r.g,r.b):$p.set(r.x,r.y,r.z||0,r.w||0),1===a?Hp.setScalar(i):i.isColor?Hp.set(i.r,i.g,i.b):Hp.set(i.x,i.y,i.z||0,i.w||0);const u=4,l=u*t.count,c=new Float32Array(l);for(let e=0;e<l;e++){const t=e%u,s=$p.getComponent(t),r=Hp.getComponent(t);c[e]=d.lerp(s,r,Math.random())}const h=this.getNodeType(e);s=_l(c,"vec4",t.count).element(Tn).convert(h)}else s=Ni(0);return s}}const jp=hi(Wp);yr("RangeNode",Wp);class Xp extends xr{constructor(e,t,s=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=s,this.dispatchCount=0,this.version=1,this.updateBeforeType=rr.OBJECT,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let s=t[0];for(let e=1;e<t.length;e++)s*=t[e];this.dispatchCount=Math.ceil(e/s)}onInit(){}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if("compute"===t){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t)}}}const qp=(e,t,s)=>li(new Xp(li(e),t,s));Pr("compute",qp),yr("ComputeNode",Xp);class Yp extends xr{constructor(e=Yp.TARGET_DIRECTION,t=null){super(),this.scope=e,this.light=t}setup(){const{scope:e,light:t}=this;let s=null;return e===Yp.TARGET_DIRECTION&&(s=cu.transformDirection(ru(t).sub(ru(t.target)))),s}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Yp.TARGET_DIRECTION="targetDirection";const Kp=hi(Yp,Yp.TARGET_DIRECTION);yr("LightNode",Yp);const Qp=mi((e=>{const{lightDistance:t,cutoffDistance:s,decayExponent:r}=e,i=t.pow(r).max(.01).reciprocal();return s.greaterThan(0).cond(i.mul(t.div(s).pow4().oneMinus().clamp().pow2()),i)}));class Zp extends $l{constructor(e=null){super(e),this.cutoffDistanceNode=Qi(0),this.decayExponentNode=Qi(0)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setup(e){const{colorNode:t,cutoffDistanceNode:s,decayExponentNode:r,light:i}=this,n=e.context.lightingModel,o=nu(i).sub(dl),a=o.normalize(),u=o.length(),l=Qp({lightDistance:u,cutoffDistance:s,decayExponent:r}),d=t.mul(l),c=e.context.reflectedLight;n.direct({lightDirection:a,lightColor:d,reflectedLight:c},e.stack,e)}}yr("PointLightNode",Zp),ql(te,Zp);class Jp extends $l{constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,s=this.colorNode,r=Kp(this.light),i=e.context.reflectedLight;t.direct({lightDirection:r,lightColor:s,reflectedLight:i},e.stack,e)}}yr("DirectionalLightNode",Jp),ql(se,Jp);class eg extends $l{constructor(e=null){super(e),this.coneCosNode=Qi(0),this.penumbraCosNode=Qi(0),this.cutoffDistanceNode=Qi(0),this.decayExponentNode=Qi(0)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:s}=this;return Ea(t,s,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:s,cutoffDistanceNode:r,decayExponentNode:i,light:n}=this,o=nu(n).sub(dl),a=o.normalize(),u=a.dot(Kp(n)),l=this.getSpotAttenuation(u),d=o.length(),c=Qp({lightDistance:d,cutoffDistance:r,decayExponent:i}),h=s.mul(l).mul(c),p=e.context.reflectedLight;t.direct({lightDirection:a,lightColor:h,reflectedLight:p},e.stack,e)}}yr("SpotLightNode",eg),ql(re,eg);class tg extends eg{getSpotAttenuation(e){const t=this.light.iesMap;let s=null;if(t&&!0===t.isTexture){const r=e.acos().mul(1/Math.PI);s=Ha(t,Ai(r,0),0).r}else s=super.getSpotAttenuation(e);return s}}yr("IESSpotLightNode",tg),ql(class extends re{constructor(e,t,s,r,i,n){super(e,t,s,r,i,n),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}},tg);class sg extends $l{constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}yr("AmbientLightNode",sg),ql(ie,sg);class rg extends $l{constructor(e=null){super(e),this.lightPositionNode=ru(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Qi(new r)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:r}=this,i=Ru.dot(r).mul(.5).add(.5),n=va(s,t,i);e.context.irradiance.addAssign(n)}}yr("HemisphereLightNode",rg),ql(ne,rg);const ig=mi((e=>{const t=e.uv.mul(2),s=t.x.floor(),r=t.y.floor();return s.add(r).mod(2).sign()}));class ng extends Mr{constructor(e=io()){super("float"),this.uvNode=e}setup(){return ig({uv:this.uvNode})}}const og=hi(ng);Pr("checker",og),yr("CheckerNode",ng);class ag extends oe{constructor(e){super(e),this.textures={}}load(e,t,s,r){const i=new ae(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,(s=>{try{t(this.parse(JSON.parse(s)))}catch(t){r&&r(t),this.manager.itemError(e)}}),s,r)}parseNodes(e){const t={};if(void 0!==e){for(const s of e){const{uuid:e,type:r}=s;t[e]=li(br(r)),t[e].uuid=e}const s={nodes:t,textures:this.textures};for(const r of e){r.meta=s;t[r.uuid].deserialize(r),delete r.meta}}return t}parse(e){const t=li(br(e.type));t.uuid=e.uuid;const s={nodes:this.parseNodes(e.nodes),textures:this.textures};return e.meta=s,t.deserialize(e),delete e.meta,t}setTextures(e){return this.textures=e,this}}const ug=new ue;class lg extends Od{constructor(e={}){super(),this.normals=!1,this.lights=!1,this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.pointWidth=1,this.pointColorNode=null,this.setDefaultValues(ug),this.setupShaders(),this.setValues(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor;this.vertexNode=mi((()=>{sn(Ai(),"vUv").assign(io());const e=nn("instancePosition"),t=Cn("vec4","mvPos");t.assign(Tu.mul(Oi(e,1)));const s=cd.z.div(cd.w),r=au.mul(t),i=Cn("vec2","offset");return i.assign(ol.xy),i.assign(i.mul(il)),i.assign(i.div(cd.z)),i.y.assign(i.y.mul(s)),i.assign(i.mul(r.w)),r.assign(r.add(Oi(i,0,0))),r}))(),this.fragmentNode=mi((()=>{const s=sn(Ai(),"vUv"),r=Cn("float","alpha");r.assign(1);const i=s.x,n=s.y,o=i.mul(i).add(n.mul(n));if(e){const e=Cn("float","dlen");e.assign(o.fwidth()),r.assign(Ea(e.oneMinus(),e.add(1),o).oneMinus())}else o.greaterThan(1).discard();let a;if(this.pointColorNode)a=this.pointColorNode;else if(t){a=nn("instanceColor").mul(Lu)}else a=Lu;return Oi(a,r)}))(),this.needsUpdate=!0}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.setupShaders())}}Ld("InstancedPointsNodeMaterial",lg);const dg=new le;class cg extends Od{constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.normals=!1,this.setDefaultValues(dg),this.setValues(e)}}Ld("LineBasicNodeMaterial",cg);const hg=new de;class pg extends Od{constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.normals=!1,this.setDefaultValues(hg),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode,t=this.dashScaleNode?Ni(this.dashScaleNode):Ju,s=this.dashSizeNode?Ni(this.dashSizeNode):el,r=this.dashSizeNode?Ni(this.dashGapNode):tl;$n.assign(s),Hn.assign(r);const i=sn(nn("lineDistance").mul(t));(e?i.add(e):i).mod($n.add(Hn)).greaterThan($n).discard()}}Ld("LineDashedNodeMaterial",pg);const gg=new de;class mg extends Od{constructor(e={}){super(),this.normals=!1,this.lights=!1,this.setDefaultValues(gg),this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.useDash=e.dashed,this.useWorldUnits=!1,this.dashOffset=0,this.lineWidth=1,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setupShaders(),this.setValues(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor,s=this.dashed,r=this.worldUnits,i=mi((({start:e,end:t})=>{const s=au.element(2).element(2),r=au.element(3).element(2).mul(-.5).div(s).sub(e.z).div(t.z.sub(e.z));return Oi(va(e.xyz,t.xyz,r),t.w)}));this.vertexNode=mi((()=>{wn("vec2","vUv").assign(io());const e=nn("instanceStart"),t=nn("instanceEnd"),n=Cn("vec4","start"),o=Cn("vec4","end");n.assign(Tu.mul(Oi(e,1))),o.assign(Tu.mul(Oi(t,1))),r&&(wn("vec3","worldStart").assign(n.xyz),wn("vec3","worldEnd").assign(o.xyz));const a=cd.z.div(cd.w),u=au.element(2).element(3).equal(-1);xi(u,(()=>{xi(n.z.lessThan(0).and(o.z.greaterThan(0)),(()=>{o.assign(i({start:n,end:o}))})).elseif(o.z.lessThan(0).and(n.z.greaterThanEqual(0)),(()=>{n.assign(i({start:o,end:n}))}))}));const l=au.mul(n),d=au.mul(o),c=l.xyz.div(l.w),h=d.xyz.div(d.w),p=h.xy.sub(c.xy).temp();p.x.assign(p.x.mul(a)),p.assign(p.normalize());const g=bn(Oi());if(r){const e=o.xyz.sub(n.xyz).normalize(),t=va(n.xyz,o.xyz,.5).normalize(),r=e.cross(t).normalize(),i=e.cross(r),a=wn("vec4","worldPos");a.assign(ol.y.lessThan(.5).cond(n,o));const u=sl.mul(.5);a.addAssign(Oi(ol.x.lessThan(0).cond(r.mul(u),r.mul(u).negate()),0)),s||(a.addAssign(Oi(ol.y.lessThan(.5).cond(e.mul(u).negate(),e.mul(u)),0)),a.addAssign(Oi(i.mul(u),0)),xi(ol.y.greaterThan(1).or(ol.y.lessThan(0)),(()=>{a.subAssign(Oi(i.mul(2).mul(u),0))}))),g.assign(au.mul(a));const l=bn(wi());l.assign(ol.y.lessThan(.5).cond(c,h)),g.z.assign(l.z.mul(g.w))}else{const e=Cn("vec2","offset");e.assign(Ai(p.y,p.x.negate())),p.x.assign(p.x.div(a)),e.x.assign(e.x.div(a)),e.assign(ol.x.lessThan(0).cond(e.negate(),e)),xi(ol.y.lessThan(0),(()=>{e.assign(e.sub(p))})).elseif(ol.y.greaterThan(1),(()=>{e.assign(e.add(p))})),e.assign(e.mul(sl)),e.assign(e.div(cd.w)),g.assign(ol.y.lessThan(.5).cond(l,d)),e.assign(e.mul(g.w)),g.assign(g.add(Oi(e,0,0)))}return g}))();const n=mi((({p1:e,p2:t,p3:s,p4:r})=>{const i=e.sub(s),n=r.sub(s),o=t.sub(e),a=i.dot(n),u=n.dot(o),l=i.dot(o),d=n.dot(n),c=o.dot(o).mul(d).sub(u.mul(u)),h=a.mul(u).sub(l.mul(d)).div(c).clamp(),p=a.add(u.mul(h)).div(d).clamp();return Ai(h,p)}));this.fragmentNode=mi((()=>{const i=wn("vec2","vUv");if(s){const e=this.offsetNode?Ni(this.offsetNodeNode):rl,t=this.dashScaleNode?Ni(this.dashScaleNode):Ju,s=this.dashSizeNode?Ni(this.dashSizeNode):el,r=this.dashSizeNode?Ni(this.dashGapNode):tl;$n.assign(s),Hn.assign(r);const n=nn("instanceDistanceStart"),o=nn("instanceDistanceEnd"),a=ol.y.lessThan(.5).cond(t.mul(n),Ju.mul(o)),u=sn(a.add(rl)),l=e?u.add(e):u;i.y.lessThan(-1).or(i.y.greaterThan(1)).discard(),l.mod($n.add(Hn)).greaterThan($n).discard()}const o=Cn("float","alpha");if(o.assign(1),r){const t=wn("vec3","worldStart"),r=wn("vec3","worldEnd"),i=wn("vec4","worldPos").xyz.normalize().mul(1e5),a=r.sub(t),u=n({p1:t,p2:r,p3:wi(0,0,0),p4:i}),l=t.add(a.mul(u.x)),d=i.mul(u.y),c=l.sub(d).length().div(sl);if(!s)if(e){const e=c.fwidth();o.assign(Ea(e.negate().add(.5),e.add(.5),c).oneMinus())}else c.greaterThan(.5).discard()}else if(e){const e=i.x,t=i.y.greaterThan(0).cond(i.y.sub(1),i.y.add(1)),s=e.mul(e).add(t.mul(t)),r=Cn("float","dlen");r.assign(s.fwidth()),xi(i.y.abs().greaterThan(1),(()=>{o.assign(Ea(r.oneMinus(),r.add(1),s).oneMinus())}))}else xi(i.y.abs().greaterThan(1),(()=>{const e=i.x,t=i.y.greaterThan(0).cond(i.y.sub(1),i.y.add(1));e.mul(e).add(t.mul(t)).greaterThan(1).discard()}));let a;if(this.lineColorNode)a=this.lineColorNode;else if(t){const e=nn("instanceColorStart"),t=nn("instanceColorEnd");a=ol.y.lessThan(.5).cond(e,t).mul(Lu)}else a=Lu;return Oi(a,o)}))(),this.needsUpdate=!0}get worldUnits(){return this.useWorldUnits}set worldUnits(e){this.useWorldUnits!==e&&(this.useWorldUnits=e,this.setupShaders())}get dashed(){return this.useDash}set dashed(e){this.useDash!==e&&(this.useDash=e,this.setupShaders())}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.setupShaders())}}Ld("Line2NodeMaterial",mg);const fg=new ce;class Tg extends Od{constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.colorSpaced=!1,this.setDefaultValues(fg),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?Ni(this.opacityNode):Du;Mn.assign(Oi(Ic(Cu),e))}}Ld("MeshNormalNodeMaterial",Tg);const xg=new he;class yg extends Od{constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(xg),this.setValues(e)}}Ld("MeshBasicNodeMaterial",yg);const bg=mi((({f0:e,f90:t,dotVH:s})=>{const r=s.mul(-5.55473).sub(6.98316).mul(s).exp2();return e.mul(r.oneMinus()).add(t.mul(r))})),Ng=mi((e=>e.diffuseColor.mul(1/Math.PI))),_g=mi((({dotNH:e})=>kn.mul(.5/Math.PI).add(1).mul(e.pow(kn)))),vg=mi((({lightDirection:e})=>{const t=e.add(cl).normalize(),s=Cu.dot(t).clamp(),r=cl.dot(t).clamp(),i=bg({f0:Gn,f90:1,dotVH:r}),n=Ni(.25),o=_g({dotNH:s});return i.mul(n).mul(o)}));class Sg extends xn{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=Cu.dot(e).clamp().mul(t);s.directDiffuse.addAssign(r.mul(Ng({diffuseColor:Mn.rgb}))),!0===this.specular&&s.directSpecular.addAssign(r.mul(vg({lightDirection:e})).mul(Vu))}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(Ng({diffuseColor:Mn})))}}const Ag=new pe;class Rg extends Od{constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Ag),this.setValues(e)}setupLightingModel(){return new Sg(!1)}}Ld("MeshLambertNodeMaterial",Rg);const Eg=new ge;class Cg extends Od{constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(Eg),this.setValues(e)}setupLightingModel(){return new Sg}setupVariants(){const e=(this.shininessNode?Ni(this.shininessNode):Uu).max(1e-4);kn.assign(e);const t=this.specularNode||Pu;Gn.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}Ld("MeshPhongNodeMaterial",Cg);const wg=mi((()=>{const e=Su.dFdx().abs().max(Su.dFdy().abs());return e.x.max(e.y).max(e.z)})),Mg=mi((e=>{const{roughness:t}=e,s=wg();let r=t.max(.0525);return r=r.add(s),r=r.min(1),r})),Fg=mi((e=>{const{alpha:t,dotNL:s,dotNV:r}=e,i=t.pow2(),n=s.mul(i.add(i.oneMinus().mul(r.pow2())).sqrt()),o=r.mul(i.add(i.oneMinus().mul(s.pow2())).sqrt());return ho(.5,n.add(o).max(wo))})).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),Bg=mi((({alpha:e,dotNH:t})=>{const s=e.pow2(),r=t.pow2().mul(s.oneMinus()).oneMinus();return s.div(r.pow2()).mul(1/Math.PI)})).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),Og=mi((e=>{const{lightDirection:t,f0:s,f90:r,roughness:i,iridescenceFresnel:n}=e,o=e.normalView||Cu,a=i.pow2(),u=t.add(cl).normalize(),l=o.dot(t).clamp(),d=o.dot(cl).clamp(),c=o.dot(u).clamp(),h=cl.dot(u).clamp();let p=bg({f0:s,f90:r,dotVH:h});n&&(p=Dn.mix(p,n));const g=Fg({alpha:a,dotNL:l,dotNV:d}),m=Bg({alpha:a,dotNH:c});return p.mul(g).mul(m)})),Lg=mi((({roughness:e,dotNV:t})=>{const s=Oi(-1,-.0275,-.572,.022),r=Oi(1,.0425,1.04,-.04),i=e.mul(s).add(r),n=i.x.mul(i.x).min(t.mul(-9.28).exp2()).mul(i.x).add(i.y);return Ai(-1.04,1.04).mul(n).add(i.zw)})).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),Ug=mi((e=>{const{dotNV:t,specularColor:s,specularF90:r,roughness:i}=e,n=Lg({dotNV:t,roughness:i});return s.mul(n.x).add(r.mul(n.y))})),Ig=mi((({f:e,f90:t,dotVH:s})=>{const r=s.oneMinus().saturate(),i=r.mul(r),n=r.mul(i,i).clamp(0,.9999);return e.sub(wi(t).mul(n)).div(n.oneMinus())})).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),Dg=mi((({roughness:e,dotNH:t})=>{const s=e.pow2(),r=Ni(1).div(s),i=t.pow2().oneMinus().max(.0078125);return Ni(2).add(r).mul(i.pow(r.mul(.5))).div(2*Math.PI)})).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),Pg=mi((({dotNV:e,dotNL:t})=>Ni(1).div(Ni(4).mul(t.add(e).sub(t.mul(e)))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),Vg=mi((({lightDirection:e})=>{const t=e.add(cl).normalize(),s=Cu.dot(e).clamp(),r=Cu.dot(cl).clamp(),i=Cu.dot(t).clamp(),n=Dg({roughness:In,dotNH:i}),o=Pg({dotNV:r,dotNL:s});return Un.mul(n).mul(o)})),Gg=Di(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),kg=(e,t)=>e.sub(t).div(e.add(t)).pow2(),zg=(e,t)=>{const s=e.mul(2*Math.PI*1e-9),r=wi(54856e-17,44201e-17,52481e-17),i=wi(1681e3,1795300,2208400),n=wi(43278e5,93046e5,66121e5),o=Ni(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(s.mul(2239900).add(t.x).cos()).mul(s.pow2().mul(-45282e5).exp());let a=r.mul(n.mul(2*Math.PI).sqrt()).mul(i.mul(s).add(t).cos()).mul(s.pow2().negate().mul(n).exp());a=wi(a.x.add(o),a.y,a.z).div(1.0685e-7);return Gg.mul(a)},$g=mi((({outsideIOR:e,eta2:t,cosTheta1:s,thinFilmThickness:r,baseF0:i})=>{const n=va(e,t,Ea(0,.03,r)),o=e.div(n).pow2().mul(Ni(1).sub(s.pow2())),a=Ni(1).sub(o).sqrt(),u=kg(n,e),l=bg({f0:u,f90:1,dotVH:s}),d=l.oneMinus(),c=n.lessThan(e).cond(Math.PI,0),h=Ni(Math.PI).sub(c),p=(e=>{const t=e.sqrt();return wi(1).add(t).div(wi(1).sub(t))})(i.clamp(0,.9999)),g=kg(p,n.vec3()),m=bg({f0:g,f90:1,dotVH:a}),f=wi(p.x.lessThan(n).cond(Math.PI,0),p.y.lessThan(n).cond(Math.PI,0),p.z.lessThan(n).cond(Math.PI,0)),T=n.mul(r,a,2),x=wi(h).add(f),y=l.mul(m).clamp(1e-5,.9999),b=y.sqrt(),N=d.pow2().mul(m).div(wi(1).sub(y));let _=l.add(N),v=N.sub(d);for(let e=1;e<=2;++e){v=v.mul(b);const t=zg(Ni(e).mul(T),Ni(e).mul(x)).mul(2);_=_.add(v.mul(t))}return _.max(wi(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),Hg=mi((({normal:e,viewDir:t,roughness:s})=>{const r=e.dot(t).saturate(),i=s.pow2(),n=Zd(s.lessThan(.25),Ni(-339.2).mul(i).add(Ni(161.4).mul(s)).sub(25.9),Ni(-8.48).mul(i).add(Ni(14.3).mul(s)).sub(9.95)),o=Zd(s.lessThan(.25),Ni(44).mul(i).sub(Ni(23.7).mul(s)).add(3.26),Ni(1.97).mul(i).sub(Ni(3.27).mul(s)).add(.72));return Zd(s.lessThan(.25),0,Ni(.1).mul(s).sub(.025)).add(n.mul(r).add(o).exp()).mul(1/Math.PI).saturate()})),Wg=wi(.04),jg=wi(1);class Xg extends xn{constructor(e=!1,t=!1,s=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(){if(!0===this.clearcoat&&(this.clearcoatRadiance=wi().temp("clearcoatRadiance"),this.clearcoatSpecularDirect=wi().temp("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=wi().temp("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=wi().temp("sheenSpecularDirect"),this.sheenSpecularIndirect=wi().temp("sheenSpecularIndirect")),!0===this.iridescence){const e=Cu.dot(cl).clamp();this.iridescenceFresnel=$g({outsideIOR:Ni(1),eta2:Pn,cosTheta1:e,thinFilmThickness:Vn,baseF0:Gn}),this.iridescenceF0=Ig({f:this.iridescenceFresnel,f90:1,dotVH:e})}}computeMultiscattering(e,t,s=Ni(1)){const r=Cu.dot(cl).clamp(),i=Lg({roughness:Fn,dotNV:r}),n=(this.iridescenceF0?Dn.mix(Gn,this.iridescenceF0):Gn).mul(i.x).add(s.mul(i.y)),o=i.x.add(i.y).oneMinus(),a=Gn.add(Gn.oneMinus().mul(.047619)),u=n.mul(a).div(o.mul(a).oneMinus());e.addAssign(n),t.addAssign(u.mul(o))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=Cu.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(r.mul(Vg({lightDirection:e}))),!0===this.clearcoat){const s=Mu.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(s.mul(Og({lightDirection:e,f0:Wg,f90:jg,roughness:Ln,normalView:Mu})))}s.directDiffuse.addAssign(r.mul(Ng({diffuseColor:Mn.rgb}))),s.directSpecular.addAssign(r.mul(Og({lightDirection:e,f0:Gn,f90:1,roughness:Fn,iridescence:this.iridescence,iridescenceFresnel:this.iridescenceFresnel})))}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(Ng({diffuseColor:Mn})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:s}){if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(t.mul(Un,Hg({normal:Cu,viewDir:cl,roughness:In}))),!0===this.clearcoat){const e=Mu.dot(cl).clamp(),t=Ug({dotNV:e,specularColor:Wg,specularF90:jg,roughness:Ln});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const r=wi().temp("singleScattering"),i=wi().temp("multiScattering"),n=t.mul(1/Math.PI);this.computeMultiscattering(r,i);const o=r.add(i),a=Mn.mul(o.r.max(o.g).max(o.b).oneMinus());s.indirectSpecular.addAssign(e.mul(r)),s.indirectSpecular.addAssign(i.mul(n)),s.indirectDiffuse.addAssign(a.mul(n))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const s=Cu.dot(cl).clamp().add(e),r=Fn.mul(-16).oneMinus().negate().exp2(),i=e.sub(s.pow(r).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(e),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(i)}finish(e){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=Mu.dot(cl).clamp(),s=bg({dotVH:e,f0:Wg,f90:jg}),r=t.mul(On.mul(s).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(On));t.assign(r)}if(!0===this.sheen){const e=Un.r.max(Un.g).max(Un.b).mul(.157).oneMinus(),s=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(s)}}}const qg=new me;class Yg extends Od{constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(qg),this.setValues(e)}setupLightingModel(){return new Xg}setupVariants(){const e=this.metalnessNode?Ni(this.metalnessNode):zu;Bn.assign(e);let t=this.roughnessNode?Ni(this.roughnessNode):ku;t=Mg({roughness:t}),Fn.assign(t);const s=va(wi(.04),Mn.rgb,e);Gn.assign(s),Mn.assign(Oi(Mn.rgb.mul(e.oneMinus()),Mn.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}Ld("MeshStandardNodeMaterial",Yg);const Kg=new fe;class Qg extends Yg{constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.setDefaultValues(Kg),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}setupLightingModel(){return new Xg(this.useClearcoat,this.useSheen,this.useIridescence)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?Ni(this.clearcoatNode):Hu,t=this.clearcoatRoughnessNode?Ni(this.clearcoatRoughnessNode):Wu;On.assign(e),Ln.assign(t)}if(this.useSheen){const e=this.sheenNode?wi(this.sheenNode):qu,t=this.sheenRoughnessNode?Ni(this.sheenRoughnessNode):Yu;Un.assign(e),In.assign(t)}if(this.useIridescence){const e=this.iridescenceNode?Ni(this.iridescenceNode):Ku,t=this.iridescenceIORNode?Ni(this.iridescenceIORNode):Qu,s=this.iridescenceThicknessNode?Ni(this.iridescenceThicknessNode):Zu;Dn.assign(e),Pn.assign(t),Vn.assign(s)}}setupNormal(e){super.setupNormal(e);const t=this.clearcoatNormalNode?wi(this.clearcoatNormalNode):ju;Mu.assign(t)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,super.copy(e)}}Ld("MeshPhysicalNodeMaterial",Qg);class Zg extends Xg{constructor(e,t,s,r){super(e,t,s),this.useSSS=r}direct({lightDirection:e,lightColor:t,reflectedLight:s},r,i){if(!0===this.useSSS){const r=i.material,{thicknessColorNode:n,thicknessDistortionNode:o,thicknessAmbientNode:a,thicknessAttenuationNode:u,thicknessPowerNode:l,thicknessScaleNode:d}=r,c=e.add(Cu.mul(o)).normalize(),h=Ni(cl.dot(c.negate()).saturate().pow(l).mul(d)),p=wi(h.add(a).mul(n));s.directDiffuse.addAssign(p.mul(u.mul(t)))}super.direct({lightDirection:e,lightColor:t,reflectedLight:s},r,i)}}class Jg extends Qg{constructor(e){super(e),this.thicknessColorNode=null,this.thicknessDistortionNode=Ni(.1),this.thicknessAmbientNode=Ni(0),this.thicknessAttenuationNode=Ni(.1),this.thicknessPowerNode=Ni(2),this.thicknessScaleNode=Ni(10)}get useSSS(){return null!==this.thicknessColorNode}setupLightingModel(){return new Zg(this.useClearcoat,this.useSheen,this.useIridescence,this.useSSS)}copy(e){return this.thicknessColorNode=e.thicknessColorNode,this.thicknessDistortionNode=e.thicknessDistortionNode,this.thicknessAmbientNode=e.thicknessAmbientNode,this.thicknessAttenuationNode=e.thicknessAttenuationNode,this.thicknessPowerNode=e.thicknessPowerNode,this.thicknessScaleNode=e.thicknessScaleNode,super.copy(e)}}Ld("MeshSSSNodeMaterial",Jg);const em=new ue;class tm extends Od{constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.normals=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(em),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}Ld("PointsNodeMaterial",tm);const sm=new Te;class rm extends Od{constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this.normals=!1,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(sm),this.setValues(e)}setupPosition({object:e,context:t}){const{positionNode:s,rotationNode:r,scaleNode:i}=this,n=al;let o=Tu.mul(wi(s||0)),a=Ai(yu[0].xyz.length(),yu[1].xyz.length());null!==i&&(a=a.mul(i));let u=n.xy;e.center&&!0===e.center.isVector2&&(u=u.sub(Qi(e.center).sub(.5))),u=u.mul(a);const l=Ni(r||Xu),d=l.cos(),c=l.sin(),h=Ai(Ai(d,c.negate()).dot(u),Ai(c,d).dot(u));o=Oi(o.xy.add(h),o.zw);const p=au.mul(o);return t.vertex=n,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}}Ld("SpriteNodeMaterial",rm);const im=xe.createMaterialFromType;xe.createMaterialFromType=function(e){const t=Ud(e);return void 0!==t?t:im.call(this,e)};class nm extends xe{constructor(e){super(e),this.nodes={}}parse(e){const t=super.parse(e),s=this.nodes,r=e.inputNodes;for(const e in r){const i=r[e];t[e]=s[i]}return t}setNodes(e){return this.nodes=e,this}}class om extends ye{constructor(e){super(e),this._nodesJSON=null}parse(e,t){this._nodesJSON=e.nodes;const s=super.parse(e,t);return this._nodesJSON=null,s}parseNodes(e,t){if(void 0!==e){const s=new ag;return s.setTextures(t),s.parseNodes(e)}return{}}parseMaterials(e,t){const s={};if(void 0!==e){const r=this.parseNodes(this._nodesJSON,t),i=new nm;i.setTextures(t),i.setNodes(r);for(let t=0,r=e.length;t<r;t++){const r=e[t];s[r.uuid]=i.parse(r)}}return s}}class am{parseFunction(){}}class um{constructor(e,t,s="",r=""){this.type=e,this.inputs=t,this.name=s,this.presicion=r}getCode(){}}um.isNodeFunction=!0;const lm=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,dm=/[a-z_0-9]+/gi,cm="#pragma main";class hm extends um{constructor(e){const{type:t,inputs:s,name:r,presicion:i,inputsCode:n,blockCode:o,headerCode:a}=(e=>{const t=(e=e.trim()).indexOf(cm),s=-1!==t?e.slice(t+12):e,r=s.match(lm);if(null!==r&&5===r.length){const i=r[4],n=[];let o=null;for(;null!==(o=dm.exec(i));)n.push(o);const a=[];let u=0;for(;u<n.length;){const e="const"===n[u][0];!0===e&&u++;let t=n[u][0];"in"===t||"out"===t||"inout"===t?u++:t="";const s=n[u++][0];let r=Number.parseInt(n[u][0]);!1===Number.isNaN(r)?u++:r=null;const i=n[u++][0];a.push(new uc(s,i,r,t,e))}const l=s.substring(r[0].length),d=void 0!==r[3]?r[3]:"";return{type:r[2],inputs:a,name:d,presicion:void 0!==r[1]?r[1]:"",inputsCode:i,blockCode:l,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,s,r,i),this.inputsCode=n,this.blockCode=o,this.headerCode=a}getCode(e=this.name){let t;const s=this.blockCode;if(""!==s){const{type:r,inputsCode:i,headerCode:n,presicion:o}=this;let a=`${r} ${e} ( ${i.trim()} )`;""!==o&&(a=`${o} ${a}`),t=n+a+s}else t="";return t}}class pm extends am{parseFunction(e){return new hm(e)}}const gm=mi((([e,t,s])=>{const r=Ni(s).toVar(),i=Ni(t).toVar(),n=Si(e).toVar();return Zd(n,i,r)})),mm=mi((([e,t])=>{const s=Si(t).toVar(),r=Ni(e).toVar();return Zd(s,r.negate(),r)})),fm=mi((([e])=>{const t=Ni(e).toVar();return _i(Vo(t))})),Tm=mi((([e,t])=>{const s=Ni(e).toVar();return t.assign(fm(s)),s.sub(Ni(t))})),xm=mi((([e,t,s,r,i,n])=>{const o=Ni(n).toVar(),a=Ni(i).toVar(),u=Ni(r).toVar(),l=Ni(s).toVar(),d=Ni(t).toVar(),c=Ni(e).toVar(),h=Ni(lo(1,a)).toVar();return lo(1,o).mul(c.mul(h).add(d.mul(a))).add(o.mul(l.mul(h).add(u.mul(a))))})),ym=mi((([e,t,s,r,i,n])=>{const o=Ni(n).toVar(),a=Ni(i).toVar(),u=wi(r).toVar(),l=wi(s).toVar(),d=wi(t).toVar(),c=wi(e).toVar(),h=Ni(lo(1,a)).toVar();return lo(1,o).mul(c.mul(h).add(d.mul(a))).add(o.mul(l.mul(h).add(u.mul(a))))})),bm=bc([xm,ym]),Nm=mi((([e,t,s,r,i,n,o,a,u,l,d])=>{const c=Ni(d).toVar(),h=Ni(l).toVar(),p=Ni(u).toVar(),g=Ni(a).toVar(),m=Ni(o).toVar(),f=Ni(n).toVar(),T=Ni(i).toVar(),x=Ni(r).toVar(),y=Ni(s).toVar(),b=Ni(t).toVar(),N=Ni(e).toVar(),_=Ni(lo(1,p)).toVar(),v=Ni(lo(1,h)).toVar();return Ni(lo(1,c)).toVar().mul(v.mul(N.mul(_).add(b.mul(p))).add(h.mul(y.mul(_).add(x.mul(p))))).add(c.mul(v.mul(T.mul(_).add(f.mul(p))).add(h.mul(m.mul(_).add(g.mul(p))))))})),_m=mi((([e,t,s,r,i,n,o,a,u,l,d])=>{const c=Ni(d).toVar(),h=Ni(l).toVar(),p=Ni(u).toVar(),g=wi(a).toVar(),m=wi(o).toVar(),f=wi(n).toVar(),T=wi(i).toVar(),x=wi(r).toVar(),y=wi(s).toVar(),b=wi(t).toVar(),N=wi(e).toVar(),_=Ni(lo(1,p)).toVar(),v=Ni(lo(1,h)).toVar();return Ni(lo(1,c)).toVar().mul(v.mul(N.mul(_).add(b.mul(p))).add(h.mul(y.mul(_).add(x.mul(p))))).add(c.mul(v.mul(T.mul(_).add(f.mul(p))).add(h.mul(m.mul(_).add(g.mul(p))))))})),vm=bc([Nm,_m]),Sm=mi((([e,t,s])=>{const r=Ni(s).toVar(),i=Ni(t).toVar(),n=vi(e).toVar(),o=vi(n.bitAnd(vi(7))).toVar(),a=Ni(gm(o.lessThan(vi(4)),i,r)).toVar(),u=Ni(co(2,gm(o.lessThan(vi(4)),r,i))).toVar();return mm(a,Si(o.bitAnd(vi(1)))).add(mm(u,Si(o.bitAnd(vi(2)))))})),Am=mi((([e,t,s,r])=>{const i=Ni(r).toVar(),n=Ni(s).toVar(),o=Ni(t).toVar(),a=vi(e).toVar(),u=vi(a.bitAnd(vi(15))).toVar(),l=Ni(gm(u.lessThan(vi(8)),o,n)).toVar(),d=Ni(gm(u.lessThan(vi(4)),n,gm(u.equal(vi(12)).or(u.equal(vi(14))),o,i))).toVar();return mm(l,Si(u.bitAnd(vi(1)))).add(mm(d,Si(u.bitAnd(vi(2)))))})),Rm=bc([Sm,Am]),Em=mi((([e,t,s])=>{const r=Ni(s).toVar(),i=Ni(t).toVar(),n=Fi(e).toVar();return wi(Rm(n.x,i,r),Rm(n.y,i,r),Rm(n.z,i,r))})),Cm=mi((([e,t,s,r])=>{const i=Ni(r).toVar(),n=Ni(s).toVar(),o=Ni(t).toVar(),a=Fi(e).toVar();return wi(Rm(a.x,o,n,i),Rm(a.y,o,n,i),Rm(a.z,o,n,i))})),wm=bc([Em,Cm]),Mm=mi((([e])=>{const t=Ni(e).toVar();return co(.6616,t)})),Fm=mi((([e])=>{const t=Ni(e).toVar();return co(.982,t)})),Bm=mi((([e])=>{const t=wi(e).toVar();return co(.6616,t)})),Om=bc([Mm,Bm]),Lm=mi((([e])=>{const t=wi(e).toVar();return co(.982,t)})),Um=bc([Fm,Lm]),Im=mi((([e,t])=>{const s=_i(t).toVar(),r=vi(e).toVar();return r.shiftLeft(s).bitOr(r.shiftRight(_i(32).sub(s)))})),Dm=mi((([e,t,s])=>{e.subAssign(s),e.bitXorAssign(Im(s,_i(4))),s.addAssign(t),t.subAssign(e),t.bitXorAssign(Im(e,_i(6))),e.addAssign(s),s.subAssign(t),s.bitXorAssign(Im(t,_i(8))),t.addAssign(e),e.subAssign(s),e.bitXorAssign(Im(s,_i(16))),s.addAssign(t),t.subAssign(e),t.bitXorAssign(Im(e,_i(19))),e.addAssign(s),s.subAssign(t),s.bitXorAssign(Im(t,_i(4))),t.addAssign(e)})),Pm=mi((([e,t,s])=>{const r=vi(s).toVar(),i=vi(t).toVar(),n=vi(e).toVar();return r.bitXorAssign(i),r.subAssign(Im(i,_i(14))),n.bitXorAssign(r),n.subAssign(Im(r,_i(11))),i.bitXorAssign(n),i.subAssign(Im(n,_i(25))),r.bitXorAssign(i),r.subAssign(Im(i,_i(16))),n.bitXorAssign(r),n.subAssign(Im(r,_i(4))),i.bitXorAssign(n),i.subAssign(Im(n,_i(14))),r.bitXorAssign(i),r.subAssign(Im(i,_i(24))),r})),Vm=mi((([e])=>{const t=vi(e).toVar();return Ni(t).div(Ni(vi(_i(4294967295))))})),Gm=mi((([e])=>{const t=Ni(e).toVar();return t.mul(t.mul(t.mul(t.mul(t.mul(6).sub(15)).add(10))))})),km=mi((([e])=>{const t=_i(e).toVar(),s=vi(vi(1)).toVar(),r=vi(vi(_i(3735928559)).add(s.shiftLeft(vi(2)).add(vi(13)))).toVar();return Pm(r.add(vi(t)),r,r)})),zm=mi((([e,t])=>{const s=_i(t).toVar(),r=_i(e).toVar(),i=vi(vi(2)).toVar(),n=vi().toVar(),o=vi().toVar(),a=vi().toVar();return n.assign(o.assign(a.assign(vi(_i(3735928559)).add(i.shiftLeft(vi(2)).add(vi(13)))))),n.addAssign(vi(r)),o.addAssign(vi(s)),Pm(n,o,a)})),$m=mi((([e,t,s])=>{const r=_i(s).toVar(),i=_i(t).toVar(),n=_i(e).toVar(),o=vi(vi(3)).toVar(),a=vi().toVar(),u=vi().toVar(),l=vi().toVar();return a.assign(u.assign(l.assign(vi(_i(3735928559)).add(o.shiftLeft(vi(2)).add(vi(13)))))),a.addAssign(vi(n)),u.addAssign(vi(i)),l.addAssign(vi(r)),Pm(a,u,l)})),Hm=mi((([e,t,s,r])=>{const i=_i(r).toVar(),n=_i(s).toVar(),o=_i(t).toVar(),a=_i(e).toVar(),u=vi(vi(4)).toVar(),l=vi().toVar(),d=vi().toVar(),c=vi().toVar();return l.assign(d.assign(c.assign(vi(_i(3735928559)).add(u.shiftLeft(vi(2)).add(vi(13)))))),l.addAssign(vi(a)),d.addAssign(vi(o)),c.addAssign(vi(n)),Dm(l,d,c),l.addAssign(vi(i)),Pm(l,d,c)})),Wm=mi((([e,t,s,r,i])=>{const n=_i(i).toVar(),o=_i(r).toVar(),a=_i(s).toVar(),u=_i(t).toVar(),l=_i(e).toVar(),d=vi(vi(5)).toVar(),c=vi().toVar(),h=vi().toVar(),p=vi().toVar();return c.assign(h.assign(p.assign(vi(_i(3735928559)).add(d.shiftLeft(vi(2)).add(vi(13)))))),c.addAssign(vi(l)),h.addAssign(vi(u)),p.addAssign(vi(a)),Dm(c,h,p),c.addAssign(vi(o)),h.addAssign(vi(n)),Pm(c,h,p)})),jm=bc([km,zm,$m,Hm,Wm]),Xm=mi((([e,t])=>{const s=_i(t).toVar(),r=_i(e).toVar(),i=vi(jm(r,s)).toVar(),n=Fi().toVar();return n.x.assign(i.bitAnd(_i(255))),n.y.assign(i.shiftRight(_i(8)).bitAnd(_i(255))),n.z.assign(i.shiftRight(_i(16)).bitAnd(_i(255))),n})),qm=mi((([e,t,s])=>{const r=_i(s).toVar(),i=_i(t).toVar(),n=_i(e).toVar(),o=vi(jm(n,i,r)).toVar(),a=Fi().toVar();return a.x.assign(o.bitAnd(_i(255))),a.y.assign(o.shiftRight(_i(8)).bitAnd(_i(255))),a.z.assign(o.shiftRight(_i(16)).bitAnd(_i(255))),a})),Ym=bc([Xm,qm]),Km=mi((([e])=>{const t=Ai(e).toVar(),s=_i().toVar(),r=_i().toVar(),i=Ni(Tm(t.x,s)).toVar(),n=Ni(Tm(t.y,r)).toVar(),o=Ni(Gm(i)).toVar(),a=Ni(Gm(n)).toVar(),u=Ni(bm(Rm(jm(s,r),i,n),Rm(jm(s.add(_i(1)),r),i.sub(1),n),Rm(jm(s,r.add(_i(1))),i,n.sub(1)),Rm(jm(s.add(_i(1)),r.add(_i(1))),i.sub(1),n.sub(1)),o,a)).toVar();return Om(u)})),Qm=mi((([e])=>{const t=wi(e).toVar(),s=_i().toVar(),r=_i().toVar(),i=_i().toVar(),n=Ni(Tm(t.x,s)).toVar(),o=Ni(Tm(t.y,r)).toVar(),a=Ni(Tm(t.z,i)).toVar(),u=Ni(Gm(n)).toVar(),l=Ni(Gm(o)).toVar(),d=Ni(Gm(a)).toVar(),c=Ni(vm(Rm(jm(s,r,i),n,o,a),Rm(jm(s.add(_i(1)),r,i),n.sub(1),o,a),Rm(jm(s,r.add(_i(1)),i),n,o.sub(1),a),Rm(jm(s.add(_i(1)),r.add(_i(1)),i),n.sub(1),o.sub(1),a),Rm(jm(s,r,i.add(_i(1))),n,o,a.sub(1)),Rm(jm(s.add(_i(1)),r,i.add(_i(1))),n.sub(1),o,a.sub(1)),Rm(jm(s,r.add(_i(1)),i.add(_i(1))),n,o.sub(1),a.sub(1)),Rm(jm(s.add(_i(1)),r.add(_i(1)),i.add(_i(1))),n.sub(1),o.sub(1),a.sub(1)),u,l,d)).toVar();return Um(c)})),Zm=bc([Km,Qm]),Jm=mi((([e])=>{const t=Ai(e).toVar(),s=_i().toVar(),r=_i().toVar(),i=Ni(Tm(t.x,s)).toVar(),n=Ni(Tm(t.y,r)).toVar(),o=Ni(Gm(i)).toVar(),a=Ni(Gm(n)).toVar(),u=wi(bm(wm(Ym(s,r),i,n),wm(Ym(s.add(_i(1)),r),i.sub(1),n),wm(Ym(s,r.add(_i(1))),i,n.sub(1)),wm(Ym(s.add(_i(1)),r.add(_i(1))),i.sub(1),n.sub(1)),o,a)).toVar();return Om(u)})),ef=mi((([e])=>{const t=wi(e).toVar(),s=_i().toVar(),r=_i().toVar(),i=_i().toVar(),n=Ni(Tm(t.x,s)).toVar(),o=Ni(Tm(t.y,r)).toVar(),a=Ni(Tm(t.z,i)).toVar(),u=Ni(Gm(n)).toVar(),l=Ni(Gm(o)).toVar(),d=Ni(Gm(a)).toVar(),c=wi(vm(wm(Ym(s,r,i),n,o,a),wm(Ym(s.add(_i(1)),r,i),n.sub(1),o,a),wm(Ym(s,r.add(_i(1)),i),n,o.sub(1),a),wm(Ym(s.add(_i(1)),r.add(_i(1)),i),n.sub(1),o.sub(1),a),wm(Ym(s,r,i.add(_i(1))),n,o,a.sub(1)),wm(Ym(s.add(_i(1)),r,i.add(_i(1))),n.sub(1),o,a.sub(1)),wm(Ym(s,r.add(_i(1)),i.add(_i(1))),n,o.sub(1),a.sub(1)),wm(Ym(s.add(_i(1)),r.add(_i(1)),i.add(_i(1))),n.sub(1),o.sub(1),a.sub(1)),u,l,d)).toVar();return Um(c)})),tf=bc([Jm,ef]),sf=mi((([e])=>{const t=Ni(e).toVar(),s=_i(fm(t)).toVar();return Vm(jm(s))})),rf=mi((([e])=>{const t=Ai(e).toVar(),s=_i(fm(t.x)).toVar(),r=_i(fm(t.y)).toVar();return Vm(jm(s,r))})),nf=mi((([e])=>{const t=wi(e).toVar(),s=_i(fm(t.x)).toVar(),r=_i(fm(t.y)).toVar(),i=_i(fm(t.z)).toVar();return Vm(jm(s,r,i))})),of=mi((([e])=>{const t=Oi(e).toVar(),s=_i(fm(t.x)).toVar(),r=_i(fm(t.y)).toVar(),i=_i(fm(t.z)).toVar(),n=_i(fm(t.w)).toVar();return Vm(jm(s,r,i,n))})),af=bc([sf,rf,nf,of]),uf=mi((([e])=>{const t=Ni(e).toVar(),s=_i(fm(t)).toVar();return wi(Vm(jm(s,_i(0))),Vm(jm(s,_i(1))),Vm(jm(s,_i(2))))})),lf=mi((([e])=>{const t=Ai(e).toVar(),s=_i(fm(t.x)).toVar(),r=_i(fm(t.y)).toVar();return wi(Vm(jm(s,r,_i(0))),Vm(jm(s,r,_i(1))),Vm(jm(s,r,_i(2))))})),df=mi((([e])=>{const t=wi(e).toVar(),s=_i(fm(t.x)).toVar(),r=_i(fm(t.y)).toVar(),i=_i(fm(t.z)).toVar();return wi(Vm(jm(s,r,i,_i(0))),Vm(jm(s,r,i,_i(1))),Vm(jm(s,r,i,_i(2))))})),cf=mi((([e])=>{const t=Oi(e).toVar(),s=_i(fm(t.x)).toVar(),r=_i(fm(t.y)).toVar(),i=_i(fm(t.z)).toVar(),n=_i(fm(t.w)).toVar();return wi(Vm(jm(s,r,i,n,_i(0))),Vm(jm(s,r,i,n,_i(1))),Vm(jm(s,r,i,n,_i(2))))})),hf=bc([uf,lf,df,cf]),pf=mi((([e,t,s,r])=>{const i=Ni(r).toVar(),n=Ni(s).toVar(),o=_i(t).toVar(),a=wi(e).toVar(),u=Ni(0).toVar(),l=Ni(1).toVar();return _c({start:_i(0),end:o},(({i:e})=>{u.addAssign(l.mul(Zm(a))),l.mulAssign(i),a.mulAssign(n)})),u})),gf=mi((([e,t,s,r])=>{const i=Ni(r).toVar(),n=Ni(s).toVar(),o=_i(t).toVar(),a=wi(e).toVar(),u=wi(0).toVar(),l=Ni(1).toVar();return _c({start:_i(0),end:o},(({i:e})=>{u.addAssign(l.mul(tf(a))),l.mulAssign(i),a.mulAssign(n)})),u})),mf=mi((([e,t,s,r])=>{const i=Ni(r).toVar(),n=Ni(s).toVar(),o=_i(t).toVar(),a=wi(e).toVar();return Ai(pf(a,o,n,i),pf(a.add(wi(_i(19),_i(193),_i(17))),o,n,i))})),ff=mi((([e,t,s,r])=>{const i=Ni(r).toVar(),n=Ni(s).toVar(),o=_i(t).toVar(),a=wi(e).toVar(),u=wi(gf(a,o,n,i)).toVar(),l=Ni(pf(a.add(wi(_i(19),_i(193),_i(17))),o,n,i)).toVar();return Oi(u,l)})),Tf=mi((([e,t,s,r,i,n,o])=>{const a=_i(o).toVar(),u=Ni(n).toVar(),l=_i(i).toVar(),d=_i(r).toVar(),c=_i(s).toVar(),h=_i(t).toVar(),p=Ai(e).toVar(),g=wi(hf(Ai(h.add(d),c.add(l)))).toVar(),m=Ai(g.x,g.y).toVar();m.subAssign(.5),m.mulAssign(u),m.addAssign(.5);const f=Ai(Ai(Ni(h),Ni(c)).add(m)).toVar(),T=Ai(f.sub(p)).toVar();return xi(a.equal(_i(2)),(()=>Yo(T.x).add(Yo(T.y)))),xi(a.equal(_i(3)),(()=>la(Yo(T.x),Yo(T.y)))),ma(T,T)})),xf=mi((([e,t,s,r,i,n,o,a,u])=>{const l=_i(u).toVar(),d=Ni(a).toVar(),c=_i(o).toVar(),h=_i(n).toVar(),p=_i(i).toVar(),g=_i(r).toVar(),m=_i(s).toVar(),f=_i(t).toVar(),T=wi(e).toVar(),x=wi(hf(wi(f.add(p),m.add(h),g.add(c)))).toVar();x.subAssign(.5),x.mulAssign(d),x.addAssign(.5);const y=wi(wi(Ni(f),Ni(m),Ni(g)).add(x)).toVar(),b=wi(y.sub(T)).toVar();return xi(l.equal(_i(2)),(()=>Yo(b.x).add(Yo(b.y).add(Yo(b.z))))),xi(l.equal(_i(3)),(()=>la(la(Yo(b.x),Yo(b.y)),Yo(b.z)))),ma(b,b)})),yf=bc([Tf,xf]),bf=mi((([e,t,s])=>{const r=_i(s).toVar(),i=Ni(t).toVar(),n=Ai(e).toVar(),o=_i().toVar(),a=_i().toVar(),u=Ai(Tm(n.x,o),Tm(n.y,a)).toVar(),l=Ni(1e6).toVar();return _c({start:-1,end:_i(1),name:"x",condition:"<="},(({x:e})=>{_c({start:-1,end:_i(1),name:"y",condition:"<="},(({y:t})=>{const s=Ni(yf(u,e,t,o,a,i,r)).toVar();l.assign(ua(l,s))}))})),xi(r.equal(_i(0)),(()=>{l.assign(Do(l))})),l})),Nf=mi((([e,t,s])=>{const r=_i(s).toVar(),i=Ni(t).toVar(),n=Ai(e).toVar(),o=_i().toVar(),a=_i().toVar(),u=Ai(Tm(n.x,o),Tm(n.y,a)).toVar(),l=Ai(1e6,1e6).toVar();return _c({start:-1,end:_i(1),name:"x",condition:"<="},(({x:e})=>{_c({start:-1,end:_i(1),name:"y",condition:"<="},(({y:t})=>{const s=Ni(yf(u,e,t,o,a,i,r)).toVar();xi(s.lessThan(l.x),(()=>{l.y.assign(l.x),l.x.assign(s)})).elseif(s.lessThan(l.y),(()=>{l.y.assign(s)}))}))})),xi(r.equal(_i(0)),(()=>{l.assign(Do(l))})),l})),_f=mi((([e,t,s])=>{const r=_i(s).toVar(),i=Ni(t).toVar(),n=Ai(e).toVar(),o=_i().toVar(),a=_i().toVar(),u=Ai(Tm(n.x,o),Tm(n.y,a)).toVar(),l=wi(1e6,1e6,1e6).toVar();return _c({start:-1,end:_i(1),name:"x",condition:"<="},(({x:e})=>{_c({start:-1,end:_i(1),name:"y",condition:"<="},(({y:t})=>{const s=Ni(yf(u,e,t,o,a,i,r)).toVar();xi(s.lessThan(l.x),(()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(s)})).elseif(s.lessThan(l.y),(()=>{l.z.assign(l.y),l.y.assign(s)})).elseif(s.lessThan(l.z),(()=>{l.z.assign(s)}))}))})),xi(r.equal(_i(0)),(()=>{l.assign(Do(l))})),l})),vf=mi((([e,t,s])=>{const r=_i(s).toVar(),i=Ni(t).toVar(),n=wi(e).toVar(),o=_i().toVar(),a=_i().toVar(),u=_i().toVar(),l=wi(Tm(n.x,o),Tm(n.y,a),Tm(n.z,u)).toVar(),d=Ni(1e6).toVar();return _c({start:-1,end:_i(1),name:"x",condition:"<="},(({x:e})=>{_c({start:-1,end:_i(1),name:"y",condition:"<="},(({y:t})=>{_c({start:-1,end:_i(1),name:"z",condition:"<="},(({z:s})=>{const n=Ni(yf(l,e,t,s,o,a,u,i,r)).toVar();d.assign(ua(d,n))}))}))})),xi(r.equal(_i(0)),(()=>{d.assign(Do(d))})),d})),Sf=bc([bf,vf]),Af=mi((([e,t,s])=>{const r=_i(s).toVar(),i=Ni(t).toVar(),n=wi(e).toVar(),o=_i().toVar(),a=_i().toVar(),u=_i().toVar(),l=wi(Tm(n.x,o),Tm(n.y,a),Tm(n.z,u)).toVar(),d=Ai(1e6,1e6).toVar();return _c({start:-1,end:_i(1),name:"x",condition:"<="},(({x:e})=>{_c({start:-1,end:_i(1),name:"y",condition:"<="},(({y:t})=>{_c({start:-1,end:_i(1),name:"z",condition:"<="},(({z:s})=>{const n=Ni(yf(l,e,t,s,o,a,u,i,r)).toVar();xi(n.lessThan(d.x),(()=>{d.y.assign(d.x),d.x.assign(n)})).elseif(n.lessThan(d.y),(()=>{d.y.assign(n)}))}))}))})),xi(r.equal(_i(0)),(()=>{d.assign(Do(d))})),d})),Rf=bc([Nf,Af]),Ef=mi((([e,t,s])=>{const r=_i(s).toVar(),i=Ni(t).toVar(),n=wi(e).toVar(),o=_i().toVar(),a=_i().toVar(),u=_i().toVar(),l=wi(Tm(n.x,o),Tm(n.y,a),Tm(n.z,u)).toVar(),d=wi(1e6,1e6,1e6).toVar();return _c({start:-1,end:_i(1),name:"x",condition:"<="},(({x:e})=>{_c({start:-1,end:_i(1),name:"y",condition:"<="},(({y:t})=>{_c({start:-1,end:_i(1),name:"z",condition:"<="},(({z:s})=>{const n=Ni(yf(l,e,t,s,o,a,u,i,r)).toVar();xi(n.lessThan(d.x),(()=>{d.z.assign(d.y),d.y.assign(d.x),d.x.assign(n)})).elseif(n.lessThan(d.y),(()=>{d.z.assign(d.y),d.y.assign(n)})).elseif(n.lessThan(d.z),(()=>{d.z.assign(n)}))}))}))})),xi(r.equal(_i(0)),(()=>{d.assign(Do(d))})),d})),Cf=bc([_f,Ef]);gm.setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),mm.setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),fm.setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),xm.setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),ym.setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]}),Nm.setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),_m.setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),Sm.setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),Am.setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),Em.setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),Cm.setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),Mm.setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),Fm.setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),Bm.setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),Lm.setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),Im.setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),Pm.setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),Vm.setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),Gm.setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),km.setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),zm.setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),$m.setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),Hm.setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),Wm.setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]}),Xm.setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),qm.setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),Km.setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),Qm.setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]}),Jm.setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),ef.setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),sf.setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),rf.setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),nf.setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),of.setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]}),uf.setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),lf.setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),df.setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),cf.setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]}),pf.setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),gf.setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),mf.setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),ff.setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),Tf.setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),xf.setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),bf.setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Nf.setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),_f.setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),vf.setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Af.setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Ef.setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]});const wf=mi((([e])=>{const t=wi(e).toVar(),s=Ni(t.x).toVar(),r=Ni(t.y).toVar(),i=Ni(t.z).toVar();xi(r.lessThan(1e-4),(()=>wi(i,i,i))).else((()=>{s.assign(co(6,s.sub(Vo(s))));const e=_i(ia(s)).toVar(),t=Ni(s.sub(Ni(e))).toVar(),n=Ni(i.mul(lo(1,r))).toVar(),o=Ni(i.mul(lo(1,r.mul(t)))).toVar(),a=Ni(i.mul(lo(1,r.mul(lo(1,t))))).toVar();return xi(e.equal(_i(0)),(()=>wi(i,a,n))).elseif(e.equal(_i(1)),(()=>wi(o,i,n))).elseif(e.equal(_i(2)),(()=>wi(n,i,a))).elseif(e.equal(_i(3)),(()=>wi(n,o,i))).elseif(e.equal(_i(4)),(()=>wi(a,n,i))),wi(i,n,o)}))})),Mf=mi((([e])=>{const t=wi(e).toVar(),s=Ni(t.x).toVar(),r=Ni(t.y).toVar(),i=Ni(t.z).toVar(),n=Ni(ua(s,ua(r,i))).toVar(),o=Ni(la(s,la(r,i))).toVar(),a=Ni(o.sub(n)).toVar(),u=Ni().toVar(),l=Ni().toVar(),d=Ni().toVar();return d.assign(o),xi(o.greaterThan(0),(()=>{l.assign(a.div(o))})).else((()=>{l.assign(0)})),xi(l.lessThanEqual(0),(()=>{u.assign(0)})).else((()=>{xi(s.greaterThanEqual(o),(()=>{u.assign(r.sub(i).div(a))})).elseif(r.greaterThanEqual(o),(()=>{u.assign(uo(2,i.sub(s).div(a)))})).else((()=>{u.assign(uo(4,s.sub(r).div(a)))})),u.mulAssign(1/6),xi(u.lessThan(0),(()=>{u.addAssign(1)}))})),wi(u,l,d)}));wf.setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),Mf.setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]});const Ff=mi((([e])=>{const t=wi(e).toVar(),s=Bi(To(t,wi(.04045))).toVar(),r=wi(t.div(12.92)).toVar(),i=wi(Ta(la(t.add(wi(.055)),wi(0)).div(1.055),wi(2.4))).toVar();return va(r,i,s)}));Ff.setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]});const Bf=(e,t)=>{e=Ni(e),t=Ni(t);const s=Ai(t.dFdx(),t.dFdy()).length().mul(.7071067811865476);return Ea(e.sub(s),e.add(s),t)},Of=(e,t,s,r)=>va(e,t,s[r].clamp()),Lf=(e,t,s=io())=>Of(e,t,s,"x"),Uf=(e,t,s=io())=>Of(e,t,s,"y"),If=(e,t,s,r,i)=>va(e,t,Bf(s,r[i])),Df=(e,t,s,r=io())=>If(e,t,s,r,"x"),Pf=(e,t,s,r=io())=>If(e,t,s,r,"y"),Vf=(e=1,t=0,s=io())=>s.mul(e).add(t),Gf=(e,t=1)=>(e=Ni(e)).abs().pow(t).mul(e.sign()),kf=(e,t=1,s=.5)=>Ni(e).sub(s).mul(t).add(s),zf=(e=io(),t=1,s=0)=>Zm(e.convert("vec2|vec3")).mul(t).add(s),$f=(e=io(),t=1,s=0)=>tf(e.convert("vec2|vec3")).mul(t).add(s),Hf=(e=io(),t=1,s=0)=>{e=e.convert("vec2|vec3");return Oi(tf(e),Zm(e.add(Ai(19,73)))).mul(t).add(s)},Wf=(e=io(),t=1)=>Sf(e.convert("vec2|vec3"),t,_i(1)),jf=(e=io(),t=1)=>Rf(e.convert("vec2|vec3"),t,_i(1)),Xf=(e=io(),t=1)=>Cf(e.convert("vec2|vec3"),t,_i(1)),qf=(e=io())=>af(e.convert("vec2|vec3")),Yf=(e=io(),t=3,s=2,r=.5,i=1)=>pf(e,_i(t),s,r).mul(i),Kf=(e=io(),t=3,s=2,r=.5,i=1)=>mf(e,_i(t),s,r).mul(i),Qf=(e=io(),t=3,s=2,r=.5,i=1)=>gf(e,_i(t),s,r).mul(i),Zf=(e=io(),t=3,s=2,r=.5,i=1)=>ff(e,_i(t),s,r).mul(i);function Jf(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function eT(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}class tT{constructor(){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparent=[],this.lightsNode=new Wl([]),this.lightsArray=[],this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparent.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,r,i,n){let o=this.renderItems[this.renderItemsIndex];return void 0===o?(o={id:e.id,object:e,geometry:t,material:s,groupOrder:r,renderOrder:e.renderOrder,z:i,group:n},this.renderItems[this.renderItemsIndex]=o):(o.id=e.id,o.object=e,o.geometry=t,o.material=s,o.groupOrder=r,o.renderOrder=e.renderOrder,o.z=i,o.group=n),this.renderItemsIndex++,o}push(e,t,s,r,i,n){const o=this.getNextRenderItem(e,t,s,r,i,n);!0===e.occlusionTest&&this.occlusionQueryCount++,(!0===s.transparent?this.transparent:this.opaque).push(o)}unshift(e,t,s,r,i,n){const o=this.getNextRenderItem(e,t,s,r,i,n);(!0===s.transparent?this.transparent:this.opaque).unshift(o)}pushLight(e){this.lightsArray.push(e)}getLightsNode(){return this.lightsNode.fromLights(this.lightsArray)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||Jf),this.transparent.length>1&&this.transparent.sort(t||eT)}finish(){this.lightsNode.fromLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null}}}class sT{constructor(){this.lists=new Us}get(e,t){const s=this.lists,r=[e,t];let i=s.get(r);return void 0===i&&(i=new tT,s.set(r,i)),i}dispose(){this.lists=new Us}}let rT=0;class iT{constructor(){this.id=rT++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!0,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new o,this.scissor=!1,this.scissorValue=new o,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0}}class nT{constructor(){this.chainMaps={}}get(e,t,s=null){const r=[e,t];let i;if(null===s)i="default";else{let e,t;s.isWebGLMultipleRenderTargets?(e=s.texture[0].format,t=s.texture.length):(e=s.texture.format,t=1),i=`${t}:${e}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const n=this.getChainMap(i);let o=n.get(r);return void 0===o&&(o=new iT,n.set(r,o)),null!==s&&(o.sampleCount=0===s.samples?1:s.samples),o}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Us)}dispose(){this.chainMaps={}}}const oT=new n;class aT extends Vs{constructor(e,t){super(),this.backend=e,this.info=t}updateRenderTarget(e,t=0){const s=this.get(e),r=0===e.samples?1:e.samples,i=s.depthTextureMips||(s.depthTextureMips={});let n,o;e.isWebGLMultipleRenderTargets?(o=e.texture,n=e.texture[0]):(o=[e.texture],n=e.texture);const a=this.getSize(n),u=a.width>>t,l=a.height>>t;let d=e.depthTexture||i[t],c=!1;void 0===d&&(d=new b,d.format=be,d.type=Ne,d.image.width=u,d.image.height=l,i[t]=d),s.width===a.width&&a.height===s.height||(c=!0,d.needsUpdate=!0,d.image.width=u,d.image.height=l),s.width=a.width,s.height=a.height,s.textures=o,s.depthTexture=d,s.depth=e.depthBuffer,s.stencil=e.stencilBuffer,s.sampleCount!==r&&(c=!0,d.needsUpdate=!0,s.sampleCount=r);const h={sampleCount:r};for(let e=0;e<o.length;e++){const t=o[e];c&&(t.needsUpdate=!0),this.updateTexture(t,h)}if(this.updateTexture(d,h),!0!==s.initialized){s.initialized=!0;const t=()=>{if(e.removeEventListener("dispose",t),void 0!==o)for(let e=0;e<o.length;e++)this._destroyTexture(o[e]);else this._destroyTexture(n);this._destroyTexture(d)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const s=this.get(e);if(!0===s.initialized&&s.version===e.version)return;const r=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,i=this.backend;r&&!0===s.initialized&&(i.destroySampler(e),i.destroyTexture(e));const{width:n,height:o,depth:a}=this.getSize(e);if(t.width=n,t.height=o,t.depth=a,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,n,o):1,r||!0===e.isStorageTexture)i.createSampler(e),i.createTexture(e,t);else{if(!0!==s.initialized&&i.createSampler(e),e.version>0){const r=e.image;if(void 0===r);else if(!1===r.complete);else{if(e.images){const s=[];for(const t of e.images)s.push(t);t.images=s}else t.image=r;void 0!==s.isDefaultTexture&&!0!==s.isDefaultTexture||(i.createTexture(e,t),s.isDefaultTexture=!1),i.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&i.generateMipmaps(e)}}else i.createDefaultTexture(e),s.isDefaultTexture=!0}if(!0!==s.initialized){s.initialized=!0,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",t)}s.version=e.version}getSize(e,t=oT){let s=e.images?e.images[0]:e.image;return s?(void 0!==s.image&&(s=s.image),t.width=s.width,t.height=s.height,t.depth=e.isCubeTexture?6:s.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let r;return r=e.isCompressedTexture?e.mipmaps.length:Math.floor(Math.log2(Math.max(t,s)))+1,r}needsMipmaps(e){return!!this.isEnvironmentTexture(e)||(!0===e.isCompressedTexture||e.minFilter!==N&&e.minFilter!==D)}isEnvironmentTexture(e){const t=e.mapping;return t===_e||t===ve||t===Se||t===Ae}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class uT extends r{constructor(e,t,s,r=1){super(e,t,s),this.a=r}set(e,t,s,r=1){return this.a=r,super.set(e,t,s)}copy(e){return void 0!==e.a&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}const lT=new uT;class dT extends Vs{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,s){const r=this.renderer,i=this.nodes.getBackgroundNode(e)||e.background;let n=!1;if(null===i)r._clearColor.getRGB(lT,this.renderer.currentColorSpace),lT.a=r._clearColor.a;else if(!0===i.isColor)i.getRGB(lT,this.renderer.currentColorSpace),lT.a=1,n=!0;else if(!0===i.isNode){const s=this.get(e),n=i;lT.copy(r._clearColor);let o=s.backgroundMesh;if(void 0===o){const e=pn(Oi(n),{getUV:()=>Eu,getTextureLevel:()=>xh}).mul(yh);let t=pl();t=t.setZ(t.w);const r=new Od;r.side=O,r.depthTest=!1,r.depthWrite=!1,r.fog=!1,r.vertexNode=t,r.fragmentNode=e,s.backgroundMeshNode=e,s.backgroundMesh=o=new U(new Re(1,32,32),r),o.frustumCulled=!1,o.onBeforeRender=function(e,t,s){this.matrixWorld.copyPosition(s.matrixWorld)}}const a=n.getCacheKey();s.backgroundCacheKey!==a&&(s.backgroundMeshNode.node=Oi(n),o.material.needsUpdate=!0,s.backgroundCacheKey=a),t.unshift(o,o.geometry,o.material,0,0,null)}if(!0===r.autoClear||!0===n){lT.multiplyScalar(lT.a);const e=s.clearColorValue;e.r=lT.r,e.g=lT.g,e.b=lT.b,e.a=lT.a,s.depthClearValue=r._clearDepth,s.stencilClearValue=r._clearStencil,s.clearColor=!0===r.autoClearColor,s.clearDepth=!0===r.autoClearDepth,s.clearStencil=!0===r.autoClearStencil}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}class cT{constructor(e,t,s,r,i,n,o){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.nodeAttributes=r,this.bindings=i,this.updateNodes=n,this.updateBeforeNodes=o,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings){let s=t;!0!==t.shared&&(s=t.clone()),e.push(s)}return e}}class hT extends Vs{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new ac,this.nodeBuilderCache=new Map,this.callHashCache=new Us,this.groupsData=new Us}updateGroup(e){const t=e.groupNode,s=t.name;if(s===Er.name)return!0;if(s===Rr.name){const t=this.get(e),s=this.nodeFrame.renderId;return t.renderId!==s&&(t.renderId=s,!0)}if(s===Ar.name){const t=this.get(e),s=this.nodeFrame.frameId;return t.frameId!==s&&(t.frameId=s,!0)}const r=[t,e];let i=this.groupsData.get(r);return void 0===i&&this.groupsData.set(r,i={}),i.version!==t.version&&(i.version=t.version,!0)}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const{nodeBuilderCache:r}=this,i=this.getForRenderCacheKey(e);if(s=r.get(i),void 0===s){const t=this.backend.createNodeBuilder(e.object,this.renderer,e.scene);t.material=e.material,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.toneMappingNode=this.getToneMappingNode(),t.build(),s=this._createNodeBuilderState(t),r.set(i,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const r=this.backend.createNodeBuilder(e,this.renderer);r.build(),s=this._createNodeBuilderState(r),t.nodeBuilderState=r}return s}_createNodeBuilderState(e){return new cT(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getToneMappingNode(){return!1===this.isToneMappingState?null:this.renderer.toneMappingNode||this.get(this.renderer).toneMappingNode||null}getCacheKey(e,t){const s=[e,t],r=this.renderer.info.calls;let i=this.callHashCache.get(s);if(void 0===i||i.callId!==r){const n=this.getEnvironmentNode(e),o=this.getFogNode(e),a=this.getToneMappingNode(),u=[];t&&u.push(t.getCacheKey()),n&&u.push(n.getCacheKey()),o&&u.push(o.getCacheKey()),a&&u.push(a.getCacheKey()),i={callId:r,cacheKey:u.join(",")},this.callHashCache.set(s,i)}return i.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e),this.updateToneMapping()}get isToneMappingState(){const e=this.renderer.getRenderTarget();return!e||!e.isCubeRenderTarget}updateToneMapping(){const e=this.renderer,t=this.get(e),s=e.toneMapping;if(this.isToneMappingState&&s!==j){if(t.toneMapping!==s){const r=t.rendererToneMappingNode||dp(s,qa("toneMappingExposure","float",e));r.toneMapping=s,t.rendererToneMappingNode=r,t.toneMappingNode=r,t.toneMapping=s}}else delete t.toneMappingNode,delete t.toneMapping}updateBackground(e){const t=this.get(e),s=e.background;if(s){if(t.background!==s){let e=null;if(!0===s.isCubeTexture)e=Gl(s,Eu);else if(!0===s.isTexture){let t=null;s.mapping===_e||s.mapping===ve?(t=Jl(),s.flipY=!1):t=pd,e=Ha(s,t).setUpdateMatrix(!0)}else s.isColor;t.backgroundNode=e,t.background=s}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){let e=null;s.isFogExp2?e=zp(qa("color","color",s),qa("density","float",s)):s.isFog&&(e=Gp(qa("color","color",s),qa("near","float",s),qa("far","float",s))),t.fogNode=e,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){let e=null;!0===s.isCubeTexture?e=Gl(s):!0===s.isTexture&&(e=Ha(s)),t.environmentNode=e,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,s=null,r=null,i=null){const n=this.nodeFrame;return n.renderer=e,n.scene=t,n.object=s,n.camera=r,n.material=i,n}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}updateBefore(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const e of s.updateBeforeNodes)t.updateBeforeNode(e)}updateForCompute(e){const t=this.getNodeFrame(),s=this.getForCompute(e);for(const e of s.updateNodes)t.updateNode(e)}updateForRender(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const e of s.updateNodes)t.updateNode(e)}dispose(){super.dispose(),this.nodeFrame=new ac,this.nodeBuilderCache=new Map}}const pT=new I,gT=new i,mT=new o,fT=new Ee,TT=new u,xT=new n;class yT{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:s=!1,alpha:r=!0}=t;this.domElement=e.getDomElement(),this.backend=e,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=r,this.logarithmicDepthBuffer=s,this.outputColorSpace=h,this.toneMapping=j,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=!0,this.stencil=!0,this.info=new qs,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new o(0,0,this._width,this._height),this._scissor=new o(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null;const i=!0===this.alpha?0:1;this._clearColor=new uT(0,0,0,i),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._initialized=!1,this._initPromise=null,this.shadowMap={enabled:!1,type:null},this.xr={enabled:!1}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise((async(e,t)=>{const s=this.backend;try{await s.init(this)}catch(e){return void t(e)}this._nodes=new hT(this,s),this._animation=new Ls(this._nodes,this.info),this._attributes=new Hs(s),this._background=new dT(this,this._nodes),this._geometries=new Xs(this._attributes,this.info),this._textures=new aT(s,this.info),this._pipelines=new er(s,this._nodes),this._bindings=new tr(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new Ps(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new sT,this._renderContexts=new nT,this._initialized=!0,e()}))),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compile(){}async render(e,t){!1===this._initialized&&await this.init();const s=this._nodes.nodeFrame,r=s.renderId,i=this._currentRenderContext,n=this._currentRenderObjectFunction,o=!0===e.isScene?e:pT,a=this._renderTarget,u=this._renderContexts.get(e,t,a),l=this._activeCubeFace,d=this._activeMipmapLevel;this._currentRenderContext=u,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,s.renderId=this.info.calls;const c=this.coordinateSystem;t.coordinateSystem!==c&&(t.coordinateSystem=c,t.updateProjectionMatrix()),!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===this.info.autoReset&&this.info.reset();let h=this._viewport,p=this._scissor,g=this._pixelRatio;null!==a&&(h=a.viewport,p=a.scissor,g=1),this.getDrawingBufferSize(gT),mT.set(0,0,gT.width,gT.height);const m=void 0===h.minDepth?0:h.minDepth,f=void 0===h.maxDepth?1:h.maxDepth;u.viewportValue.copy(h).multiplyScalar(g).floor(),u.viewportValue.width>>=d,u.viewportValue.height>>=d,u.viewportValue.minDepth=m,u.viewportValue.maxDepth=f,u.viewport=!1===u.viewportValue.equals(mT),u.scissorValue.copy(p).multiplyScalar(g).floor(),u.scissor=this._scissorTest&&!1===u.scissorValue.equals(mT),u.scissorValue.width>>=d,u.scissorValue.height>>=d,u.depth=this.depth,u.stencil=this.stencil,o.onBeforeRender(this,e,t,a),TT.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),fT.setFromProjectionMatrix(TT,c);const T=this._renderLists.get(e,t);if(T.begin(),this._projectObject(e,t,0,T),T.finish(),!0===this.sortObjects&&T.sort(this._opaqueSort,this._transparentSort),null!==a){this._textures.updateRenderTarget(a,d);const e=this._textures.get(a);u.textures=e.textures,u.depthTexture=e.depthTexture,u.width=e.width,u.height=e.height,u.renderTarget=a}else u.textures=null,u.depthTexture=null,u.width=this.domElement.width,u.height=this.domElement.height;u.width>>=d,u.height>>=d,u.activeCubeFace=l,u.activeMipmapLevel=d,u.occlusionQueryCount=T.occlusionQueryCount,this._nodes.updateScene(o),this._background.update(o,T,u),this.backend.beginRender(u);const x=T.opaque,y=T.transparent,b=T.lightsNode;x.length>0&&this._renderObjects(x,t,o,b),y.length>0&&this._renderObjects(y,t,o,b),this.backend.finishRender(u),s.renderId=r,this._currentRenderContext=i,this._currentRenderObjectFunction=n,o.onAfterRender(this,e,t,a)}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(e)}getArrayBuffer(e){return this.getArrayBufferAsync(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio=e,this.setSize(this._width,this._height,!1)}setDrawingBufferSize(e,t,s){this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,s=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===s&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,r){const i=this._scissor;e.isVector4?i.copy(e):i.set(e,t,s,r)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,r,i=0,n=1){const o=this._viewport;e.isVector4?o.copy(e):o.set(e,t,s,r),o.minDepth=i,o.maxDepth=n}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){let r=null;const i=this._renderTarget;null!==i&&(this._textures.updateRenderTarget(i),r=this._textures.get(i)),this.backend.clear(e,t,s,r)}clearColor(){this.clear(!0,!1,!1)}clearDepth(){this.clear(!1,!0,!1)}clearStencil(){this.clear(!1,!1,!0)}get currentColorSpace(){const e=this._renderTarget;if(null!==e){const t=e.texture;return(Array.isArray(t)?t[0]:t).colorSpace}return this.outputColorSpace}dispose(){this.info.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}async compute(e){!1===this._initialized&&await this.init();const t=this._nodes.nodeFrame,s=t.renderId;this.info.calls++,this.info.compute.calls++,t.renderId=this.info.calls;const r=this.backend,i=this._pipelines,n=this._bindings,o=this._nodes,a=Array.isArray(e)?e:[e];if(void 0===a[0]||!0!==a[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const t of a){if(!1===i.has(t)){const e=()=>{t.removeEventListener("dispose",e),i.delete(t),n.delete(t),o.delete(t)};t.addEventListener("dispose",e),t.onInit({renderer:this})}o.updateForCompute(t),n.updateForCompute(t);const s=n.getForCompute(t),a=i.getForCompute(t,s);r.compute(e,t,s,a)}r.finishCompute(e),t.renderId=s}hasFeature(e){return this.backend.hasFeature(e)}copyFramebufferToTexture(e){const t=this._currentRenderContext;this._textures.updateTexture(e),this.backend.copyFramebufferToTexture(e,t)}readRenderTargetPixelsAsync(e,t,s,r,i){return this.backend.copyTextureToBuffer(e.texture,t,s,r,i)}_projectObject(e,t,s,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)s=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)r.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||fT.intersectsSprite(e)){!0===this.sortObjects&&xT.setFromMatrixPosition(e.matrixWorld).applyMatrix4(TT);const t=e.geometry,i=e.material;i.visible&&r.push(e,t,i,s,xT.z,null)}}else if(e.isLineLoop);else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||fT.intersectsObject(e))){const t=e.geometry,i=e.material;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),xT.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(TT)),Array.isArray(i)){const n=t.groups;for(let o=0,a=n.length;o<a;o++){const a=n[o],u=i[a.materialIndex];u&&u.visible&&r.push(e,t,u,s,xT.z,a)}}else i.visible&&r.push(e,t,i,s,xT.z,null)}const i=e.children;for(let e=0,n=i.length;e<n;e++)this._projectObject(i[e],t,s,r)}_renderObjects(e,t,s,r){for(let i=0,n=e.length;i<n;i++){const n=e[i],{object:o,geometry:a,material:u,group:l}=n;if(t.isArrayCamera){const e=t.cameras;for(let t=0,i=e.length;t<i;t++){const i=e[t];if(o.layers.test(i.layers)){const e=i.viewport,t=void 0===e.minDepth?0:e.minDepth,n=void 0===e.maxDepth?1:e.maxDepth,d=this._currentRenderContext.viewportValue;d.copy(e).multiplyScalar(this._pixelRatio).floor(),d.minDepth=t,d.maxDepth=n,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(o,s,i,a,u,l,r)}}}else this._currentRenderObjectFunction(o,s,t,a,u,l,r)}}renderObject(e,t,s,r,i,n,o){let a;if(e.onBeforeRender(this,t,s,r,i,n),i.onBeforeRender(this,t,s,r,i,n),null!==t.overrideMaterial){const e=t.overrideMaterial;i.positionNode&&i.positionNode.isNode&&(a=e.positionNode,e.positionNode=i.positionNode),i=e}!0===i.transparent&&i.side===Ce&&!1===i.forceSinglePass?(i.side=O,this._renderObjectDirect(e,i,t,s,o,"backSide"),i.side=we,this._renderObjectDirect(e,i,t,s,o),i.side=Ce):this._renderObjectDirect(e,i,t,s,o),void 0!==a&&(t.overrideMaterial.positionNode=a),e.onAfterRender(this,t,s,r,i,n)}_renderObjectDirect(e,t,s,r,i,n){const o=this._objects.get(e,t,s,r,i,this._currentRenderContext,n);this._nodes.updateBefore(o),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),this._nodes.updateForRender(o),this._geometries.updateForRender(o),this._bindings.updateForRender(o),this._pipelines.updateForRender(o),this.backend.draw(o,this.info)}}class bT{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function NT(e){return e+($s-e%$s)%$s}function _T(e,t=4){return NT(vT(t)*e)}function vT(e){return e+(4-e%4)%4}class ST extends bT{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return NT(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class AT extends ST{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}class RT extends AT{constructor(e){super(e),this.isUniformsGroup=!0,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,s=this.uniforms.length;t<s;t++){const s=this.uniforms[t],r=e%$s;0!==r&&$s-r-s.boundary<0?e+=$s-r:r%s.boundary!=0&&(e+=r%s.boundary),s.offset=e/this.bytesPerElement,e+=s.itemSize*this.bytesPerElement}return Math.ceil(e/$s)*$s}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isFloatUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void 0}updateNumber(e){let t=!1;const s=this.buffer,r=e.getValue(),i=e.offset;return s[i]!==r&&(s[i]=r,t=!0),t}updateVector2(e){let t=!1;const s=this.buffer,r=e.getValue(),i=e.offset;return s[i+0]===r.x&&s[i+1]===r.y||(s[i+0]=r.x,s[i+1]=r.y,t=!0),t}updateVector3(e){let t=!1;const s=this.buffer,r=e.getValue(),i=e.offset;return s[i+0]===r.x&&s[i+1]===r.y&&s[i+2]===r.z||(s[i+0]=r.x,s[i+1]=r.y,s[i+2]=r.z,t=!0),t}updateVector4(e){let t=!1;const s=this.buffer,r=e.getValue(),i=e.offset;return s[i+0]===r.x&&s[i+1]===r.y&&s[i+2]===r.z&&s[i+4]===r.w||(s[i+0]=r.x,s[i+1]=r.y,s[i+2]=r.z,s[i+3]=r.w,t=!0),t}updateColor(e){let t=!1;const s=this.buffer,r=e.getValue(),i=e.offset;return s[i+0]===r.r&&s[i+1]===r.g&&s[i+2]===r.b||(s[i+0]=r.r,s[i+1]=r.g,s[i+2]=r.b,t=!0),t}updateMatrix3(e){let t=!1;const s=this.buffer,r=e.getValue().elements,i=e.offset;return s[i+0]===r[0]&&s[i+1]===r[1]&&s[i+2]===r[2]&&s[i+4]===r[3]&&s[i+5]===r[4]&&s[i+6]===r[5]&&s[i+8]===r[6]&&s[i+9]===r[7]&&s[i+10]===r[8]||(s[i+0]=r[0],s[i+1]=r[1],s[i+2]=r[2],s[i+4]=r[3],s[i+5]=r[4],s[i+6]=r[5],s[i+8]=r[6],s[i+9]=r[7],s[i+10]=r[8],t=!0),t}updateMatrix4(e){let t=!1;const s=this.buffer,r=e.getValue().elements,i=e.offset;return!1===function(e,t,s){for(let r=0,i=t.length;r<i;r++)if(e[s+r]!==t[r])return!1;return!0}(s,r,i)&&(s.set(r,i),t=!0),t}}let ET=0;class CT extends RT{constructor(e,t){super(e),this.id=ET++,this.groupNode=t,this.isNodeUniformsGroup=!0}get shared(){return this.groupNode.shared}getNodes(){const e=[];for(const t of this.uniforms){const s=t.nodeUniform.node;if(!s)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(s)}return e}}let wT=0;class MT extends bT{constructor(e,t){super(e),this.id=wT++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.isSampledTexture=!0}get needsBindingsUpdate(){const{texture:e,version:t}=this;return!!e.isVideoTexture||t!==e.version}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}}class FT extends MT{constructor(e,t){super(e,t?t.value:null),this.textureNode=t}get needsBindingsUpdate(){return this.textureNode.value!==this.texture||super.needsBindingsUpdate}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class BT extends FT{constructor(e,t){super(e,t),this.isSampledCubeTexture=!0}}const OT={[Co.ATAN2]:"atan",textureDimensions:"textureSize"},LT={low:"lowp",medium:"mediump",high:"highp"},UT={instance:!0},IT="\nprecision highp float;\nprecision highp int;\nprecision mediump sampler2DArray;\nprecision lowp sampler2DShadow;\n";class DT extends oc{constructor(e,t,s=null){super(e,t,new pm,s),this.uniformGroups={}}getMethod(e){return OT[e]||e}getPropertyName(e,t){return e.isOutputStructVar?"":super.getPropertyName(e,t)}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(this.getType(e.type)+" "+e.name);return`${this.getType(t.type)} ${t.name}( ${r.join(", ")} ) {\n\n\t${s.vars}\n\n${s.code}\n\treturn ${s.result};\n\n}`}generateTextureLoad(e,t,s,r,i="0"){return r?`texelFetch( ${t}, ivec3( ${s}, ${r} ), ${i} )`:`texelFetch( ${t}, ${s}, ${i} )`}generateTexture(e,t,s,r){return e.isDepthTexture?`texture( ${t}, ${s} ).x`:(r&&(s=`vec3( ${s}, ${r} )`),`texture( ${t}, ${s} )`)}generateTextureLevel(e,t,s,r){return`textureLod( ${t}, ${s}, ${r} )`}generateTextureCompare(e,t,s,r,i,n=this.shaderStage){if("fragment"===n)return`texture( ${t}, vec3( ${s}, ${r} ) )`}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)e.isOutputStructVar||t.push(`${this.getVar(e.type,e.name)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],s=[],r={};for(const e of t){let t=null,i=!1;if("texture"===e.type){const s=e.node.value;t=s.compareFunction?`sampler2DShadow ${e.name};`:!0===s.isDataArrayTexture?`sampler2DArray ${e.name};`:`sampler2D ${e.name};`}else if("cubeTexture"===e.type)t=`samplerCube ${e.name};`;else if("buffer"===e.type){const s=e.node,r=this.getType(s.bufferType),i=s.bufferCount,n=i>0?i:"";t=`${s.name} {\n\t${r} ${e.name}[${n}];\n};\n`}else{t=`${this.getVectorType(e.type)} ${e.name};`,i=!0}const n=e.node.precision;if(null!==n&&(t=LT[n]+" "+t),i){t="\t"+t;const s=e.groupNode.name;(r[s]||(r[s]=[])).push(t)}else t="uniform "+t,s.push(t)}let i="";for(const t in r){const s=r[t];i+=this._getGLSLUniformStruct(e+"_"+t,s.join("\n"))+"\n"}return i+=s.join("\n"),i}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==Me){let s=e;e.isInterleavedBufferAttribute&&(s=e.data);const r=s.array;!1==(r instanceof Uint32Array||r instanceof Int32Array)&&(t=t.slice(1))}return t}getAttributes(e){let t="";if("vertex"===e){const e=this.getAttributesArray();let s=0;for(const r of e)t+=`layout( location = ${s++} ) in ${r.type} ${r.name};\n`}return t}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`layout( location = ${e} ) out ${r} m${e};`)}return t.join("\n")}getStructs(e){const t=[],s=this.structs[e];if(0===s.length)return"layout( location = 0 ) out vec4 fragColor;\n";for(let e=0,r=s.length;e<r;e++){const r=s[e];let i="\n";i+=this.getStructMembers(r),i+="\n",t.push(i)}return t.join("\n\n")}getVaryings(e){let t="";const s=this.varyings;if("vertex"===e)for(const e of s){const s=e.type;t+=`${"int"===s||"uint"===s?"flat ":""}${e.needsInterpolation?"out":"/*out*/"} ${s} ${e.name};\n`}else if("fragment"===e)for(const e of s)if(e.needsInterpolation){const s=e.type;t+=`${"int"===s||"uint"===s?"flat ":""}in ${s} ${e.name};\n`}return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord"}getFragDepth(){return"gl_FragDepth"}isAvailable(e){return!0===UT[e]}isFlipY(){return!0}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\n${IT}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\n${IT}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};for(const t in e){let s="// code\n\n";s+=this.flowCode[t];const r=this.flowNodes[t],i=r[r.length-1];for(const e of r){const r=this.getFlowData(e),n=e.name;n&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${n}\n\t`),s+=`${r.code}\n\t`,e===i&&"compute"!==t&&(s+="// result\n\t","vertex"===t?(s+="gl_Position = ",s+=`${r.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${r.result};`)))}const n=e[t];n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.vars=this.getVars(t),n.structs=this.getStructs(t),n.codes=this.getCodes(t),n.flow=s}null!==this.material&&(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment))}getUniformFromNode(e,t,s,r=null){const i=super.getUniformFromNode(e,t,s,r),n=this.getDataFromNode(e,s,this.globalCache);let o=n.uniformGPU;if(void 0===o){if("texture"===t)o=new FT(i.name,i.node),this.bindings[s].push(o);else if("cubeTexture"===t)o=new BT(i.name,i.node),this.bindings[s].push(o);else if("buffer"===t){e.name=`NodeBuffer_${e.id}`;const t=new AT(e.name,e.value);i.name=`buffer${e.id}`,this.bindings[s].push(t),o=t}else{const r=e.groupNode,n=r.name,a=this.uniformGroups[s]||(this.uniformGroups[s]={});let u=a[n];void 0===u&&(u=new CT(s+"_"+n,r),a[n]=u,this.bindings[s].push(u)),o=this.getNodeUniform(i,t),u.addUniform(o)}n.uniformGPU=o}return i}}let PT=null,VT=null,GT=null;class kT{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(e){}finish(e){}draw(e,t){}createProgram(e){}destroyProgram(e){}createBindings(e){}updateBindings(e){}createRenderPipeline(e){}createComputePipeline(e,t){}destroyPipeline(e){}needsRenderUpdate(e){}getRenderCacheKey(e){}createNodeBuilder(e){}createSampler(e){}createDefaultTexture(e){}createTexture(e){}copyTextureToBuffer(e,t,s,r,i){}createAttribute(e){}createIndexAttribute(e){}updateAttribute(e){}destroyAttribute(e){}getContext(){}updateSize(){}hasFeature(e){}getInstanceCount(e){const{object:t,geometry:s}=e;return s.isInstancedBufferGeometry?s.instanceCount:t.isInstancedMesh?t.count:1}getDrawingBufferSize(){return PT=PT||new i,this.renderer.getDrawingBufferSize(PT)}getScissor(){return VT=VT||new o,this.renderer.getScissor(VT)}getClearColor(){const e=this.renderer;return GT=GT||new uT,e.getClearColor(GT),GT.getRGB(GT,this.renderer.currentColorSpace),GT}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:Fe(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${$} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){this.data.delete(e)}}class zT{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:r}=s,i=e.array,n=e.usage||r.STATIC_DRAW,o=e.isInterleavedBufferAttribute?e.data:e,a=s.get(o);let u,l=a.bufferGPU;if(void 0===l&&(l=r.createBuffer(),r.bindBuffer(t,l),r.bufferData(t,i,n),r.bindBuffer(t,null),a.bufferGPU=l,a.bufferType=t,a.version=o.version),i instanceof Float32Array)u=r.FLOAT;else if(i instanceof Uint16Array)u=e.isFloat16BufferAttribute?r.HALF_FLOAT:r.UNSIGNED_SHORT;else if(i instanceof Int16Array)u=r.SHORT;else if(i instanceof Uint32Array)u=r.UNSIGNED_INT;else if(i instanceof Int32Array)u=r.INT;else if(i instanceof Int8Array)u=r.BYTE;else if(i instanceof Uint8Array)u=r.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+i);u=r.UNSIGNED_BYTE}s.set(e,{bufferGPU:l,type:u,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version,isInteger:u===r.INT||u===r.UNSIGNED_INT||e.gpuType===Me})}updateAttribute(e){const t=this.backend,{gl:s}=t,r=e.array,i=e.isInterleavedBufferAttribute?e.data:e,n=t.get(i),o=n.bufferType,a=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(s.bindBuffer(o,n.bufferGPU),0===a.length)s.bufferSubData(o,0,r);else{for(let e=0,t=a.length;e<t;e++){const t=a[e];s.bufferSubData(o,t.start*r.BYTES_PER_ELEMENT,r,t.start,t.count)}i.clearUpdateRanges()}s.bindBuffer(o,null),n.version=i.version}destroyAttribute(e){const t=this.backend,{gl:s}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const r=t.get(e);s.deleteBuffer(r.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:s}=t,r=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:i}=t.get(r),n=e.array,o=n.byteLength;s.bindBuffer(s.COPY_READ_BUFFER,i);const a=s.createBuffer();s.bindBuffer(s.COPY_WRITE_BUFFER,a),s.bufferData(s.COPY_WRITE_BUFFER,o,s.STREAM_READ),s.copyBufferSubData(s.COPY_READ_BUFFER,s.COPY_WRITE_BUFFER,0,0,o),await t.utils._clientWaitAsync();const u=new e.array.constructor(n.length);return s.getBufferSubData(s.COPY_WRITE_BUFFER,0,u),s.deleteBuffer(a),u.buffer}}let $T,HT,WT=!1;class jT{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},!1===WT&&(this._init(this.gl),WT=!0)}_init(e){$T={[Be]:e.FUNC_ADD,[Oe]:e.FUNC_SUBTRACT,[Le]:e.FUNC_REVERSE_SUBTRACT},HT={[Ue]:e.ZERO,[Ie]:e.ONE,[De]:e.SRC_COLOR,[Pe]:e.SRC_ALPHA,[Ve]:e.SRC_ALPHA_SATURATE,[Ge]:e.DST_COLOR,[ke]:e.DST_ALPHA,[ze]:e.ONE_MINUS_SRC_COLOR,[$e]:e.ONE_MINUS_SRC_ALPHA,[He]:e.ONE_MINUS_DST_COLOR,[We]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==je?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===Xe?t.cullFace(t.BACK):e===qe?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:s}=this;e!==t&&(s.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,s,r,i,n,o,a){const{gl:u}=this;if(e!==L){if(!1===this.currentBlendingEnabled&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e===Ye)i=i||t,n=n||s,o=o||r,t===this.currentBlendEquation&&i===this.currentBlendEquationAlpha||(u.blendEquationSeparate($T[t],$T[i]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=i),s===this.currentBlendSrc&&r===this.currentBlendDst&&n===this.currentBlendSrcAlpha&&o===this.currentBlendDstAlpha||(u.blendFuncSeparate(HT[s],HT[r],HT[n],HT[o]),this.currentBlendSrc=s,this.currentBlendDst=r,this.currentBlendSrcAlpha=n,this.currentBlendDstAlpha=o),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||a!==this.currentPremultipledAlpha){if(this.currentBlendEquation===Be&&this.currentBlendEquationAlpha===Be||(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=Be,this.currentBlendEquationAlpha=Be),a)switch(e){case Je:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case Ze:u.blendFunc(u.ONE,u.ONE);break;case Qe:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case Ke:u.blendFuncSeparate(u.ZERO,u.SRC_COLOR,u.ZERO,u.SRC_ALPHA)}else switch(e){case Je:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case Ze:u.blendFunc(u.SRC_ALPHA,u.ONE);break;case Qe:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case Ke:u.blendFunc(u.ZERO,u.SRC_COLOR)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=a}}else!0===this.currentBlendingEnabled&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1)}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case at:t.depthFunc(t.NEVER);break;case ot:t.depthFunc(t.ALWAYS);break;case nt:t.depthFunc(t.LESS);break;case it:t.depthFunc(t.LEQUAL);break;case rt:t.depthFunc(t.EQUAL);break;case st:t.depthFunc(t.GEQUAL);break;case tt:t.depthFunc(t.GREATER);break;case et:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===s||(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===s||(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t){const{gl:s}=this;e.side===Ce?this.disable(s.CULL_FACE):this.enable(s.CULL_FACE);let r=e.side===O;t&&(r=!r),this.setFlipSided(r),e.blending===Je&&!1===e.transparent?this.setBlending(L):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const i=e.stencilWrite;this.setStencilTest(i),i&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?this.enable(s.SAMPLE_ALPHA_TO_COVERAGE):this.disable(s.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(e,t,s){const{gl:r}=this;e?(this.enable(r.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===s||(r.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(r.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}bindFramebuffer(e,t){const{gl:s,currentBoundFramebuffers:r}=this;return r[e]!==t&&(s.bindFramebuffer(e,t),r[e]=t,e===s.DRAW_FRAMEBUFFER&&(r[s.FRAMEBUFFER]=t),e===s.FRAMEBUFFER&&(r[s.DRAW_FRAMEBUFFER]=t),!0)}drawBuffers(e,t){const{gl:s}=this;let r=[],i=!1;if(null!==e.textures){r=this.currentDrawbuffers.get(t),void 0===r&&(r=[],this.currentDrawbuffers.set(t,r));const n=e.textures;if(r.length!==n.length||r[0]!==s.COLOR_ATTACHMENT0){for(let e=0,t=n.length;e<t;e++)r[e]=s.COLOR_ATTACHMENT0+e;r.length=n.length,i=!0}}else r[0]!==s.BACK&&(r[0]=s.BACK,i=!0);i&&s.drawBuffers(r)}activeTexture(e){const{gl:t,currentTextureSlot:s,maxTextures:r}=this;void 0===e&&(e=t.TEXTURE0+r-1),s!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,s){const{gl:r,currentTextureSlot:i,currentBoundTextures:n,maxTextures:o}=this;void 0===s&&(s=null===i?r.TEXTURE0+o-1:i);let a=n[s];void 0===a&&(a={type:void 0,texture:void 0},n[s]=a),a.type===e&&a.texture===t||(i!==s&&(r.activeTexture(s),this.currentTextureSlot=s),r.bindTexture(e,t),a.type=e,a.texture=t)}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:s}=this,r=s[t];void 0!==r&&void 0!==r.type&&(e.bindTexture(r.type,null),r.type=void 0,r.texture=void 0)}}class XT{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=w){const{gl:s,extensions:r}=this;let i;if(e===ut)return s.UNSIGNED_BYTE;if(e===lt)return s.UNSIGNED_SHORT_4_4_4_4;if(e===dt)return s.UNSIGNED_SHORT_5_5_5_1;if(e===ct)return s.BYTE;if(e===ht)return s.SHORT;if(e===pt)return s.UNSIGNED_SHORT;if(e===Me)return s.INT;if(e===R)return s.UNSIGNED_INT;if(e===x)return s.FLOAT;if(e===ee)return s.HALF_FLOAT;if(e===gt)return s.ALPHA;if(e===mt)return s.RGBA;if(e===ft)return s.LUMINANCE;if(e===Tt)return s.LUMINANCE_ALPHA;if(e===E)return s.DEPTH_COMPONENT;if(e===be)return s.DEPTH_STENCIL;if(e===xt)return s.RED;if(e===yt)return s.RED_INTEGER;if(e===bt)return s.RG;if(e===Nt)return s.RG_INTEGER;if(e===_t)return s.RGBA_INTEGER;if(e===vt||e===St||e===At||e===Rt)if(t===h){if(i=r.get("WEBGL_compressed_texture_s3tc_srgb"),null===i)return null;if(e===vt)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===St)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===At)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Rt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(i=r.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(e===vt)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===St)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===At)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Rt)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===Et||e===Ct||e===wt||e===Mt){if(i=r.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(e===Et)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Ct)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===wt)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Mt)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===Ft)return i=r.get("WEBGL_compressed_texture_etc1"),null!==i?i.COMPRESSED_RGB_ETC1_WEBGL:null;if(e===Bt||e===Ot){if(i=r.get("WEBGL_compressed_texture_etc"),null===i)return null;if(e===Bt)return t===h?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(e===Ot)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(e===Lt||e===Ut||e===It||e===Dt||e===Pt||e===Vt||e===Gt||e===kt||e===zt||e===$t||e===Ht||e===Wt||e===jt||e===Xt){if(i=r.get("WEBGL_compressed_texture_astc"),null===i)return null;if(e===Lt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Ut)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===It)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Dt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Pt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Vt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Gt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===kt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===zt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===$t)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Ht)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===Wt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===jt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Xt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===qt){if(i=r.get("EXT_texture_compression_bptc"),null===i)return null;if(e===qt)return t===h?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===Yt||e===Kt||e===Qt||e===Zt){if(i=r.get("EXT_texture_compression_rgtc"),null===i)return null;if(e===qt)return i.COMPRESSED_RED_RGTC1_EXT;if(e===Kt)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Qt)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Zt)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===Ne?s.UNSIGNED_INT_24_8:void 0!==s[e]?s[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise(((s,r)=>{!function i(){const n=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(n===e.WAIT_FAILED)return e.deleteSync(t),void r();n!==e.TIMEOUT_EXPIRED?(e.deleteSync(t),s()):requestAnimationFrame(i)}()}))}}let qT,YT,KT,QT=!1;class ZT{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},!1===QT&&(this._init(this.gl),QT=!0)}_init(e){qT={[Jt]:e.REPEAT,[es]:e.CLAMP_TO_EDGE,[ts]:e.MIRRORED_REPEAT},YT={[N]:e.NEAREST,[A]:e.NEAREST_MIPMAP_NEAREST,[ss]:e.NEAREST_MIPMAP_LINEAR,[D]:e.LINEAR,[rs]:e.LINEAR_MIPMAP_NEAREST,[S]:e.LINEAR_MIPMAP_LINEAR},KT={[is]:e.NEVER,[ns]:e.ALWAYS,[_]:e.LESS,[os]:e.LEQUAL,[as]:e.EQUAL,[us]:e.GEQUAL,[ls]:e.GREATER,[ds]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===N||e===A||e===ss?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let s;return s=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isDataArrayTexture?t.TEXTURE_2D_ARRAY:t.TEXTURE_2D,s}getInternalFormat(e,t,s,r,i=!1){const{gl:n,extensions:o}=this;if(null!==e&&void 0!==n[e])return n[e];let a=t;return t===n.RED&&(s===n.FLOAT&&(a=n.R32F),s===n.HALF_FLOAT&&(a=n.R16F),s===n.UNSIGNED_BYTE&&(a=n.R8)),t===n.RED_INTEGER&&(s===n.UNSIGNED_BYTE&&(a=n.R8UI),s===n.UNSIGNED_SHORT&&(a=n.R16UI),s===n.UNSIGNED_INT&&(a=n.R32UI),s===n.BYTE&&(a=n.R8I),s===n.SHORT&&(a=n.R16I),s===n.INT&&(a=n.R32I)),t===n.RG&&(s===n.FLOAT&&(a=n.RG32F),s===n.HALF_FLOAT&&(a=n.RG16F),s===n.UNSIGNED_BYTE&&(a=n.RG8)),t===n.RGBA&&(s===n.FLOAT&&(a=n.RGBA32F),s===n.HALF_FLOAT&&(a=n.RGBA16F),s===n.UNSIGNED_BYTE&&(a=r===h&&!1===i?n.SRGB8_ALPHA8:n.RGBA8),s===n.UNSIGNED_SHORT_4_4_4_4&&(a=n.RGBA4),s===n.UNSIGNED_SHORT_5_5_5_1&&(a=n.RGB5_A1)),t===n.DEPTH_COMPONENT&&(s===n.UNSIGNED_INT&&(a=n.DEPTH24_STENCIL8),s===n.FLOAT&&(a=n.DEPTH_COMPONENT32F)),t===n.DEPTH_STENCIL&&s===n.UNSIGNED_INT_24_8&&(a=n.DEPTH24_STENCIL8),a!==n.R16F&&a!==n.R32F&&a!==n.RG16F&&a!==n.RG32F&&a!==n.RGBA16F&&a!==n.RGBA32F||o.get("EXT_color_buffer_float"),a}setTextureParameters(e,t){const{gl:s,extensions:r}=this;s.texParameteri(e,s.TEXTURE_WRAP_S,qT[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,qT[t.wrapT]),e!==s.TEXTURE_3D&&e!==s.TEXTURE_2D_ARRAY||s.texParameteri(e,s.TEXTURE_WRAP_R,qT[t.wrapR]),s.texParameteri(e,s.TEXTURE_MAG_FILTER,YT[t.magFilter]);const i=t.minFilter===D?S:t.minFilter;if(s.texParameteri(e,s.TEXTURE_MIN_FILTER,YT[i]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,KT[t.compareFunction])),!0===r.has("EXT_texture_filter_anisotropic")){if(t.magFilter===N)return;if(t.minFilter!==ss&&t.minFilter!==S)return;if(t.type===x&&!1===r.has("OES_texture_float_linear"))return;t.anisotropy}}createDefaultTexture(e){const{gl:t,backend:s,defaultTextures:r}=this,i=this.getGLTextureType(e);let n=r[i];void 0===n&&(n=t.createTexture(),s.state.bindTexture(i,n),t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST),r[i]=n),s.set(e,{textureGPU:n,glTextureType:i,isDefault:!0})}createTexture(e,t){const{gl:s,backend:r}=this,{levels:i,width:n,height:o,depth:a}=t,u=r.utils.convert(e.format,e.colorSpace),l=r.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,u,l,e.colorSpace,e.isVideoTexture),c=s.createTexture(),h=this.getGLTextureType(e);r.state.bindTexture(h,c),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,e.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,e.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE),this.setTextureParameters(h,e),e.isDataArrayTexture?s.texStorage3D(s.TEXTURE_2D_ARRAY,i,d,n,o,a):e.isVideoTexture||s.texStorage2D(h,i,d,n,o),r.set(e,{textureGPU:c,glTextureType:h,glFormat:u,glType:l,glInternalFormat:d})}updateTexture(e,t){const{gl:s}=this,{width:r,height:i}=t,{textureGPU:n,glTextureType:o,glFormat:a,glType:u,glInternalFormat:l}=this.backend.get(e);if(e.isRenderTargetTexture||void 0===n)return;const d=e=>e.isDataTexture?e.image.data:e instanceof ImageBitmap||e instanceof OffscreenCanvas||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement?e:e.data;if(this.backend.state.bindTexture(o,n),e.isCompressedTexture){const r=e.mipmaps;for(let i=0;i<r.length;i++){const n=r[i];if(e.isCompressedArrayTexture){const r=t.image;e.format!==s.RGBA?null!==a&&s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,i,0,0,0,n.width,n.height,r.depth,a,n.data,0,0):s.texSubImage3D(s.TEXTURE_2D_ARRAY,i,0,0,0,n.width,n.height,r.depth,a,u,n.data)}else null!==a&&s.compressedTexSubImage2D(s.TEXTURE_2D,i,0,0,n.width,n.height,a,n.data)}}else if(e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const n=d(e[t]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,r,i,a,u,n)}}else if(e.isDataArrayTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,a,u,e.data)}else if(e.isVideoTexture)e.update(),s.texImage2D(o,0,l,a,u,t.image);else{const e=d(t.image);s.texSubImage2D(o,0,0,0,r,i,a,u,e)}}generateMipmaps(e){const{gl:t,backend:s}=this,{textureGPU:r,glTextureType:i}=s.get(e);s.state.bindTexture(i,r),t.generateMipmap(i)}deallocateRenderBuffers(e){const{gl:t,backend:s}=this;if(e){const r=s.get(e);if(r.renderBufferStorageSetup=void 0,r.framebuffer&&(t.deleteFramebuffer(r.framebuffer),r.framebuffer=void 0),r.depthRenderbuffer&&(t.deleteRenderbuffer(r.depthRenderbuffer),r.depthRenderbuffer=void 0),r.stencilRenderbuffer&&(t.deleteRenderbuffer(r.stencilRenderbuffer),r.stencilRenderbuffer=void 0),r.msaaFrameBuffer&&(t.deleteFramebuffer(r.msaaFrameBuffer),r.msaaFrameBuffer=void 0),r.msaaRenderbuffers){for(let e=0;e<r.msaaRenderbuffers.length;e++)t.deleteRenderbuffer(r.msaaRenderbuffers[e]);r.msaaRenderbuffers=void 0}}}destroyTexture(e){const{gl:t,backend:s}=this,{textureGPU:r,renderTarget:i}=s.get(e);this.deallocateRenderBuffers(i),t.deleteTexture(r),s.delete(e)}copyFramebufferToTexture(e,t){const{gl:s}=this,{state:r}=this.backend,{textureGPU:i}=this.backend.get(e),n=e.image.width,o=e.image.height;if(r.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.isDepthTexture){const e=s.createFramebuffer();s.bindFramebuffer(s.DRAW_FRAMEBUFFER,e),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,i,0),s.blitFramebuffer(0,0,n,o,0,0,n,o,s.DEPTH_BUFFER_BIT,s.NEAREST),s.deleteFramebuffer(e)}else r.bindTexture(s.TEXTURE_2D,i),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,0,0,n,o),r.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:s}=this,r=t.renderTarget,{samples:i,depthTexture:n,depthBuffer:o,stencilBuffer:a,width:u,height:l}=r;if(s.bindRenderbuffer(s.RENDERBUFFER,e),o&&!a){let t=s.DEPTH_COMPONENT24;i>0?(n&&n.isDepthTexture&&n.type===s.FLOAT&&(t=s.DEPTH_COMPONENT32F),s.renderbufferStorageMultisample(s.RENDERBUFFER,i,t,u,l)):s.renderbufferStorage(s.RENDERBUFFER,t,u,l),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,e)}else o&&a&&(i>0?s.renderbufferStorageMultisample(s.RENDERBUFFER,i,s.DEPTH24_STENCIL8,u,l):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,u,l),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,s,r,i){const{backend:n,gl:o}=this,{textureGPU:a,glFormat:u,glType:l}=this.backend.get(e),d=o.createFramebuffer();o.bindFramebuffer(o.READ_FRAMEBUFFER,d),o.framebufferTexture2D(o.READ_FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,a,0);const c=this._getTypedArrayType(l),h=r*i,p=h*this._getBytesPerTexel(u),g=o.createBuffer();o.bindBuffer(o.PIXEL_PACK_BUFFER,g),o.bufferData(o.PIXEL_PACK_BUFFER,p,o.STREAM_READ),o.readPixels(t,s,r,i,u,l,0),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),await n.utils._clientWaitAsync();const m=new c(h);return o.bindBuffer(o.PIXEL_PACK_BUFFER,g),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,m),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),o.deleteFramebuffer(d),m}_getTypedArrayType(e){const{gl:t}=this;return e===t.UNSIGNED_BYTE?Uint8Array:e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT?Uint16Array:e===t.UNSIGNED_INT?Uint32Array:e===t.UNSIGNED_FLOAT?Float32Array:void 0}_getBytesPerTexel(e){const{gl:t}=this;return e===t.RGBA?4:e===t.RGB?3:e===t.ALPHA?1:void 0}}class JT{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return void 0===t&&(t=this.gl.getExtension(e)),t}has(e){return this.availableExtensions.includes(e)}}class ex{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(null!==this.maxAnisotropy)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(!0===t.has("EXT_texture_filter_anisotropic")){const s=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(s.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const tx={WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc"};class sx extends kT{constructor(e={}){super(e),this.isWebGLBackend=!0}init(e){super.init(e);const t=this.parameters,s=void 0!==t.context?t.context:e.domElement.getContext("webgl2");this.gl=s,this.extensions=new JT(this),this.capabilities=new ex(this),this.attributeUtils=new zT(this),this.textureUtils=new ZT(this),this.state=new jT(this),this.utils=new XT(this),this.extensions.get("EXT_color_buffer_float"),this._currentContext=null}get coordinateSystem(){return cs}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.gl}beginRender(e){const{gl:t}=this,s=this.get(e);s.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight);const r=e.occlusionQueryCount;r>0&&(s.currentOcclusionQueries=s.occlusionQueries,s.currentOcclusionQueryObjects=s.occlusionQueryObjects,s.lastOcclusionObject=null,s.occlusionQueries=new Array(r),s.occlusionQueryObjects=new Array(r),s.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:s}=this,r=this.get(e).previousContext,i=e.textures;if(null!==i)for(let e=0;e<i.length;e++){const t=i[e];t.generateMipmaps&&this.generateMipmaps(t)}if(this._currentContext=r,null!==e.textures&&e.renderTarget){const r=this.get(e.renderTarget),{samples:i}=e.renderTarget,n=r.framebuffer,o=t.COLOR_BUFFER_BIT;if(i>0){const i=r.msaaFrameBuffer,a=e.textures;s.bindFramebuffer(t.READ_FRAMEBUFFER,i),s.bindFramebuffer(t.DRAW_FRAMEBUFFER,n);for(let s=0;s<a.length;s++)t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,o,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray)}}if(null!==r)if(this._setFramebuffer(r),r.viewport)this.updateViewport(r);else{const e=this.gl;e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight)}const n=e.occlusionQueryCount;if(n>0){if(n>this.get(e).occlusionQueryIndex){const{gl:e}=this;e.endQuery(e.ANY_SAMPLES_PASSED)}this.resolveOccludedAsync(e)}}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet,{gl:i}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const n=()=>{let o=0;for(let t=0;t<s.length;t++){const n=s[t];null!==n&&(i.getQueryParameter(n,i.QUERY_RESULT_AVAILABLE)&&(i.getQueryParameter(n,i.QUERY_RESULT)>0&&e.add(r[t]),s[t]=null,i.deleteQuery(n),o++))}o<s.length?requestAnimationFrame(n):t.occluded=e};n()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const t=this.gl,{x:s,y:r,width:i,height:n}=e.viewportValue;t.viewport(s,r,i,n)}clear(e,t,s,r=null){const{gl:i}=this;null===r&&(r={textures:null,clearColorValue:this.getClearColor()});let n=0;if(e&&(n|=i.COLOR_BUFFER_BIT),t&&(n|=i.DEPTH_BUFFER_BIT),s&&(n|=i.STENCIL_BUFFER_BIT),0!==n){const o=r.clearColorValue;if(t&&this.state.setDepthMask(!0),null===r.textures)i.clearColor(o.r,o.g,o.b,o.a),i.clear(n);else{if(e)for(let e=0;e<r.textures.length;e++)i.clearBufferfv(i.COLOR,e,[o.r,o.g,o.b,o.a]);t&&s?i.clearBufferfi(i.DEPTH_STENCIL,0,1,0):t?i.clearBufferfv(i.DEPTH,0,[1]):s&&i.clearBufferiv(i.STENCIL,0,[0])}}}beginCompute(){}compute(){}finishCompute(){}draw(e,t){const{pipeline:s,material:r,context:i}=e,{programGPU:n,vaoGPU:o}=this.get(s),{gl:a,state:u}=this,l=this.get(i),d=e.getBindings();for(const e of d){const t=this.get(e),s=t.index;e.isUniformsGroup||e.isUniformBuffer?a.bindBufferBase(a.UNIFORM_BUFFER,s,t.bufferGPU):e.isSampledTexture&&u.bindTexture(t.glTextureType,t.textureGPU,a.TEXTURE0+s)}u.setMaterial(r),a.useProgram(n),a.bindVertexArray(o);const c=e.getIndex(),h=e.object,p=e.geometry,g=p.drawRange,m=g.start,f=l.lastOcclusionObject;if(f!==h&&void 0!==f){if(null!==f&&!0===f.occlusionTest&&(a.endQuery(a.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),!0===h.occlusionTest){const e=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,e),l.occlusionQueries[l.occlusionQueryIndex]=e,l.occlusionQueryObjects[l.occlusionQueryIndex]=h}l.lastOcclusionObject=h}let T;h.isPoints?T=a.POINTS:h.isLineSegments?T=a.LINES:h.isLine?T=a.LINE_STRIP:h.isLineLoop?T=a.LINE_LOOP:!0===r.wireframe?(u.setLineWidth(r.wireframeLinewidth*this.renderer.getPixelRatio()),T=a.LINES):T=a.TRIANGLES;const x=this.getInstanceCount(e);if(null!==c){const e=this.get(c),s=g.count!==1/0?g.count:c.count;x>1?a.drawElementsInstanced(T,c.count,e.type,m,x):a.drawElements(T,c.count,e.type,m),t.update(h,s,1)}else{const e=p.attributes.position,s=g.count!==1/0?g.count:e.count;x>1?a.drawArraysInstanced(T,0,s,x):a.drawArrays(T,0,s),t.update(h,s,1)}a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(e){return e.id}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,i){return this.textureUtils.copyTextureToBuffer(e,t,s,r,i)}createSampler(){}destroySampler(){}createNodeBuilder(e,t,s=null){return new DT(e,t,s)}createProgram(e){const t=this.gl,{stage:s,code:r}=e,i="vertex"===s?t.createShader(t.VERTEX_SHADER):t.createShader(t.FRAGMENT_SHADER);t.shaderSource(i,r),t.compileShader(i),this.set(e,{shaderGPU:i})}destroyProgram(){}createRenderPipeline(e){const t=this.gl,s=e.pipeline,{fragmentProgram:r,vertexProgram:i}=s,n=t.createProgram(),o=this.get(r).shaderGPU,a=this.get(i).shaderGPU;t.attachShader(n,o),t.attachShader(n,a),t.linkProgram(n),t.getProgramParameter(n,t.LINK_STATUS),t.useProgram(n);const u=e.getBindings();for(const e of u){const s=this.get(e).index;if(e.isUniformsGroup||e.isUniformBuffer){const r=t.getUniformBlockIndex(n,e.name);t.uniformBlockBinding(n,r,s)}else if(e.isSampledTexture){const r=t.getUniformLocation(n,e.name);t.uniform1i(r,s)}}const l=t.createVertexArray(),d=e.getIndex(),c=e.getAttributes();if(t.bindVertexArray(l),null!==d){const e=this.get(d);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.bufferGPU)}for(let e=0;e<c.length;e++){const s=c[e],r=this.get(s);let i,n;t.bindBuffer(t.ARRAY_BUFFER,r.bufferGPU),t.enableVertexAttribArray(e),!0===s.isInterleavedBufferAttribute?(i=s.data.stride*r.bytesPerElement,n=s.offset*r.bytesPerElement):(i=0,n=0),r.isInteger?t.vertexAttribIPointer(e,s.itemSize,r.type,i,n):t.vertexAttribPointer(e,s.itemSize,r.type,s.normalized,i,n),s.isInstancedBufferAttribute&&!s.isInterleavedBufferAttribute?t.vertexAttribDivisor(e,s.meshPerAttribute):s.isInterleavedBufferAttribute&&s.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(e,s.data.meshPerAttribute)}t.bindVertexArray(null),this.set(s,{programGPU:n,vaoGPU:l})}createComputePipeline(){}createBindings(e){this.updateBindings(e)}updateBindings(e){const{gl:t}=this;let s=0,r=0;for(const i of e)if(i.isUniformsGroup||i.isUniformBuffer){const e=t.createBuffer(),r=i.buffer;t.bindBuffer(t.UNIFORM_BUFFER,e),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW),t.bindBufferBase(t.UNIFORM_BUFFER,s,e),this.set(i,{index:s++,bufferGPU:e})}else if(i.isSampledTexture){const{textureGPU:e,glTextureType:t}=this.get(i.texture);this.set(i,{index:r++,textureGPU:e,glTextureType:t})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const s=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,s),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(){}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){}hasFeature(e){const t=Object.keys(tx).filter((t=>tx[t]===e)),s=this.extensions;for(let e=0;e<t.length;e++)if(s.has(t[e]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyFramebufferToTexture(e,t){this.textureUtils.copyFramebufferToTexture(e,t)}_setFramebuffer(e){const{gl:t,state:s}=this;let r=null;if(null!==e.textures){const i=e.renderTarget,n=this.get(i),{samples:o,depthBuffer:a,stencilBuffer:u}=i,l=this.renderer._activeCubeFace,d=!0===i.isWebGLCubeRenderTarget;let c,h=n.msaaFrameBuffer,p=n.depthRenderbuffer;if(d?(void 0===n.cubeFramebuffers&&(n.cubeFramebuffers=[]),c=n.cubeFramebuffers[l]):c=n.framebuffer,void 0===c){c=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,c);const r=e.textures;if(d){n.cubeFramebuffers[l]=c;const{textureGPU:e}=this.get(r[0]);t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+l,e,0)}else{for(let s=0;s<r.length;s++){const i=r[s],n=this.get(i);n.renderTarget=e.renderTarget;const o=t.COLOR_ATTACHMENT0+s;t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_2D,n.textureGPU,0)}n.framebuffer=c,s.drawBuffers(e,c)}if(null!==e.depthTexture){const s=this.get(e.depthTexture),r=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTexture2D(t.FRAMEBUFFER,r,t.TEXTURE_2D,s.textureGPU,0)}}if(o>0){if(void 0===h){const r=[];h=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,h);const i=[],l=e.textures;for(let s=0;s<l.length;s++){if(i[s]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,i[s]),r.push(t.COLOR_ATTACHMENT0+s),a){const e=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;r.push(e)}const n=e.textures[s],l=this.get(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,o,l.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+s,t.RENDERBUFFER,i[s])}if(n.msaaFrameBuffer=h,n.msaaRenderbuffers=i,void 0===p){p=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(p,e),n.depthRenderbuffer=p;const s=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;r.push(s)}n.invalidationArray=r}r=n.msaaFrameBuffer}else r=c}s.bindFramebuffer(t.FRAMEBUFFER,r)}}const rx="point-list",ix="line-list",nx="line-strip",ox="triangle-list",ax="triangle-strip",ux="never",lx="less",dx="equal",cx="less-equal",hx="greater",px="not-equal",gx="greater-equal",mx="always",fx="store",Tx="load",xx="clear",yx="ccw",bx="none",Nx="front",_x="back",vx="uint16",Sx="uint32",Ax={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Rx="clamp-to-edge",Ex="repeat",Cx="mirror-repeat",wx="linear",Mx="nearest",Fx={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},Bx="add",Ox="subtract",Lx="reverse-subtract",Ux="min",Ix="max",Dx=0,Px=15,Vx="keep",Gx="zero",kx="replace",zx="invert",$x="increment-clamp",Hx="decrement-clamp",Wx="increment-wrap",jx="decrement-wrap",Xx="storage",qx="unfilterable-float",Yx="depth",Kx="2d",Qx="3d",Zx="2d",Jx="2d-array",ey="cube",ty="all",sy="vertex",ry="instance",iy={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable"};class ny extends bT{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class oy extends ny{constructor(e,t){super(e,t?t.value:null),this.textureNode=t}}class ay extends ST{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}class uy{constructor(e){this.device=e;this.mipmapSampler=e.createSampler({minFilter:wx}),this.flipYSampler=e.createSampler({minFilter:Mx}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:ax,stripIndexFormat:Sx},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:ax,stripIndexFormat:Sx},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const r=t.format,{width:i,height:n}=t.size,o=this.getTransferPipeline(r),a=this.getFlipYPipeline(r),u=this.device.createTexture({size:{width:i,height:n,depthOrArrayLayers:1},format:r,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Zx,baseArrayLayer:s}),d=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:Zx,baseArrayLayer:0}),c=this.device.createCommandEncoder({}),h=(e,t,s)=>{const r=e.getBindGroupLayout(0),i=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),n=c.beginRenderPass({colorAttachments:[{view:s,loadOp:xx,storeOp:fx,clearValue:[0,0,0,0]}]});n.setPipeline(e),n.setBindGroup(0,i),n.draw(4,1,0,0),n.end()};h(o,l,d),h(a,d,l),this.device.queue.submit([c.finish()]),u.destroy()}generateMipmaps(e,t,s=0){const r=this.getTransferPipeline(t.format),i=this.device.createCommandEncoder({}),n=r.getBindGroupLayout(0);let o=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Zx,baseArrayLayer:s});for(let a=1;a<t.mipLevelCount;a++){const t=this.device.createBindGroup({layout:n,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:o}]}),u=e.createView({baseMipLevel:a,mipLevelCount:1,dimension:Zx,baseArrayLayer:s}),l=i.beginRenderPass({colorAttachments:[{view:u,loadOp:xx,storeOp:fx,clearValue:[0,0,0,0]}]});l.setPipeline(r),l.setBindGroup(0,t),l.draw(4,1,0,0),l.end(),o=u}this.device.queue.submit([i.finish()])}}const ly={[is]:"never",[_]:"less",[as]:"equal",[os]:"less-equal",[ls]:"greater",[us]:"greater-equal",[ns]:"always",[ds]:"not-equal"},dy=[0,1,3,2,4,5];class cy{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture=null,this.defaultCubeTexture=null,this.colorBuffer=null,this.depthTexture=new b,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,s=t.device,r=t.get(e),i={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:e.anisotropy};e.isDepthTexture&&null!==e.compareFunction&&(i.compare=ly[e.compareFunction]),r.sampler=s.createSampler(i)}createDefaultTexture(e){let t;t=e.isCubeTexture?this._getDefaultCubeTextureGPU():this._getDefaultTextureGPU(),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,r=s.get(e);if(r.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:i,height:n,depth:o,levels:a}=t,u=this._getDimension(e),l=e.internalFormat||hy(e,s.device);let d=void 0!==t.sampleCount?t.sampleCount:1;d>1&&(d=Math.pow(2,Math.floor(Math.log2(d))),2===d&&(d=4));const c=e.isRenderTargetTexture?1:d;let h=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(h|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&(h|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:i,height:n,depthOrArrayLayers:o},mipLevelCount:a,sampleCount:c,dimension:u,format:l,usage:h};if(e.isVideoTexture){const t=e.source.data,s=new VideoFrame(t);p.size.width=s.displayWidth,p.size.height=s.displayHeight,s.close(),r.externalTexture=t}else{if(void 0===l)return this.createDefaultTexture(e);r.texture=s.device.createTexture(p)}if(e.isRenderTargetTexture&&d>1){const e=Object.assign({},p);e.label=e.label+"-msaa",e.sampleCount=d,r.msaaTexture=s.device.createTexture(e)}r.initialized=!0,r.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture.destroy(),void 0!==s.msaaTexture&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let e=0;e<6;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e);else this._generateMipmaps(t.texture,t.textureDescriptorGPU)}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:s}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:s,depthOrArrayLayers:1},sampleCount:e.parameters.sampleCount,format:Ax.BGRA8Unorm,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!0){const s=this.backend,{width:r,height:i}=s.getDrawingBufferSize(),n=this.depthTexture,o=s.get(n).texture;let a,u;if(t?(a=be,u=Ne):e&&(a=E,u=R),void 0!==o){if(n.image.width===r&&n.image.height===i&&n.format===a&&n.type===u)return o;this.destroyTexture(n)}return n.name="depthBuffer",n.format=a,n.type=u,n.image.width=r,n.image.height=i,this.createTexture(n,{sampleCount:s.parameters.sampleCount,width:r,height:i}),s.get(n).texture}updateTexture(e,t){const s=this.backend.get(e),{textureDescriptorGPU:r}=s;if(!e.isRenderTargetTexture&&void 0!==r){if(e.isDataTexture||e.isData3DTexture)this._copyBufferToTexture(t.image,s.texture,r,0,!1);else if(e.isDataArrayTexture)for(let e=0;e<t.image.depth;e++)this._copyBufferToTexture(t.image,s.texture,r,e,!1,e);else if(e.isCompressedTexture)this._copyCompressedBufferToTexture(e.mipmaps,s.texture,r);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,s.texture,r,e.flipY);else if(e.isVideoTexture){const t=e.source.data;s.externalTexture=t}else this._copyImageToTexture(t.image,s.texture,r,0,e.flipY);s.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,s,r,i){const n=this.backend.device,o=this.backend.get(e),a=o.texture,u=o.textureDescriptorGPU.format,l=this._getBytesPerTexel(u),d=n.createBuffer({size:r*i*l,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),c=n.createCommandEncoder();c.copyTextureToBuffer({texture:a,origin:{x:t,y:s}},{buffer:d,bytesPerRow:r*l},{width:r,height:i});const h=this._getTypedArrayType(u);n.queue.submit([c.finish()]),await d.mapAsync(GPUMapMode.READ);return new h(d.getMappedRange())}_isEnvironmentTexture(e){const t=e.mapping;return t===_e||t===ve||t===Se||t===Ae}_getDefaultTextureGPU(){let e=this.defaultTexture;if(null===e){const t=new hs;t.minFilter=N,t.magFilter=N,this.createTexture(t,{width:1,height:1}),this.defaultTexture=e=t}return this.backend.get(e).texture}_getDefaultCubeTextureGPU(){let e=this.defaultTexture;if(null===e){const t=new ps;t.minFilter=N,t.magFilter=N,this.createTexture(t,{width:1,height:1,depth:6}),this.defaultCubeTexture=e=t}return this.backend.get(e).texture}_copyCubeMapToTexture(e,t,s,r){for(let i=0;i<6;i++){const n=e[i],o=!0===r?dy[i]:i;n.isDataTexture?this._copyBufferToTexture(n.image,t,s,o,r):this._copyImageToTexture(n,t,s,o,r)}}_copyImageToTexture(e,t,s,r,i){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===i&&this._flipY(t,s,r)}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new uy(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,r,i,n=0){const o=this.backend.device,a=e.data,u=this._getBytesPerTexel(s.format),l=e.width*u;o.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},a,{offset:e.width*e.height*u*n,bytesPerRow:l},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===i&&this._flipY(t,s,r)}_copyCompressedBufferToTexture(e,t,s){const r=this.backend.device,i=this._getBlockData(s.format);for(let s=0;s<e.length;s++){const n=e[s],o=n.width,a=n.height,u=Math.ceil(o/i.width)*i.byteLength;r.queue.writeTexture({texture:t,mipLevel:s},n.data,{offset:0,bytesPerRow:u},{width:Math.ceil(o/i.width)*i.width,height:Math.ceil(a/i.width)*i.width,depthOrArrayLayers:1})}}_getBlockData(e){return e===Ax.BC1RGBAUnorm||e===Ax.BC1RGBAUnormSRGB?{byteLength:8,width:4,height:4}:e===Ax.BC2RGBAUnorm||e===Ax.BC2RGBAUnormSRGB||e===Ax.BC3RGBAUnorm||e===Ax.BC3RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===Ax.BC4RUnorm||e===Ax.BC4RSNorm?{byteLength:8,width:4,height:4}:e===Ax.BC5RGUnorm||e===Ax.BC5RGSnorm||e===Ax.BC6HRGBUFloat||e===Ax.BC6HRGBFloat||e===Ax.BC7RGBAUnorm||e===Ax.BC7RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===Ax.ETC2RGB8Unorm||e===Ax.ETC2RGB8UnormSRGB||e===Ax.ETC2RGB8A1Unorm||e===Ax.ETC2RGB8A1UnormSRGB?{byteLength:8,width:4,height:4}:e===Ax.ETC2RGBA8Unorm||e===Ax.ETC2RGBA8UnormSRGB?{byteLength:16,width:4,height:4}:e===Ax.EACR11Unorm||e===Ax.EACR11Snorm?{byteLength:8,width:4,height:4}:e===Ax.EACRG11Unorm||e===Ax.EACRG11Snorm||e===Ax.ASTC4x4Unorm||e===Ax.ASTC4x4UnormSRGB?{byteLength:16,width:4,height:4}:e===Ax.ASTC5x4Unorm||e===Ax.ASTC5x4UnormSRGB?{byteLength:16,width:5,height:4}:e===Ax.ASTC5x5Unorm||e===Ax.ASTC5x5UnormSRGB?{byteLength:16,width:5,height:5}:e===Ax.ASTC6x5Unorm||e===Ax.ASTC6x5UnormSRGB?{byteLength:16,width:6,height:5}:e===Ax.ASTC6x6Unorm||e===Ax.ASTC6x6UnormSRGB?{byteLength:16,width:6,height:6}:e===Ax.ASTC8x5Unorm||e===Ax.ASTC8x5UnormSRGB?{byteLength:16,width:8,height:5}:e===Ax.ASTC8x6Unorm||e===Ax.ASTC8x6UnormSRGB?{byteLength:16,width:8,height:6}:e===Ax.ASTC8x8Unorm||e===Ax.ASTC8x8UnormSRGB?{byteLength:16,width:8,height:8}:e===Ax.ASTC10x5Unorm||e===Ax.ASTC10x5UnormSRGB?{byteLength:16,width:10,height:5}:e===Ax.ASTC10x6Unorm||e===Ax.ASTC10x6UnormSRGB?{byteLength:16,width:10,height:6}:e===Ax.ASTC10x8Unorm||e===Ax.ASTC10x8UnormSRGB?{byteLength:16,width:10,height:8}:e===Ax.ASTC10x10Unorm||e===Ax.ASTC10x10UnormSRGB?{byteLength:16,width:10,height:10}:e===Ax.ASTC12x10Unorm||e===Ax.ASTC12x10UnormSRGB?{byteLength:16,width:12,height:10}:e===Ax.ASTC12x12Unorm||e===Ax.ASTC12x12UnormSRGB?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=Rx;return e===Jt?t=Ex:e===ts&&(t=Cx),t}_convertFilterMode(e){let t=wx;return e!==N&&e!==A&&e!==ss||(t=Mx),t}_getBytesPerTexel(e){return e===Ax.R8Unorm?1:e===Ax.R16Float||e===Ax.RG8Unorm?2:e===Ax.RG16Float||e===Ax.R32Float||e===Ax.RGBA8Unorm||e===Ax.RGBA8UnormSRGB?4:e===Ax.RG32Float||e===Ax.RGBA16Float?8:e===Ax.RGBA32Float?16:void 0}_getTypedArrayType(e){return e===Ax.R8Uint?Uint8Array:e===Ax.R8Sint?Int8Array:e===Ax.R8Unorm?Uint8Array:e===Ax.R8Snorm?Int8Array:e===Ax.RG8Uint?Uint8Array:e===Ax.RG8Sint?Int8Array:e===Ax.RG8Unorm?Uint8Array:e===Ax.RG8Snorm?Int8Array:e===Ax.RGBA8Uint?Uint8Array:e===Ax.RGBA8Sint?Int8Array:e===Ax.RGBA8Unorm?Uint8Array:e===Ax.RGBA8Snorm?Int8Array:e===Ax.R16Uint?Uint16Array:e===Ax.R16Sint?Int16Array:e===Ax.RG16Uint?Uint16Array:e===Ax.RG16Sint?Int16Array:e===Ax.RGBA16Uint?Uint16Array:e===Ax.RGBA16Sint?Int16Array:e===Ax.R32Uint?Uint32Array:e===Ax.R32Sint?Int32Array:e===Ax.R32Float?Float32Array:e===Ax.RG32Uint?Uint32Array:e===Ax.RG32Sint?Int32Array:e===Ax.RG32Float?Float32Array:e===Ax.RGBA32Uint?Uint32Array:e===Ax.RGBA32Sint?Int32Array:e===Ax.RGBA32Float?Float32Array:void 0}_getDimension(e){let t;return t=e.isData3DTexture?Qx:Kx,t}}function hy(e,t=null){const s=e.format,r=e.type,i=e.colorSpace;let n;if(!0===e.isFramebufferTexture)n=Ax.BGRA8Unorm;else if(!0===e.isCompressedTexture)switch(s){case St:n=i===h?Ax.BC1RGBAUnormSRGB:Ax.BC1RGBAUnorm;break;case At:n=i===h?Ax.BC2RGBAUnormSRGB:Ax.BC2RGBAUnorm;break;case Rt:n=i===h?Ax.BC3RGBAUnormSRGB:Ax.BC3RGBAUnorm;break;case Bt:n=i===h?Ax.ETC2RGB8UnormSRGB:Ax.ETC2RGB8Unorm;break;case Ot:n=i===h?Ax.ETC2RGBA8UnormSRGB:Ax.ETC2RGBA8Unorm;break;case Lt:n=i===h?Ax.ASTC4x4UnormSRGB:Ax.ASTC4x4Unorm;break;case Ut:n=i===h?Ax.ASTC5x4UnormSRGB:Ax.ASTC5x4Unorm;break;case It:n=i===h?Ax.ASTC5x5UnormSRGB:Ax.ASTC5x5Unorm;break;case Dt:n=i===h?Ax.ASTC6x5UnormSRGB:Ax.ASTC6x5Unorm;break;case Pt:n=i===h?Ax.ASTC6x6UnormSRGB:Ax.ASTC6x6Unorm;break;case Vt:n=i===h?Ax.ASTC8x5UnormSRGB:Ax.ASTC8x5Unorm;break;case Gt:n=i===h?Ax.ASTC8x6UnormSRGB:Ax.ASTC8x6Unorm;break;case kt:n=i===h?Ax.ASTC8x8UnormSRGB:Ax.ASTC8x8Unorm;break;case zt:n=i===h?Ax.ASTC10x5UnormSRGB:Ax.ASTC10x5Unorm;break;case $t:n=i===h?Ax.ASTC10x6UnormSRGB:Ax.ASTC10x6Unorm;break;case Ht:n=i===h?Ax.ASTC10x8UnormSRGB:Ax.ASTC10x8Unorm;break;case Wt:n=i===h?Ax.ASTC10x10UnormSRGB:Ax.ASTC10x10Unorm;break;case jt:n=i===h?Ax.ASTC12x10UnormSRGB:Ax.ASTC12x10Unorm;break;case Xt:n=i===h?Ax.ASTC12x12UnormSRGB:Ax.ASTC12x12Unorm}else switch(s){case mt:switch(r){case ut:n=i===h?Ax.RGBA8UnormSRGB:Ax.RGBA8Unorm;break;case ee:n=Ax.RGBA16Float;break;case x:n=Ax.RGBA32Float}break;case xt:switch(r){case ut:n=Ax.R8Unorm;break;case ee:n=Ax.R16Float;break;case x:n=Ax.R32Float}break;case bt:switch(r){case ut:n=Ax.RG8Unorm;break;case ee:n=Ax.RG16Float;break;case x:n=Ax.RG32Float}break;case E:switch(r){case pt:n=Ax.Depth16Unorm;break;case R:n=Ax.Depth24Plus;break;case x:n=Ax.Depth32Float}break;case be:switch(r){case Ne:n=Ax.Depth24PlusStencil8;break;case x:t&&t.features.has(iy.Depth32FloatStencil8),n=Ax.Depth32FloatStencil8}}return n}const py=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+)?/i,gy=/[a-z_0-9]+|<(.*?)>+/gi,my={f32:"float"};class fy extends um{constructor(e){const{type:t,inputs:s,name:r,inputsCode:i,blockCode:n}=(e=>{const t=(e=e.trim()).match(py);if(null!==t&&4===t.length){const s=t[2],r=[];let i=null;for(;null!==(i=gy.exec(s));)r.push(i);const n=[];let o=0;for(;o<r.length;){const e=r[o++][0];let t=r[o++][0];t=my[t]||t,o<r.length&&!0===r[o][0].startsWith("<")&&o++,n.push(new uc(t,e))}const a=e.substring(t[0].length),u=void 0!==t[1]?t[1]:"";return{type:t[3]||"void",inputs:n,name:u,inputsCode:s,blockCode:a}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,s,r),this.inputsCode=i,this.blockCode=n}getCode(e=this.name){const t="void"!==this.type?"-> "+this.type:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class Ty extends am{parseFunction(e){return new fy(e)}}const xy=window.GPUShaderStage,yy={vertex:xy?xy.VERTEX:1,fragment:xy?xy.FRAGMENT:2,compute:xy?xy.COMPUTE:4},by={instance:!0},Ny={"^^":"threejs_xor"},_y={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat3:"mat3x3<f32>",imat3:"mat3x3<i32>",umat3:"mat3x3<u32>",bmat3:"mat3x3<bool>",mat4:"mat4x4<f32>",imat4:"mat4x4<i32>",umat4:"mat4x4<u32>",bmat4:"mat4x4<bool>"},vy={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"threejs_mod_float",mod_vec2:"threejs_mod_vec2",mod_vec3:"threejs_mod_vec3",mod_vec4:"threejs_mod_vec4",lessThanEqual:"threejs_lessThanEqual",greaterThan:"threejs_greaterThan",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"},Sy={threejs_xor:new qn("\nfn threejs_xor( a : bool, b : bool ) -> bool {\n\n\treturn ( a || b ) && !( a && b );\n\n}\n"),lessThanEqual:new qn("\nfn threejs_lessThanEqual( a : vec3<f32>, b : vec3<f32> ) -> vec3<bool> {\n\n\treturn vec3<bool>( a.x <= b.x, a.y <= b.y, a.z <= b.z );\n\n}\n"),greaterThan:new qn("\nfn threejs_greaterThan( a : vec3<f32>, b : vec3<f32> ) -> vec3<bool> {\n\n\treturn vec3<bool>( a.x > b.x, a.y > b.y, a.z > b.z );\n\n}\n"),mod_float:new qn("fn threejs_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new qn("fn threejs_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new qn("fn threejs_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new qn("fn threejs_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),repeatWrapping:new qn("\nfn threejs_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {\n\n\tlet uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );\n\n\treturn ( ( uvScaled % dimension ) + dimension ) % dimension;\n\n}\n")};class Ay extends oc{constructor(e,t,s=null){super(e,t,new Ty,s),this.uniformGroups={},this.builtins={}}needsColorSpaceToLinear(e){return!0===e.isVideoTexture&&e.colorSpace!==w}_generateTextureSample(e,t,s,r,i=this.shaderStage){return"fragment"===i?r?`textureSample( ${t}, ${t}_sampler, ${s}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${s} )`:this.generateTextureLod(e,t,s)}_generateVideoSample(e,t,s=this.shaderStage){if("fragment"===s)return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`}_generateTextureSampleLevel(e,t,s,r,i,n=this.shaderStage){return"fragment"===n&&!1===this.isUnfilterable(e)?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${r} )`:this.generateTextureLod(e,t,s,r)}generateTextureLod(e,t,s,r="0"){this._include("repeatWrapping");return`textureLoad( ${t}, threejs_repeatWrapping( ${s}, ${`textureDimensions( ${t}, 0 )`} ), i32( ${r} ) )`}generateTextureLoad(e,t,s,r,i="0u"){return r?`textureLoad( ${t}, ${s}, ${r}, ${i} )`:`textureLoad( ${t}, ${s}, ${i} )`}isUnfilterable(e){return!0===e.isDataTexture&&e.type===x}generateTexture(e,t,s,r,i=this.shaderStage){let n=null;return n=!0===e.isVideoTexture?this._generateVideoSample(t,s,i):this.isUnfilterable(e)?this.generateTextureLod(e,t,s,"0",r,i):this._generateTextureSample(e,t,s,r,i),n}generateTextureCompare(e,t,s,r,i,n=this.shaderStage){if("fragment"===n)return`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${r} )`}generateTextureLevel(e,t,s,r,i,n=this.shaderStage){let o=null;return o=!0===e.isVideoTexture?this._generateVideoSample(t,s,n):this._generateTextureSampleLevel(e,t,s,r,i,n),o}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`varyings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,s=e.type;return"texture"===s||"cubeTexture"===s?t:"buffer"===s||"storageBuffer"===s?`NodeBuffer_${e.id}.${t}`:e.groupNode.name+"."+t}return super.getPropertyName(e)}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=Ny[e];return void 0!==t?(this._include(t),t):null}getUniformFromNode(e,t,s,r=null){const i=super.getUniformFromNode(e,t,s,r),n=this.getDataFromNode(e,s,this.globalCache);if(void 0===n.uniformGPU){let r;const o=this.bindings[s];if("texture"===t||"cubeTexture"===t){let n=null;if("texture"===t?n=new FT(i.name,i.node):"cubeTexture"===t&&(n=new BT(i.name,i.node)),n.store=!0===e.isStoreTextureNode,n.setVisibility(yy[s]),"fragment"===s&&!1===this.isUnfilterable(e.value)&&!1===n.store){const e=new oy(`${i.name}_sampler`,i.node);e.setVisibility(yy[s]),o.push(e,n),r=[e,n]}else o.push(n),r=[n]}else if("buffer"===t||"storageBuffer"===t){const i=new("storageBuffer"===t?ay:AT)("NodeBuffer_"+e.id,e.value);i.setVisibility(yy[s]),o.push(i),r=i}else{const n=e.groupNode,a=n.name,u=this.uniformGroups[s]||(this.uniformGroups[s]={});let l=u[a];if(void 0===l&&(l=new CT(a,n),l.setVisibility(yy[s]),u[a]=l,o.push(l)),!0===e.isArrayUniformNode){r=[];for(const s of e.nodes){const e=this.getNodeUniform(s,t);e.boundary=_T(e.itemSize),e.itemSize=vT(e.itemSize),l.addUniform(e),r.push(e)}}else r=this.getNodeUniform(i,t),l.addUniform(r)}n.uniformGPU=r,"vertex"===s&&(this.bindingsOffset.fragment=o.length)}return i}isReference(e){return super.isReference(e)||"texture_2d"===e||"texture_cube"===e||"texture_depth_2d"===e||"texture_storage_2d"===e}getBuiltin(e,t,s,r=this.shaderStage){const i=this.builtins[r]||(this.builtins[r]=new Map);return!1===i.has(e)&&i.set(e,{name:e,property:t,type:s}),t}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(e.name+" : "+this.getType(e.type));return`fn ${t.name}( ${r.join(", ")} ) -> ${this.getType(t.type)} {\n${s.vars}\n${s.code}\n\treturn ${s.result};\n\n}`}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}isFlipY(){return!1}getBuiltins(e){const t=[],s=this.builtins[e];if(void 0!==s)for(const{name:e,property:r,type:i}of s.values())t.push(`@builtin( ${e} ) ${r} : ${i}`);return t.join(",\n\t")}getAttributes(e){const t=[];if("compute"===e&&this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),"vertex"===e||"compute"===e){const e=this.getBuiltins("attribute");e&&t.push(e);const s=this.getAttributesArray();for(let e=0,r=s.length;e<r;e++){const r=s[e],i=r.name,n=this.getType(r.type);t.push(`@location( ${e} ) ${i} : ${n}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`\t@location( ${e} ) m${e} : ${r}<f32>`)}return t.join(",\n")}getStructs(e){const t=[],s=this.structs[e];for(let e=0,r=s.length;e<r;e++){const r=s[e];let i=`struct ${r.name} {\n`;i+=this.getStructMembers(r),i+="\n}",t.push(i)}return t.join("\n\n")}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`\t${this.getVar(e.type,e.name)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const s=this.varyings,r=this.vars[e];for(let i=0;i<s.length;i++){const n=s[i];if(n.needsInterpolation){let e=`@location( ${i} )`;/^(int|uint|ivec|uvec)/.test(n.type)&&(e+=" @interpolate( flat )"),t.push(`${e} ${n.name} : ${this.getType(n.type)}`)}else"vertex"===e&&!1===r.includes(n)&&r.push(n)}}const s=this.getBuiltins(e);s&&t.push(s);const r=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("VaryingsStruct","\t"+r):r}getUniforms(e){const t=this.uniforms[e],s=[],r=[],i=[],n={};let o=this.bindingsOffset[e];for(const i of t)if("texture"===i.type||"cubeTexture"===i.type){const t=i.node.value;let r;if("fragment"===e&&!1===this.isUnfilterable(t)&&!0!==i.node.isStoreTextureNode&&(!0===t.isDepthTexture&&null!==t.compareFunction?s.push(`@binding( ${o++} ) @group( 0 ) var ${i.name}_sampler : sampler_comparison;`):s.push(`@binding( ${o++} ) @group( 0 ) var ${i.name}_sampler : sampler;`)),!0===t.isCubeTexture)r="texture_cube<f32>";else if(!0===t.isDataArrayTexture)r="texture_2d_array<f32>";else if(!0===t.isDepthTexture)r="texture_depth_2d";else if(!0===t.isVideoTexture)r="texture_external";else if(!0===i.node.isStoreTextureNode){r="texture_storage_2d<"+hy(t)+", write>"}else r="texture_2d<f32>";s.push(`@binding( ${o++} ) @group( 0 ) var ${i.name} : ${r};`)}else if("buffer"===i.type||"storageBuffer"===i.type){const e=i.node,t=this.getType(e.bufferType),s=e.bufferCount,n=s>0?", "+s:"",a=`\t${i.name} : array< ${t}${n} >\n`,u=e.isStorageBufferNode?"storage,read_write":"uniform";r.push(this._getWGSLStructBinding("NodeBuffer_"+e.id,a,u,o++))}else{const e=this.getType(this.getVectorType(i.type)),t=i.groupNode.name,s=n[t]||(n[t]={index:o++,snippets:[]});if(!0===Array.isArray(i.value)){const t=i.value.length;s.snippets.push(`uniform ${e}[ ${t} ] ${i.name}`)}else s.snippets.push(`\t${i.name} : ${e}`)}for(const e in n){const t=n[e];i.push(this._getWGSLStructBinding(e,t.snippets.join(",\n"),"uniform",t.index))}let a=s.join("\n");return a+=r.join("\n"),a+=i.join("\n"),a}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};for(const t in e){const s=e[t];s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.structs=this.getStructs(t),s.vars=this.getVars(t),s.codes=this.getCodes(t);let r="// code\n\n";r+=this.flowCode[t];const i=this.flowNodes[t],n=i[i.length-1],o=n.outputNode,a=void 0!==o&&!0===o.isOutputStructNode;for(const e of i){const i=this.getFlowData(e),u=e.name;if(u&&(r.length>0&&(r+="\n"),r+=`\t// flow -> ${u}\n\t`),r+=`${i.code}\n\t`,e===n&&"compute"!==t)if(r+="// result\n\n\t","vertex"===t)r+=`varyings.Vertex = ${i.result};`;else if("fragment"===t)if(a)s.returnType=o.nodeType,r+=`return ${i.result};`;else{let e="\t@location(0) color: vec4<f32>";const t=this.getBuiltins("output");t&&(e+=",\n\t"+t),s.returnType="OutputStruct",s.structs+=this._getWGSLStruct("OutputStruct",e),s.structs+="\nvar<private> output : OutputStruct;\n\n",r+=`output.color = ${i.result};\n\n\treturn output;`}}s.flow=r}null!==this.material?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let s;return null!==t&&(s=this._getWGSLMethod(e+"_"+t)),void 0===s&&(s=this._getWGSLMethod(e)),s||e}getType(e){return _y[e]||e}isAvailable(e){return!0===by[e]}_getWGSLMethod(e){return void 0!==Sy[e]&&this._include(e),vy[e]}_include(e){const t=Sy[e];return t.build(this),null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\nvar<private> varyings : VaryingsStruct;\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> VaryingsStruct {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn varyings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n\n// uniforms\n${e.uniforms}\n\n// structs\n${e.structs}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){return`${this.getSignature()}\n// system\nvar<private> instanceIndex : u32;\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${t} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = id.x;\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,s,r=0,i=0){const n=e+"Struct";return`${this._getWGSLStruct(n,t)}\n@binding( ${r} ) @group( ${i} )\nvar<${s}> ${e} : ${n};`}}class Ry{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=Ax.Depth24PlusStencil8:e.depth&&(t=Ax.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).texture.format}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):Ax.BGRA8Unorm,t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?rx:e.isLineSegments||e.isMesh&&!0===t.wireframe?ix:e.isLine?nx:e.isMesh?ox:void 0}getSampleCount(e){return null!==e.textures?e.sampleCount:this.backend.parameters.sampleCount}}const Ey=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),Cy=new Map([[z,["float16"]]]),wy=new Map([[Int32Array,"sint32"],[Uint32Array,"uint32"],[Float32Array,"float32"]]);class My{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),r=this.backend,i=r.get(s);let n=i.buffer;if(void 0===n){const e=r.device,o=s.array,a=o.byteLength+(4-o.byteLength%4)%4;n=e.createBuffer({label:s.name,size:a,usage:t,mappedAtCreation:!0}),new o.constructor(n.getMappedRange()).set(o),n.unmap(),i.buffer=n}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,r=s.device,i=s.get(t).buffer,n=t.array,o=t.updateRanges;if(0===o.length)r.queue.writeBuffer(i,0,n,0);else{for(let e=0,t=o.length;e<t;e++){const t=o[e];r.queue.writeBuffer(i,0,n,t.start*n.BYTES_PER_ELEMENT,t.count*n.BYTES_PER_ELEMENT)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let e=0;e<t.length;e++){const r=t[e],i=r.array.BYTES_PER_ELEMENT,n=this._getBufferAttribute(r);let o=s.get(n);if(void 0===o){let e,t;!0===r.isInterleavedBufferAttribute?(e=r.data.stride*i,t=r.data.isInstancedInterleavedBuffer?ry:sy):(e=r.itemSize*i,t=r.isInstancedBufferAttribute?ry:sy),o={arrayStride:e,attributes:[],stepMode:t},s.set(n,o)}const a=this._getVertexFormat(r),u=!0===r.isInterleavedBufferAttribute?r.offset*i:0;o.attributes.push({shaderLocation:e,offset:u,format:a})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,r=t.get(this._getBufferAttribute(e)),i=r.buffer,n=i.size;let o=r.readBuffer,a=!0;void 0===o&&(o=s.createBuffer({label:e.name,size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=!1,r.readBuffer=o);const u=s.createCommandEncoder({});u.copyBufferToBuffer(i,0,o,0,n),a&&o.unmap();const l=u.finish();s.queue.submit([l]),await o.mapAsync(GPUMapMode.READ);return o.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,r=e.array.constructor,i=e.constructor;let n;if(1==t)n=wy.get(r);else{const e=(Cy.get(i)||Ey.get(r))[s?1:0];if(e){const s=r.BYTES_PER_ELEMENT*t,i=4*Math.floor((s+3)/4)/r.BYTES_PER_ELEMENT;if(i%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");n=`${e}x${i}`}}return n}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class Fy{constructor(e){this.backend=e}createBindingsLayout(e){const t=this.backend.device,s=[];let r=0;for(const t of e){const e={binding:r++,visibility:t.visibility};if(t.isUniformBuffer||t.isStorageBuffer){const s={};t.isStorageBuffer&&(s.type=Xx),e.buffer=s}else if(t.isSampler){const s={};t.texture.isDepthTexture&&null!==t.texture.compareFunction&&(s.type="comparison"),e.sampler=s}else if(t.isSampledTexture&&t.texture.isVideoTexture)e.externalTexture={};else if(t.isSampledTexture&&t.store){const s=this.backend.get(t.texture).texture.format;e.storageTexture={format:s}}else if(t.isSampledTexture){const s={};t.texture.isDepthTexture?s.sampleType=Yx:t.texture.isDataTexture&&t.texture.type===x&&(s.sampleType=qx),t.isSampledCubeTexture?s.viewDimension=ey:t.texture.isDataArrayTexture&&(s.viewDimension=Jx),e.texture=s}s.push(e)}return t.createBindGroupLayout({entries:s})}createBindings(e){const t=this.backend.get(e),s=this.createBindingsLayout(e),r=this.createBindGroup(e,s);t.layout=s,t.group=r,t.bindings=e}updateBinding(e){const t=this.backend,s=t.device,r=e.buffer,i=t.get(e).buffer;s.queue.writeBuffer(i,0,r,0)}createBindGroup(e,t){const s=this.backend,r=s.device;let i=0;const n=[];for(const t of e){if(t.isUniformBuffer){const e=s.get(t);if(void 0===e.buffer){const s=t.byteLength,i=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,n=r.createBuffer({label:"bindingBuffer_"+t.name,size:s,usage:i});e.buffer=n}n.push({binding:i,resource:{buffer:e.buffer}})}else if(t.isStorageBuffer){const e=s.get(t);if(void 0===e.buffer){const r=t.attribute;e.buffer=s.get(r).buffer}n.push({binding:i,resource:{buffer:e.buffer}})}else if(t.isSampler){const e=s.get(t.texture);n.push({binding:i,resource:e.sampler})}else if(t.isSampledTexture){const e=s.get(t.texture);let o,a;if(o=t.isSampledCubeTexture?ey:t.texture.isDataArrayTexture?Jx:Zx,void 0!==e.externalTexture)a=r.importExternalTexture({source:e.externalTexture});else{const s=ty;a=e.texture.createView({aspect:s,dimension:o,mipLevelCount:t.store?1:e.mipLevelCount})}n.push({binding:i,resource:a})}i++}return r.createBindGroup({layout:t,entries:n})}}class By{constructor(e){this.backend=e}createRenderPipeline(e){const{object:t,material:s,geometry:r,pipeline:i}=e,{vertexProgram:n,fragmentProgram:o}=i,a=this.backend,u=a.device,l=a.utils,d=a.get(i),c=a.get(e.getBindings()),h=a.attributeUtils.createShaderVertexBuffers(e);let p;!0===s.transparent&&s.blending!==L&&(p=this._getBlending(s));let g={};!0===s.stencilWrite&&(g={compare:this._getStencilCompare(s),failOp:this._getStencilOperation(s.stencilFail),depthFailOp:this._getStencilOperation(s.stencilZFail),passOp:this._getStencilOperation(s.stencilZPass)});const m=this._getColorWriteMask(s),f=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const s=l.getTextureFormatGPU(t[e]);f.push({format:s,blend:p,writeMask:m})}}else{const t=l.getCurrentColorFormat(e.context);f.push({format:t,blend:p,writeMask:m})}const T=a.get(n).module,x=a.get(o).module,y=this._getPrimitiveState(t,r,s),b=this._getDepthCompare(s),N=l.getCurrentDepthStencilFormat(e.context);let _=l.getSampleCount(e.context);_>1&&(_=Math.pow(2,Math.floor(Math.log2(_))),2===_&&(_=4)),d.pipeline=u.createRenderPipeline({vertex:Object.assign({},T,{buffers:h}),fragment:Object.assign({},x,{targets:f}),primitive:y,depthStencil:{format:N,depthWriteEnabled:s.depthWrite,depthCompare:b,stencilFront:g,stencilBack:{},stencilReadMask:s.stencilFuncMask,stencilWriteMask:s.stencilWriteMask},multisample:{count:_,alphaToCoverageEnabled:s.alphaToCoverage},layout:u.createPipelineLayout({bindGroupLayouts:[c.layout]})})}createComputePipeline(e,t){const s=this.backend,r=s.device,i=s.get(e.computeProgram).module,n=s.get(e),o=s.get(t);n.pipeline=r.createComputePipeline({compute:i,layout:r.createPipelineLayout({bindGroupLayouts:[o.layout]})})}_getBlending(e){let t,s;const r=e.blending;if(r===Ye){const r=null!==e.blendSrcAlpha?e.blendSrcAlpha:Fx.One,i=null!==e.blendDstAlpha?e.blendDstAlpha:Fx.Zero,n=null!==e.blendEquationAlpha?e.blendEquationAlpha:Fx.Add;t={srcFactor:this._getBlendFactor(e.blendSrc),dstFactor:this._getBlendFactor(e.blendDst),operation:this._getBlendOperation(e.blendEquation)},s={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(i),operation:this._getBlendOperation(n)}}else{const i=(e,r,i,n)=>{t={srcFactor:e,dstFactor:r,operation:Bx},s={srcFactor:i,dstFactor:n,operation:Bx}};if(e.premultipliedAlpha)switch(r){case Je:i(Fx.SrcAlpha,Fx.OneMinusSrcAlpha,Fx.One,Fx.OneMinusSrcAlpha);break;case Ze:i(Fx.SrcAlpha,Fx.One,Fx.One,Fx.One);break;case Qe:i(Fx.Zero,Fx.OneMinusSrc,Fx.Zero,Fx.One);break;case Ke:i(Fx.Zero,Fx.Src,Fx.Zero,Fx.SrcAlpha)}else switch(r){case Je:i(Fx.SrcAlpha,Fx.OneMinusSrcAlpha,Fx.One,Fx.OneMinusSrcAlpha);break;case Ze:i(Fx.SrcAlpha,Fx.One,Fx.SrcAlpha,Fx.One);break;case Qe:i(Fx.Zero,Fx.OneMinusSrc,Fx.Zero,Fx.One);break;case Ke:i(Fx.Zero,Fx.Src,Fx.Zero,Fx.Src)}}if(void 0!==t&&void 0!==s)return{color:t,alpha:s}}_getBlendFactor(e){let t;switch(e){case Ue:t=Fx.Zero;break;case Ie:t=Fx.One;break;case De:t=Fx.Src;break;case ze:t=Fx.OneMinusSrc;break;case Pe:t=Fx.SrcAlpha;break;case $e:t=Fx.OneMinusSrcAlpha;break;case Ge:t=Fx.Dst;break;case He:t=Fx.OneMinusDstColor;break;case ke:t=Fx.DstAlpha;break;case We:t=Fx.OneMinusDstAlpha;break;case Ve:t=Fx.SrcAlphaSaturated;break;case 211:t=Fx.Constant;break;case 212:t=Fx.OneMinusConstant}return t}_getStencilCompare(e){let t;switch(e.stencilFunc){case Ns:t=ux;break;case bs:t=mx;break;case ys:t=lx;break;case xs:t=cx;break;case Ts:t=dx;break;case fs:t=gx;break;case ms:t=hx;break;case gs:t=px}return t}_getStencilOperation(e){let t;switch(e){case ws:t=Vx;break;case Cs:t=Gx;break;case Es:t=kx;break;case Rs:t=zx;break;case As:t=$x;break;case Ss:t=Hx;break;case vs:t=Wx;break;case _s:t=jx}return t}_getBlendOperation(e){let t;switch(e){case Be:t=Bx;break;case Oe:t=Ox;break;case Le:t=Lx;break;case Fs:t=Ux;break;case Ms:t=Ix}return t}_getPrimitiveState(e,t,s){const r={},i=this.backend.utils;switch(r.topology=i.getPrimitiveTopology(e,s),null!==t.index&&!0===e.isLine&&!0!==e.isLineSegments&&(r.stripIndexFormat=t.index.array instanceof Uint16Array?vx:Sx),s.side){case we:r.frontFace=yx,r.cullMode=_x;break;case O:r.frontFace=yx,r.cullMode=Nx;break;case Ce:r.frontFace=yx,r.cullMode=bx}return r}_getColorWriteMask(e){return!0===e.colorWrite?Px:Dx}_getDepthCompare(e){let t;if(!1===e.depthTest)t=mx;else{switch(e.depthFunc){case at:t=ux;break;case ot:t=mx;break;case nt:t=lx;break;case it:t=cx;break;case rt:t=dx;break;case st:t=gx;break;case tt:t=hx;break;case et:t=px}}return t}}let Oy=null;void 0!==navigator.gpu&&(Oy=await navigator.gpu.requestAdapter());class Ly extends kT{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=void 0===e.alpha||e.alpha,this.parameters.antialias=!0===e.antialias,!0===this.parameters.antialias?this.parameters.sampleCount=void 0===e.sampleCount?4:e.sampleCount:this.parameters.sampleCount=1,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.adapter=null,this.device=null,this.context=null,this.colorBuffer=null,this.utils=new Ry(this),this.attributeUtils=new My(this),this.bindingUtils=new Fy(this),this.pipelineUtils=new By(this),this.textureUtils=new cy(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters,s={powerPreference:t.powerPreference},r=await navigator.gpu.requestAdapter(s);if(null===r)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const i=Object.values(iy),n=[];for(const e of i)r.features.has(e)&&n.push(e);const o={requiredFeatures:n,requiredLimits:t.requiredLimits},a=await r.requestDevice(o),u=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.adapter=r,this.device=a,this.context=u;const l=t.alpha?"premultiplied":"opaque";this.context.configure({device:this.device,format:Ax.BGRA8Unorm,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:l}),this.updateSize()}get coordinateSystem(){return y}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}beginRender(e){const t=this.get(e),s=this.device,r=e.occlusionQueryCount;let i;r>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,i=s.createQuerySet({type:"occlusion",count:r}),t.occlusionQuerySet=i,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(r),t.lastOcclusionObject=null);const n={colorAttachments:[{view:null}],depthStencilAttachment:{view:null},occlusionQuerySet:i},o=n.colorAttachments[0],a=n.depthStencilAttachment,u=this.parameters.antialias;if(null!==e.textures){const t=e.textures;n.colorAttachments=[];const s=n.colorAttachments;for(let r=0;r<t.length;r++){const i=this.get(t[r]),n=i.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:Zx});let o,a;void 0!==i.msaaTexture?(o=i.msaaTexture.createView(),a=n):(o=n,a=void 0),s.push({view:o,resolveTarget:a,loadOp:Tx,storeOp:fx})}const r=this.get(e.depthTexture);a.view=r.texture.createView(),e.stencil&&e.depthTexture.format===E&&(e.stencil=!1)}else!0===u?(o.view=this.colorBuffer.createView(),o.resolveTarget=this.context.getCurrentTexture().createView()):(o.view=this.context.getCurrentTexture().createView(),o.resolveTarget=void 0),a.view=this.textureUtils.getDepthBuffer(e.depth,e.stencil).createView();if(null!==e.textures){const t=n.colorAttachments;for(let s=0;s<t.length;s++){const r=t[s];e.clearColor?(r.clearValue=e.clearColorValue,r.loadOp=xx,r.storeOp=fx):(r.loadOp=Tx,r.storeOp=fx)}}else e.clearColor?(o.clearValue=e.clearColorValue,o.loadOp=xx,o.storeOp=fx):(o.loadOp=Tx,o.storeOp=fx);e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=xx,a.depthStoreOp=fx):(a.depthLoadOp=Tx,a.depthStoreOp=fx)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=xx,a.stencilStoreOp=fx):(a.stencilLoadOp=Tx,a.stencilStoreOp=fx));const l=s.createCommandEncoder({label:"renderContext_"+e.id}),d=l.beginRenderPass(n);if(t.descriptor=n,t.encoder=l,t.currentPass=d,t.currentSets={attributes:{}},e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:s,width:r,height:i}=e.scissorValue;d.setScissorRect(t,e.height-i-s,r,i)}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;if(s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),s>0){const r=8*s;let i=this.occludedResolveCache.get(r);void 0===i&&(i=this.device.createBuffer({size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(r,i));const n=this.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,i,0),t.encoder.copyBufferToBuffer(i,0,n,0,r),t.occlusionQueryBuffer=n,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const s=t[e];!0===s.generateMipmaps&&this.textureUtils.generateMipmaps(s)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const i=s.getMappedRange(),n=new BigUint64Array(i);for(let t=0;t<r.length;t++)0n!==n[t]&&e.add(r[t]);s.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e);let{x:s,y:r,width:i,height:n,minDepth:o,maxDepth:a}=e.viewportValue;t.setViewport(s,e.height-n-r,i,n,o,a)}clear(e,t,s,r=null){const i=this.device,n=this.renderer,o=[];let a,u,l,d;if(e){const e=this.getClearColor();u={r:e.r,g:e.g,b:e.b,a:e.a}}if(null===r){if(l=n.depth,d=n.stencil,t=t&&l,s=s&&d,e){const e={};!0===this.parameters.antialias?(e.view=this.colorBuffer.createView(),e.resolveTarget=this.context.getCurrentTexture().createView()):e.view=this.context.getCurrentTexture().createView(),e.clearValue=u,e.loadOp=xx,e.storeOp=fx,o.push(e)}(t||s)&&(a={view:this.textureUtils.getDepthBuffer(n.depth,n.stencil).createView()})}else{if(l=r.depth,d=r.stencil,t=t&&l,s=s&&d,e)for(const e of r.textures){const t=this.get(e),s=t.texture.createView();let r,i;void 0!==t.msaaTexture?(r=t.msaaTexture.createView(),i=s):(r=s,i=void 0),o.push({view:r,resolveTarget:i,clearValue:u,loadOp:xx,storeOp:fx})}if(t||s){a={view:this.get(r.depthTexture).texture.createView()}}}void 0!==a&&(t?(a.depthLoadOp=xx,a.depthClearValue=n.getClearDepth(),a.depthStoreOp=fx):(a.depthLoadOp=Tx,a.depthStoreOp=fx),s?(a.stencilLoadOp=xx,a.stencilClearValue=n.getClearStencil(),a.stencilStoreOp=fx):(a.stencilLoadOp=Tx,a.stencilStoreOp=fx));const c=i.createCommandEncoder({});c.beginRenderPass({colorAttachments:o,depthStencilAttachment:a}).end(),i.queue.submit([c.finish()])}beginCompute(e){const t=this.get(e);t.cmdEncoderGPU=this.device.createCommandEncoder({}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass()}compute(e,t,s,r){const{passEncoderGPU:i}=this.get(e),n=this.get(r).pipeline;i.setPipeline(n);const o=this.get(s).group;i.setBindGroup(0,o),i.dispatchWorkgroups(t.dispatchCount)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}draw(e,t){const{object:s,geometry:r,context:i,pipeline:n}=e,o=this.get(e.getBindings()),a=this.get(i),u=this.get(n).pipeline,l=a.currentSets,d=a.currentPass;l.pipeline!==u&&(d.setPipeline(u),l.pipeline=u);const c=o.group;d.setBindGroup(0,c);const h=e.getIndex(),p=null!==h;if(!0===p&&l.index!==h){const e=this.get(h).buffer,t=h.array instanceof Uint16Array?vx:Sx;d.setIndexBuffer(e,t),l.index=h}const g=e.getVertexBuffers();for(let e=0,t=g.length;e<t;e++){const t=g[e];if(l.attributes[e]!==t){const s=this.get(t).buffer;d.setVertexBuffer(e,s),l.attributes[e]=t}}if(void 0!==a.occlusionQuerySet){const e=a.lastOcclusionObject;e!==s&&(null!==e&&!0===e.occlusionTest&&(d.endOcclusionQuery(),a.occlusionQueryIndex++),!0===s.occlusionTest&&(d.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=s),a.lastOcclusionObject=s)}const m=r.drawRange,f=m.start,T=this.getInstanceCount(e);if(0!==T)if(!0===p){const e=m.count!==1/0?m.count:h.count;d.drawIndexed(e,T,f,0,0),t.update(s,e,T)}else{const e=r.attributes.position,i=m.count!==1/0?m.count:e.count;d.draw(i,T,f,0),t.update(s,i,T)}}needsRenderUpdate(e){const t=this.get(e),{object:s,material:r}=e,i=this.utils,n=i.getSampleCount(e.context),o=i.getCurrentColorSpace(e.context),a=i.getCurrentColorFormat(e.context),u=i.getCurrentDepthStencilFormat(e.context),l=i.getPrimitiveTopology(s,r);let d=!1;return t.material===r&&t.materialVersion===r.version&&t.transparent===r.transparent&&t.blending===r.blending&&t.premultipliedAlpha===r.premultipliedAlpha&&t.blendSrc===r.blendSrc&&t.blendDst===r.blendDst&&t.blendEquation===r.blendEquation&&t.blendSrcAlpha===r.blendSrcAlpha&&t.blendDstAlpha===r.blendDstAlpha&&t.blendEquationAlpha===r.blendEquationAlpha&&t.colorWrite===r.colorWrite&&t.depthWrite===r.depthWrite&&t.depthTest===r.depthTest&&t.depthFunc===r.depthFunc&&t.stencilWrite===r.stencilWrite&&t.stencilFunc===r.stencilFunc&&t.stencilFail===r.stencilFail&&t.stencilZFail===r.stencilZFail&&t.stencilZPass===r.stencilZPass&&t.stencilFuncMask===r.stencilFuncMask&&t.stencilWriteMask===r.stencilWriteMask&&t.side===r.side&&t.alphaToCoverage===r.alphaToCoverage&&t.sampleCount===n&&t.colorSpace===o&&t.colorFormat===a&&t.depthStencilFormat===u&&t.primitiveTopology===l||(t.material=r,t.materialVersion=r.version,t.transparent=r.transparent,t.blending=r.blending,t.premultipliedAlpha=r.premultipliedAlpha,t.blendSrc=r.blendSrc,t.blendDst=r.blendDst,t.blendEquation=r.blendEquation,t.blendSrcAlpha=r.blendSrcAlpha,t.blendDstAlpha=r.blendDstAlpha,t.blendEquationAlpha=r.blendEquationAlpha,t.colorWrite=r.colorWrite,t.depthWrite=r.depthWrite,t.depthTest=r.depthTest,t.depthFunc=r.depthFunc,t.stencilWrite=r.stencilWrite,t.stencilFunc=r.stencilFunc,t.stencilFail=r.stencilFail,t.stencilZFail=r.stencilZFail,t.stencilZPass=r.stencilZPass,t.stencilFuncMask=r.stencilFuncMask,t.stencilWriteMask=r.stencilWriteMask,t.side=r.side,t.alphaToCoverage=r.alphaToCoverage,t.sampleCount=n,t.colorSpace=o,t.colorFormat=a,t.depthStencilFormat=u,t.primitiveTopology=l,d=!0),d}getRenderCacheKey(e){const{object:t,material:s}=e,r=this.utils,i=e.context;return[s.transparent,s.blending,s.premultipliedAlpha,s.blendSrc,s.blendDst,s.blendEquation,s.blendSrcAlpha,s.blendDstAlpha,s.blendEquationAlpha,s.colorWrite,s.depthWrite,s.depthTest,s.depthFunc,s.stencilWrite,s.stencilFunc,s.stencilFail,s.stencilZFail,s.stencilZPass,s.stencilFuncMask,s.stencilWriteMask,s.side,r.getSampleCount(i),r.getCurrentColorSpace(i),r.getCurrentColorFormat(i),r.getCurrentDepthStencilFormat(i),r.getPrimitiveTopology(t,s)].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,i){return this.textureUtils.copyTextureToBuffer(e,t,s,r,i)}createNodeBuilder(e,t,s=null){return new Ay(e,t,s)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e){this.pipelineUtils.createRenderPipeline(e)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}createBindings(e){this.bindingUtils.createBindings(e)}updateBindings(e){this.bindingUtils.createBindings(e)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer()}getMaxAnisotropy(){return 16}hasFeature(e){return(this.adapter||Oy).features.has(e)}copyFramebufferToTexture(e,t){const s=this.get(t),{encoder:r,descriptor:i}=s;let n=null;e.isFramebufferTexture?n=this.context.getCurrentTexture():e.isDepthTexture&&(n=this.textureUtils.getDepthBuffer(t.depth,t.stencil));const o=this.get(e).texture;s.currentPass.end(),r.copyTextureToTexture({texture:n,origin:{x:0,y:0,z:0}},{texture:o},[e.image.width,e.image.height]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),i.colorAttachments[0].loadOp=Tx,t.depth&&(i.depthStencilAttachment.depthLoadOp=Tx),t.stencil&&(i.depthStencilAttachment.stencilLoadOp=Tx),s.currentPass=r.beginRenderPass(i),s.currentSets={attributes:{}}}}class Uy extends yT{constructor(e={}){let t;t=Os.isAvailable()?Ly:sx;super(new t(e),e),this.isWebGPURenderer=!0}}class Iy extends yT{constructor(e={},t=!1){let s;s=Os.isAvailable()&&!t?Ly:sx;super(new s(e)),this.isWebGPURenderer=!0}}const Dy="requestVideoFrameCallback"in HTMLVideoElement.prototype,Py=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,Vy=window.cancelAnimationFrame||window.mozCancelAnimationFrame;let Gy;class ky{constructor(e,t){this._callback=e,this.video=t,this.animationID=null,this.running=!1}set callback(e){this._callback=e}async animateLegacy(){const e=this.video.currentTime;e>Gy&&((1/(e-Gy)).toFixed(),await this._callback(e,{width:this.video.videoWidth,height:this.video.videoHeight})),Gy=e,this.animationID=Py((async()=>await this.animateLegacy()))}async animate(e,t){await this._callback(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initAnimate(){this.animateRef=async(e,t)=>await this.animate(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initLegacyAnimate(){this.animateLegacy()}start(){this.stop(),Dy?this.initAnimate():(Gy=new Date,this.initLegacyAnimate()),this.running=!0}stop(){this.running=!1,Dy?this.animateRef=()=>{}:Vy(this.animationID&&this.animationID.data&&this.animationID.data.handleId||this.animationID)}}const zy="requestVideoFrameCallback"in HTMLVideoElement.prototype,$y=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,Hy=window.cancelAnimationFrame||window.mozCancelAnimationFrame;let Wy;class jy{constructor(e,t){this._callback=e,this.video=t,this.animationID=null,this.running=!1,this.updateNodesRef=()=>{}}set nodes(e){this._nodes=e,e&&(this.updateNodesRef=()=>{this._nodes.nodeFrame.update()})}set callback(e){this._callback=e}async animateLegacy(){const e=this.video.currentTime;e>Wy&&((1/(e-Wy)).toFixed(),this.updateNodesRef(),await this._callback(e,{width:this.video.videoWidth,height:this.video.videoHeight})),Wy=e,this.animationID=$y((async()=>await this.animateLegacy()))}async animate(e,t){this.updateNodesRef(),await this._callback(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initAnimate(){this.animateRef=async(e,t)=>await this.animate(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initLegacyAnimate(){this.animateLegacy()}start(){this.stop(),zy?this.initAnimate():(Wy=new Date,this.initLegacyAnimate()),this.running=!0}stop(){this.running=!1,zy?this.animateRef=()=>{}:Hy(this.animationID&&this.animationID.data&&this.animationID.data.handleId||this.animationID)}}export{Yl as AONode,_p as AfterImageNode,sg as AmbientLightNode,$l as AnalyticLightNode,Cr as ArrayElementNode,Zi as ArrayUniformNode,Ji as AssignNode,rn as AttributeNode,Og as BRDF_GGX,Ng as BRDF_Lambert,qc as BitangentNode,Mh as BlendModeNode,gl as BufferAttributeNode,Nl as BufferNode,Gh as BumpMapNode,on as BypassNode,dn as CacheNode,ou as CameraNode,ng as CheckerNode,qn as CodeNode,Wh as ColorAdjustmentNode,Oa as ColorSpaceNode,Xp as ComputeNode,Qd as CondNode,Ur as ConstNode,hn as ContextNode,wr as ConvertNode,Vl as CubeTextureNode,Lg as DFGApprox,Bg as D_GGX,Jp as DirectionalLightNode,mc as DiscardNode,wo as EPSILON,rd as EnvironmentNode,Zl as EquirectUVNode,Va as ExpressionNode,bg as F_Schlick,kp as FogExp2Node,Dp as FogNode,Vp as FogRangeNode,Uh as FrontFacingNode,Cp as FunctionCallNode,Jn as FunctionNode,xc as FunctionOverloadingNode,pm as GLSLNodeParser,yp as GaussianBlurNode,hc as HashNode,rg as HemisphereLightNode,tg as IESSpotLightNode,Mo as INFINITY,xi as If,mn as IndexNode,yl as InstanceNode,lg as InstancedPointsNodeMaterial,Fr as JoinNode,Yp as LightNode,Kl as LightingContextNode,xn as LightingModel,kl as LightingNode,Wl as LightsNode,mg as Line2NodeMaterial,cg as LineBasicNodeMaterial,pg as LineDashedNodeMaterial,Nc as LoopNode,vc as MatcapUVNode,Bu as MaterialNode,Ka as MaterialReferenceNode,Co as MathNode,ka as MaxMipLevelNode,yg as MeshBasicNodeMaterial,Rg as MeshLambertNodeMaterial,Tg as MeshNormalNodeMaterial,Cg as MeshPhongNodeMaterial,Qg as MeshPhysicalNodeMaterial,Jg as MeshSSSNodeMaterial,Yg as MeshStandardNodeMaterial,mu as ModelNode,hl as ModelViewProjectionNode,Ul as MorphNode,xr as Node,Nn as NodeAttribute,oc as NodeBuilder,ln as NodeCache,An as NodeCode,ac as NodeFrame,uc as NodeFunctionInput,Rn as NodeKeywords,ag as NodeLoader,Od as NodeMaterial,nm as NodeMaterialLoader,om as NodeObjectLoader,sr as NodeShaderStage,ir as NodeType,_n as NodeUniform,rr as NodeUpdateType,mr as NodeUtils,vn as NodeVar,Sn as NodeVarying,Zh as NormalMapNode,vu as NormalNode,Za as Object3DNode,ao as OperatorNode,Mc as OscNode,dc as OutputStructNode,Uc as PackingNode,jn as ParameterNode,Ap as PassNode,Sg as PhongLightingModel,Xg as PhysicalLightingModel,Zp as PointLightNode,mh as PointUVNode,tm as PointsNodeMaterial,nl as PositionNode,tp as PosterizeNode,En as PropertyNode,Wp as RangeNode,Xa as ReferenceNode,Dl as ReflectVectorNode,Pc as RemapNode,kc as RotateUVNode,Th as SceneNode,Ig as Schlick_to_F0,Up as ScriptableNode,Mp as ScriptableValueNode,Lr as SetNode,ui as ShaderNode,Ml as SkinningNode,ed as SpecularMIPLevelNode,Or as SplitNode,eg as SpotLightNode,rm as SpriteNodeMaterial,$c as SpriteSheetUVNode,Jd as StackNode,bh as StorageBufferNode,ep as TBNViewMatrix,vl as TangentNode,Mr as TempNode,ph as TextureBicubicNode,$a as TextureNode,_h as TextureStoreNode,Ac as TimerNode,lp as ToneMappingNode,Wc as TriplanarTexturesNode,ro as UVNode,_r as UniformGroupNode,Ki as UniformNode,Sh as UserDataNode,Fg as V_GGX_SmithCorrelated,yn as VarNode,tn as VaryingNode,th as VertexColorNode,ky as VideoAnimation,vd as ViewportDepthNode,Nd as ViewportDepthTextureNode,ud as ViewportNode,hp as ViewportSharedTextureNode,Td as ViewportTextureNode,Os as WebGPU,Iy as WebGPUGLRenderer,Uy as WebGPURenderer,jy as WebGPUVideoAnimation,Yo as abs,Xo as acos,uo as add,ql as addLightNode,yr as addNodeClass,Pr as addNodeElement,Ld as addNodeMaterial,vp as afterImage,bo as and,yi as append,ji as arrayBuffer,jo as asin,en as assign,qo as atan,aa as atan2,nn as attribute,xh as backgroundBlurriness,yh as backgroundIntensity,vo as bitAnd,So as bitOr,Ao as bitXor,Yc as bitangentGeometry,Kc as bitangentLocal,Qc as bitangentView,Zc as bitangentWorld,oa as bitcast,Gi as bmat3,Hi as bmat4,Si as bool,_l as buffer,ml as bufferAttribute,kh as bumpMap,Fh as burn,Ci as bvec2,Bi as bvec3,Ii as bvec4,an as bypass,cn as cache,wp as call,lu as cameraFar,du as cameraLogDepth,uu as cameraNear,hu as cameraNormalMatrix,gu as cameraPosition,au as cameraProjectionMatrix,cu as cameraViewMatrix,pu as cameraWorldMatrix,_a as cbrt,Go as ceil,og as checker,Sa as clamp,On as clearcoat,Ln as clearcoatRoughness,Yn as code,bi as color,Ia as colorSpaceToLinear,Dc as colorToDirection,qp as compute,Zd as cond,pn as context,qi as convert,Ho as cos,br as createNodeFromType,Ud as createNodeMaterialFromType,fa as cross,Gl as cubeTexture,ea as dFdx,ta as dFdy,$n as dashSize,or as defaultBuildStages,nr as defaultShaderStages,Bo as degrees,zp as densityFog,wd as depth,Ep as depthPass,Fd as depthPixel,Md as depthTexture,ga as difference,Mn as diffuseColor,Ic as directionToColor,Tc as discard,pa as distance,ho as div,Bh as dodge,ma as dot,fl as dynamicBufferAttribute,Xi as element,go as equal,Jl as equirectUV,Oo as exp,Lo as exp2,Ga as expression,Dh as faceDirection,Ca as faceForward,Ni as float,Vo as floor,Pp as fog,zo as fract,Ar as frameGroup,wc as frameId,Ih as frontFacing,na as fwidth,Hn as gapSize,bp as gaussianBlur,ai as getConstNodeType,Ti as getCurrentStack,Qp as getDistanceAttenuation,wg as getGeometryRoughness,Mg as getRoughness,Lp as global,Zn as glsl,to as glslFn,To as greaterThan,yo as greaterThanEqual,pc as hash,qh as hue,Pi as imat3,zi as imat4,bl as instance,Tn as instanceIndex,Tl as instancedBufferAttribute,xl as instancedDynamicBufferAttribute,_i as int,Po as inverseSqrt,Dn as iridescence,Pn as iridescenceIOR,Vn as iridescenceThickness,Ri as ivec2,Mi as ivec3,Li as ivec4,Kn as js,gn as label,Qo as length,fo as lessThan,xo as lessThanEqual,Xl as lightNodes,Kp as lightTargetDirection,Ql as lightingContext,jl as lights,Ua as linearToColorSpace,Da as linearTosRGB,Uo as log,Io as log2,_c as loop,Yh as lumaCoeffs,Kh as luminance,Di as mat3,ki as mat4,Sc as matcapUV,Ou as materialAlphaTest,Hu as materialClearcoat,ju as materialClearcoatNormal,Wu as materialClearcoatRoughness,Lu as materialColor,Iu as materialEmissive,Ku as materialIridescence,Qu as materialIridescenceIOR,Zu as materialIridescenceThickness,rl as materialLineDashOffset,el as materialLineDashSize,tl as materialLineGapSize,Ju as materialLineScale,sl as materialLineWidth,zu as materialMetalness,$u as materialNormal,Du as materialOpacity,il as materialPointWidth,Qa as materialReference,Gu as materialReflectivity,Xu as materialRotation,ku as materialRoughness,qu as materialSheen,Yu as materialSheenRoughness,Uu as materialShininess,Pu as materialSpecularColor,Vu as materialSpecularStrength,la as max,za as maxMipLevel,Bn as metalness,ua as min,va as mix,da as mod,fu as modelDirection,xu as modelNormalMatrix,bu as modelPosition,Nu as modelScale,Tu as modelViewMatrix,_u as modelViewPosition,pl as modelViewProjection,yu as modelWorldMatrix,Il as morph,co as mul,Bf as mx_aastep,qf as mx_cell_noise_float,kf as mx_contrast,Yf as mx_fractal_noise_float,Kf as mx_fractal_noise_vec2,Qf as mx_fractal_noise_vec3,Zf as mx_fractal_noise_vec4,wf as mx_hsvtorgb,zf as mx_noise_float,$f as mx_noise_vec3,Hf as mx_noise_vec4,Lf as mx_ramplr,Uf as mx_ramptb,Mf as mx_rgbtohsv,Gf as mx_safepower,Df as mx_splitlr,Pf as mx_splittb,Ff as mx_srgb_texture_to_lin_rec709,Vf as mx_transform_uv,Wf as mx_worley_noise_float,jf as mx_worley_noise_vec2,Xf as mx_worley_noise_vec3,Zo as negate,ci as nodeArray,pi as nodeImmutable,li as nodeObject,di as nodeObjects,hi as nodeProxy,Su as normalGeometry,Au as normalLocal,Jh as normalMap,Ru as normalView,Eu as normalWorld,ko as normalize,Ja as objectDirection,Er as objectGroup,tu as objectNormalMatrix,ru as objectPosition,iu as objectScale,eu as objectViewMatrix,nu as objectViewPosition,su as objectWorldMatrix,Jo as oneMinus,No as or,Ad as orthographicDepthToViewZ,Lc as oscSawtooth,Fc as oscSine,Bc as oscSquare,Oc as oscTriangle,zn as output,cc as outputStruct,Oh as overlay,bc as overloadingFn,Xn as parameter,Rp as pass,Ed as perspectiveDepthToViewZ,fh as pointUV,Wn as pointWidth,ol as positionGeometry,al as positionLocal,dl as positionView,cl as positionViewDirection,ul as positionWorld,ll as positionWorldDirection,sp as posterize,Ta as pow,xa as pow2,ya as pow3,ba as pow4,Cn as property,Fo as radians,jp as range,Gp as rangeFog,ra as reciprocal,qa as reference,Ya as referenceIndex,ha as reflect,Pl as reflectVector,Ra as refract,po as remainder,Vc as remap,Gc as remapClamp,Rr as renderGroup,zc as rotateUV,Fn as roughness,sa as round,Pa as sRGBToLinear,ja as sampler,Aa as saturate,jh as saturation,Lh as screen,Ip as scriptable,Fp as scriptableValue,fi as setCurrentStack,gi as shader,ar as shaderStages,Un as sheen,In as sheenRoughness,Ro as shiftLeft,Eo as shiftRight,kn as shininess,Ko as sign,$o as sin,Fl as skinning,Ea as smoothstep,Gn as specularColor,td as specularMIPLevel,Yi as split,Hc as spritesheetUV,Do as sqrt,ec as stack,ca as step,Nh as storage,Wi as string,lo as sub,Wo as tan,Sl as tangentGeometry,Al as tangentLocal,Rl as tangentView,El as tangentWorld,bn as temp,Ha as texture,gh as textureBicubic,Wa as textureLoad,vh as textureStore,Cc as timerDelta,Ec as timerGlobal,Rc as timerLocal,dp as toneMapping,Na as transformDirection,Jc as transformedBitangentView,eh as transformedBitangentWorld,Mu as transformedClearcoatNormalView,Cu as transformedNormalView,wu as transformedNormalWorld,Cl as transformedTangentView,wl as transformedTangentWorld,Xc as triplanarTexture,jc as triplanarTextures,ia as trunc,mi as tslFn,vi as uint,Vi as umat3,$i as umat4,Qi as uniform,vr as uniformGroup,Ah as userData,io as uv,Ei as uvec2,Fi as uvec3,Ui as uvec4,sn as varying,wn as varyingProperty,Ai as vec2,wi as vec3,Oi as vec4,ur as vectorComponents,sh as vertexColor,fn as vertexIndex,Xh as vibrance,Sd as viewZToOrthographicDepth,Rd as viewZToPerspectiveDepth,cd as viewport,pd as viewportBottomLeft,md as viewportBottomRight,ld as viewportCoordinate,_d as viewportDepthTexture,yd as viewportMipTexture,dd as viewportResolution,pp as viewportSharedTexture,xd as viewportTexture,hd as viewportTopLeft,gd as viewportTopRight,Qn as wgsl,so as wgslFn,_o as xor};
