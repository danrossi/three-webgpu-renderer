/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{DynamicDrawUsage as e,Uint32BufferAttribute as t,Uint16BufferAttribute as s,Color as n,Vector2 as i,Vector3 as r,Vector4 as o,Matrix3 as a,Matrix4 as u,EventDispatcher as l,MathUtils as c,LinearSRGBColorSpace as d,SRGBColorSpace as h,TangentSpaceNormalMap as p,ObjectSpaceNormalMap as m,StaticDrawUsage as g,InterleavedBuffer as f,InterleavedBufferAttribute as x,InstancedInterleavedBuffer as b,DepthTexture as T,NearestFilter as _,LessCompare as y,ShaderMaterial as N,NoColorSpace as v,Material as S,WebGLCubeRenderTarget as A,BoxGeometry as R,BackSide as C,NoBlending as E,Mesh as w,Scene as M,LinearMipmapLinearFilter as O,LinearFilter as B,CubeCamera as U,RenderTarget as F,sRGBEncoding as I,LinearEncoding as L,Float16BufferAttribute as P,REVISION as D,NoToneMapping as G,LinearToneMapping as k,ReinhardToneMapping as z,CineonToneMapping as V,ACESFilmicToneMapping as $,FramebufferTexture as H,UnsignedIntType as W,DepthFormat as q,PointLight as j,DirectionalLight as X,SpotLight as Y,AmbientLight as K,HemisphereLight as Q,LineBasicMaterial as Z,LineDashedMaterial as J,MeshNormalMaterial as ee,MeshBasicMaterial as te,MeshLambertMaterial as se,MeshPhongMaterial as ne,MeshStandardMaterial as ie,MeshPhysicalMaterial as re,PointsMaterial as oe,SpriteMaterial as ae,MaterialLoader as ue,DepthStencilFormat as le,UnsignedInt248Type as ce,EquirectangularReflectionMapping as de,EquirectangularRefractionMapping as he,CubeReflectionMapping as pe,CubeRefractionMapping as me,SphereGeometry as ge,Frustum as fe,DoubleSide as xe,FrontSide as be,createCanvasElement as Te,AddEquation as _e,SubtractEquation as ye,ReverseSubtractEquation as Ne,ZeroFactor as ve,OneFactor as Se,SrcColorFactor as Ae,SrcAlphaFactor as Re,SrcAlphaSaturateFactor as Ce,DstColorFactor as Ee,DstAlphaFactor as we,OneMinusSrcColorFactor as Me,OneMinusSrcAlphaFactor as Oe,OneMinusDstColorFactor as Be,OneMinusDstAlphaFactor as Ue,CullFaceNone as Fe,CullFaceBack as Ie,CullFaceFront as Le,CustomBlending as Pe,MultiplyBlending as De,SubtractiveBlending as Ge,AdditiveBlending as ke,NormalBlending as ze,NotEqualDepth as Ve,GreaterDepth as $e,GreaterEqualDepth as He,EqualDepth as We,LessEqualDepth as qe,LessDepth as je,AlwaysDepth as Xe,NeverDepth as Ye,UnsignedByteType as Ke,UnsignedShort4444Type as Qe,UnsignedShort5551Type as Ze,ByteType as Je,ShortType as et,UnsignedShortType as tt,IntType as st,FloatType as nt,HalfFloatType as it,AlphaFormat as rt,RGBAFormat as ot,LuminanceFormat as at,LuminanceAlphaFormat as ut,RedFormat as lt,RedIntegerFormat as ct,RGFormat as dt,RGIntegerFormat as ht,RGBAIntegerFormat as pt,RGB_S3TC_DXT1_Format as mt,RGBA_S3TC_DXT1_Format as gt,RGBA_S3TC_DXT3_Format as ft,RGBA_S3TC_DXT5_Format as xt,RGB_PVRTC_4BPPV1_Format as bt,RGB_PVRTC_2BPPV1_Format as Tt,RGBA_PVRTC_4BPPV1_Format as _t,RGBA_PVRTC_2BPPV1_Format as yt,RGB_ETC1_Format as Nt,RGB_ETC2_Format as vt,RGBA_ETC2_EAC_Format as St,RGBA_ASTC_4x4_Format as At,RGBA_ASTC_5x4_Format as Rt,RGBA_ASTC_5x5_Format as Ct,RGBA_ASTC_6x5_Format as Et,RGBA_ASTC_6x6_Format as wt,RGBA_ASTC_8x5_Format as Mt,RGBA_ASTC_8x6_Format as Ot,RGBA_ASTC_8x8_Format as Bt,RGBA_ASTC_10x5_Format as Ut,RGBA_ASTC_10x6_Format as Ft,RGBA_ASTC_10x8_Format as It,RGBA_ASTC_10x10_Format as Lt,RGBA_ASTC_12x10_Format as Pt,RGBA_ASTC_12x12_Format as Dt,RGBA_BPTC_Format as Gt,RED_RGTC1_Format as kt,SIGNED_RED_RGTC1_Format as zt,RED_GREEN_RGTC2_Format as Vt,SIGNED_RED_GREEN_RGTC2_Format as $t,RepeatWrapping as Ht,ClampToEdgeWrapping as Wt,MirroredRepeatWrapping as qt,NearestMipmapNearestFilter as jt,NearestMipmapLinearFilter as Xt,LinearMipmapNearestFilter as Yt,NeverCompare as Kt,AlwaysCompare as Qt,LessEqualCompare as Zt,EqualCompare as Jt,GreaterEqualCompare as es,GreaterCompare as ts,NotEqualCompare as ss,WebGLCoordinateSystem as ns,Texture as is,CubeTexture as rs,NotEqualStencilFunc as os,GreaterStencilFunc as as,GreaterEqualStencilFunc as us,EqualStencilFunc as ls,LessEqualStencilFunc as cs,LessStencilFunc as ds,AlwaysStencilFunc as hs,NeverStencilFunc as ps,DecrementWrapStencilOp as ms,IncrementWrapStencilOp as gs,DecrementStencilOp as fs,IncrementStencilOp as xs,InvertStencilOp as bs,ReplaceStencilOp as Ts,ZeroStencilOp as _s,KeepStencilOp as ys,MaxEquation as Ns,MinEquation as vs,WebGPUCoordinateSystem as Ss}from"three";void 0===window.GPUShaderStage&&(window.GPUShaderStage={VERTEX:1,FRAGMENT:2,COMPUTE:4});let As=!1;if(void 0!==navigator.gpu){null!==await navigator.gpu.requestAdapter()&&(As=!0)}class Rs{static isAvailable(){return As}static getErrorMessage(){const e=document.createElement("div");return e.id="webgpumessage",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.maxWidth="400px",e.style.margin="5em auto 0",e.innerHTML='Your browser does not support <a href="https://gpuweb.github.io/gpuweb/" style="color:blue">WebGPU</a> yet',e}}class Cs{constructor(){this.nodes=null,this.animationLoop=null,this.requestId=null,this.isAnimating=!1,this.context=self}start(){if(!0===this.isAnimating||null===this.animationLoop||null===this.nodes)return;this.isAnimating=!0;const e=(t,s)=>{this.requestId=self.requestAnimationFrame(e),this.nodes.nodeFrame.update(),this.animationLoop(t,s)};this.requestId=self.requestAnimationFrame(e)}stop(){self.cancelAnimationFrame(this.requestId),this.isAnimating=!1}setAnimationLoop(e){this.animationLoop=e}setNodes(e){this.nodes=e}}class Es{constructor(){this.weakMap=new WeakMap}get(e){if(Array.isArray(e)){let t=this.weakMap;for(let s=0;s<e.length-1;s++)if(t=t.get(e[s]),void 0===t)return;return t.get(e[e.length-1])}return super.get(e)}set(e,t){if(Array.isArray(e)){let s=this.weakMap;for(let t=0;t<e.length-1;t++){const n=e[t];!1===s.has(n)&&s.set(n,new WeakMap),s=s.get(n)}return s.set(e[e.length-1],t)}return super.set(e,t)}delete(e){if(Array.isArray(e)){let t=this.weakMap;for(let s=0;s<e.length-1;s++)if(t=t.get(e[s]),void 0===t)return!1;return t.delete(e[e.length-1])}return super.delete(e)}dispose(){this.weakMap.clear()}}let ws=0;class Ms{constructor(e,t,s,n,i,r,o,a,u){this._nodes=e,this._geometries=t,this.id=ws++,this.renderer=s,this.object=n,this.material=i,this.scene=r,this.camera=o,this.lightsNode=a,this.context=u,this.geometry=n.geometry,this.version=i.version,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],n=new Set;for(const i of e){const e=i.node&&i.node.attribute?i.node.attribute:t.getAttribute(i.name);s.push(e);const r=e.isInterleavedBufferAttribute?e.data:e;n.add(r)}return this.attributes=s,this.vertexBuffers=Array.from(n.values()),s}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getMaterialCacheKey(){const e=this.material;let t=e.customProgramCacheKey();for(const s in e){if(/^(is[A-Z])|^(visible|version|uuid|name|opacity|userData)$/.test(s))continue;let n=e[s];if(null!==n){const e=typeof n;"number"===e?n=0!==n?"1":"0":"object"===e&&(n="{}")}t+=n+","}return t}getNodesCacheKey(){return this._nodes.getCacheKey(this.scene,this.lightsNode)}getCacheKey(){return`{material:${this.getMaterialCacheKey()},nodes:${this.getNodesCacheKey()}`}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}class Os{constructor(e,t,s,n,i,r){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=n,this.bindings=i,this.info=r,this.chainMaps={}}get(e,t,s,n,i,r,o){const a=this.getChainMap(o),u=[e,t,r,i];let l=a.get(u);return void 0===l?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,n,i,r,o),a.set(u,l)):l.version!==t.version&&(l.version=t.version,l.initialCacheKey!==l.getCacheKey()&&(l.dispose(),l=this.get(e,t,s,n,i,r,o))),l}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Es)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,n,i,r,o,a,u,l){const c=this.getChainMap(l),d=new Ms(e,t,s,n,i,r,o,a,u);return d.onDispose=()=>{this.pipelines.delete(d),this.bindings.delete(d),this.nodes.delete(d),c.delete(d.getChainArray())},d}}class Bs{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data.clear()}}const Us=1,Fs=2,Is=4,Ls=16;class Ps extends Bs{constructor(e){super(),this.backend=e}delete(e){void 0!==super.delete(e)&&this.backend.destroyAttribute(e)}update(t,s){const n=this.get(t);if(void 0===n.version)s===Us?this.backend.createAttribute(t):s===Fs?this.backend.createIndexAttribute(t):s===Is&&this.backend.createStorageAttribute(t),n.version=this._getBufferAttribute(t).version;else{const s=this._getBufferAttribute(t);(n.version<s.version||s.usage===e)&&(this.backend.updateAttribute(t),n.version=s.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function Ds(e){return null!==e.index?e.index.version:e.attributes.position.version}function Gs(e){const n=[],i=e.index,r=e.attributes.position;if(null!==i){const e=i.array;for(let t=0,s=e.length;t<s;t+=3){const s=e[t+0],i=e[t+1],r=e[t+2];n.push(s,i,i,r,r,s)}}else{for(let e=0,t=r.array.length/3-1;e<t;e+=3){const t=e+0,s=e+1,i=e+2;n.push(t,s,s,i,i,t)}}const o=new(function(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}(n)?t:s)(n,1);return o.version=Ds(e),o}class ks extends Bs{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeFrame=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const n=t.index,i=e.getAttributes();null!==n&&this.attributes.delete(n);for(const e of i)this.attributes.delete(e);const r=this.wireframes.get(t);void 0!==r&&this.attributes.delete(r),t.removeEventListener("dispose",s)};t.addEventListener("dispose",s)}updateAttributes(e){const t=e.getAttributes();for(const e of t)this.updateAttribute(e,Us);const s=this.getIndex(e);null!==s&&this.updateAttribute(s,Fs)}updateAttribute(e,t){const s=this.info.render.frame;this.attributeFrame.get(e)!==s&&(this.attributes.update(e,t),this.attributeFrame.set(e,s))}getIndex(e){const{geometry:t,material:s}=e;let n=t.index;if(!0===s.wireframe){const e=this.wireframes;let s=e.get(t);void 0===s?(s=Gs(t),e.set(t,s)):s.version!==Ds(t)&&(this.attributes.delete(s),s=Gs(t),e.set(t,s)),n=s}return n}}class zs{constructor(){this.autoReset=!0,this.render={frame:0,drawCalls:0,triangles:0,points:0,lines:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine&&(this.render.lines+=s*(t-1))}reset(){this.render.drawCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.render.frame=0,this.memory.geometries=0,this.memory.textures=0}}class Vs{constructor(e){this.cacheKey=e,this.usedTimes=0}}class $s extends Vs{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class Hs extends Vs{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let Ws=0;class qs{constructor(e,t){this.id=Ws++,this.code=e,this.stage=t,this.usedTimes=0}}class js extends Bs{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,n=this.get(e);if(this._needsComputeUpdate(e)){const i=n.pipeline;i&&(i.usedTimes--,i.computeProgram.usedTimes--);const r=this.nodes.getForCompute(e);let o=this.programs.compute.get(r.computeShader);void 0===o&&(i&&0===i.computeProgram.usedTimes&&this._releaseProgram(i.computeProgram),o=new qs(r.computeShader,"compute"),this.programs.compute.set(r.computeShader,o),s.createProgram(o));const a=this._getComputeCacheKey(e,o);let u=this.caches.get(a);void 0===u&&(i&&0===i.usedTimes&&this._releasePipeline(e),u=this._getComputePipeline(e,o,a,t)),u.usedTimes++,o.usedTimes++,n.version=e.version,n.pipeline=u}return n.pipeline}getForRender(e){const{backend:t}=this,s=this.get(e);if(this._needsRenderUpdate(e)){const n=s.pipeline;n&&(n.usedTimes--,n.vertexProgram.usedTimes--,n.fragmentProgram.usedTimes--);const i=e.getNodeBuilderState();let r=this.programs.vertex.get(i.vertexShader);void 0===r&&(n&&0===n.vertexProgram.usedTimes&&this._releaseProgram(n.vertexProgram),r=new qs(i.vertexShader,"vertex"),this.programs.vertex.set(i.vertexShader,r),t.createProgram(r));let o=this.programs.fragment.get(i.fragmentShader);void 0===o&&(n&&0===n.fragmentProgram.usedTimes&&this._releaseProgram(n.fragmentProgram),o=new qs(i.fragmentShader,"fragment"),this.programs.fragment.set(i.fragmentShader,o),t.createProgram(o));const a=this._getRenderCacheKey(e,r,o);let u=this.caches.get(a);void 0===u?(n&&0===n.usedTimes&&this._releasePipeline(n),u=this._getRenderPipeline(e,r,o,a)):e.pipeline=u,u.usedTimes++,r.usedTimes++,o.usedTimes++,s.pipeline=u}return s.pipeline}delete(e){const t=this.get(e).pipeline;t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,n){s=s||this._getComputeCacheKey(e,t);let i=this.caches.get(s);return void 0===i&&(i=new Hs(s,t),this.caches.set(s,i),this.backend.createComputePipeline(i,n)),i}_getRenderPipeline(e,t,s,n){n=n||this._getRenderCacheKey(e,t,s);let i=this.caches.get(n);return void 0===i&&(i=new $s(n,t,s),this.caches.set(n,i),e.pipeline=i,this.backend.createRenderPipeline(e)),i}_getComputeCacheKey(e,t){return"compute"+e.id+t.id}_getRenderCacheKey(e,t,s){const{material:n}=e;return[t.id,s.id,n.transparent,n.blending,n.premultipliedAlpha,n.blendSrc,n.blendDst,n.blendEquation,n.blendSrcAlpha,n.blendDstAlpha,n.blendEquationAlpha,n.colorWrite,n.depthWrite,n.depthTest,n.depthFunc,n.stencilWrite,n.stencilFunc,n.stencilFail,n.stencilZFail,n.stencilZPass,n.stencilFuncMask,n.stencilWriteMask,n.side,this.backend.getCacheKey(e)].join()}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){const t=this.get(e),s=e.material;let n=this.backend.needsUpdate(e);return t.material===s&&t.materialVersion===s.version&&t.transparent===s.transparent&&t.blending===s.blending&&t.premultipliedAlpha===s.premultipliedAlpha&&t.blendSrc===s.blendSrc&&t.blendDst===s.blendDst&&t.blendEquation===s.blendEquation&&t.blendSrcAlpha===s.blendSrcAlpha&&t.blendDstAlpha===s.blendDstAlpha&&t.blendEquationAlpha===s.blendEquationAlpha&&t.colorWrite===s.colorWrite&&t.depthWrite===s.depthWrite&&t.depthTest===s.depthTest&&t.depthFunc===s.depthFunc&&t.stencilWrite===s.stencilWrite&&t.stencilFunc===s.stencilFunc&&t.stencilFail===s.stencilFail&&t.stencilZFail===s.stencilZFail&&t.stencilZPass===s.stencilZPass&&t.stencilFuncMask===s.stencilFuncMask&&t.stencilWriteMask===s.stencilWriteMask&&t.side===s.side&&t.alphaToCoverage===s.alphaToCoverage||(t.material=s,t.materialVersion=s.version,t.transparent=s.transparent,t.blending=s.blending,t.premultipliedAlpha=s.premultipliedAlpha,t.blendSrc=s.blendSrc,t.blendDst=s.blendDst,t.blendEquation=s.blendEquation,t.blendSrcAlpha=s.blendSrcAlpha,t.blendDstAlpha=s.blendDstAlpha,t.blendEquationAlpha=s.blendEquationAlpha,t.colorWrite=s.colorWrite,t.depthWrite=s.depthWrite,t.depthTest=s.depthTest,t.depthFunc=s.depthFunc,t.stencilWrite=s.stencilWrite,t.stencilFunc=s.stencilFunc,t.stencilFail=s.stencilFail,t.stencilZFail=s.stencilZFail,t.stencilZPass=s.stencilZPass,t.stencilFuncMask=s.stencilFuncMask,t.stencilWriteMask=s.stencilWriteMask,t.side=s.side,t.alphaToCoverage=s.alphaToCoverage,n=!0),n||void 0===t.pipeline}}class Xs extends Bs{constructor(e,t,s,n,i,r){super(),this.backend=e,this.textures=s,this.pipelines=i,this.attributes=n,this.nodes=t,this.info=r,this.pipelines.bindings=this,this.updateMap=new WeakMap}getForRender(e){const t=e.getBindings(),s=this.get(e);return s.bindings!==t&&(s.bindings=t,this._init(t),this.backend.createBindings(t)),s.bindings}getForCompute(e){const t=this.get(e);if(void 0===t.bindings){const s=this.nodes.getForCompute(e).bindings;t.bindings=s,this._init(s),this.backend.createBindings(s)}return t.bindings}updateForCompute(e){this._update(e,this.getForCompute(e))}updateForRender(e){this._update(e,this.getForRender(e))}_init(e){for(const t of e)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute;this.attributes.update(e,Is)}}_update(e,t){const{backend:s}=this,n=this.updateMap,i=this.info.render.frame;let r=!1;for(const e of t){if(!(n.get(e)===i)){if(e.isUniformBuffer){e.update()&&s.updateBinding(e)}else if(e.isSampledTexture){e.needsBindingsUpdate&&(r=!0);e.update()&&this.textures.updateTexture(e.texture)}n.set(e,i)}}if(!0===r){const s=this.pipelines.getForRender(e);this.backend.updateBindings(t,s)}}dispose(){super.dispose(),this.updateMap=new WeakMap}}const Ys="vertex",Ks="none",Qs="frame",Zs="render",Js="object",en=["setup","analyze","generate"],tn=["fragment","vertex","compute"],sn=["x","y","z","w"];function nn(e){let t="{";!0===e.isNode&&(t+=`uuid:"${e.uuid}"`);for(const{property:s,index:n,childNode:i}of rn(e)){let e=nn(i);e.includes(",")||(e=e.slice(e.indexOf('"'),e.indexOf("}"))),t+=`,${s}${void 0!==n?"/"+n:""}:${e}`}return t+="}",t}function*rn(e,t=!1){for(const s in e){if(!0===s.startsWith("_"))continue;const n=e[s];if(!0===Array.isArray(n))for(let e=0;e<n.length;e++){const i=n[e];i&&(!0===i.isNode||t&&"function"==typeof i.toJSON)&&(yield{property:s,index:e,childNode:i})}else if(n&&!0===n.isNode)yield{property:s,childNode:n};else if("object"==typeof n)for(const e in n){const i=n[e];i&&(!0===i.isNode||t&&"function"==typeof i.toJSON)&&(yield{property:s,index:e,childNode:i})}}}function on(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function an(e,...t){const s=e?e.slice(-4):void 0;return"vec2"!==s&&"vec3"!==s&&"vec4"!==s||1!==t.length||(t="vec2"===s?[t[0],t[0]]:[t[0],t[0],t[0]]),"color"===e?new n(...t):"vec2"===s?new i(...t):"vec3"===s?new r(...t):"vec4"===s?new o(...t):"mat3"===s?new a(...t):"mat4"===s?new u(...t):"bool"===e?t[0]||!1:"float"===e||"int"===e||"uint"===e?t[0]||0:"string"===e?t[0]||"":"ArrayBuffer"===e?ln(t[0]):null}function un(e){let t="";const s=new Uint8Array(e);for(let e=0;e<s.length;e++)t+=String.fromCharCode(s[e]);return btoa(t)}function ln(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0))).buffer}const cn=new Map;let dn=0;class hn extends l{constructor(e=null){super(),this.nodeType=e,this.updateType=Ks,this.updateBeforeType=Ks,this.uuid=c.generateUUID(),this.isNode=!0,Object.defineProperty(this,"id",{value:dn++})}get type(){return this.constructor.type}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return!1}*getChildren(){for(const{childNode:e}of rn(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(){return nn(this)}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);for(const e of this.getChildren())t["_node"+e.id]=e;return null}construct(e){return this.setup(e)}analyze(e){const t=e.getDataFromNode(this);if(t.dependenciesCount=void 0===t.dependenciesCount?1:t.dependenciesCount+1,1===t.dependenciesCount){const t=e.getNodeProperties(this);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&!0===s.isNode)return s.build(e,t)}updateBefore(){}update(){}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);e.addNode(this),e.addChain(this);let n=null;const i=e.getBuildStage();if("setup"===i){const t=e.getNodeProperties(this);if(!0!==t.initialized||!1===e.context.tempRead){const s=e.stack.nodes.length;t.initialized=!0,t.outputNode=this.setup(e),null!==t.outputNode&&e.stack.nodes.length!==s&&(t.outputNode=e.stack);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}else if("analyze"===i)this.analyze(e);else if("generate"===i){if(1===this.generate.length){const s=this.getNodeType(e),i=e.getDataFromNode(this);n=i.snippet,void 0===n&&(n=this.generate(e)||"",i.snippet=n),n=e.format(n,s,t)}else n=this.generate(e,t)||""}return e.removeChain(this),n}getSerializeChildren(){return rn(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:n,index:i,childNode:r}of t)void 0!==i?(void 0===s[n]&&(s[n]=Number.isInteger(i)?[]:{}),s[n][i]=r.toJSON(e.meta).uuid):s[n]=r.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const n=[];for(const i of e.inputNodes[s])n.push(t[i]);this[s]=n}else if("object"==typeof e.inputNodes[s]){const n={};for(const i in e.inputNodes[s]){const r=e.inputNodes[s][i];n[i]=t[r]}this[s]=n}else{const n=e.inputNodes[s];this[s]=t[n]}}}toJSON(e){const{uuid:t,type:s}=this,n=void 0===e||"string"==typeof e;n&&(e={textures:{},images:{},nodes:{}});let i=e.nodes[t];function r(e){const t=[];for(const s in e){const n=e[s];delete n.metadata,t.push(n)}return t}if(void 0===i&&(i={uuid:t,type:s,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==n&&(e.nodes[i.uuid]=i),this.serialize(i),delete i.meta),n){const t=r(e.textures),s=r(e.images),n=r(e.nodes);t.length>0&&(i.textures=t),s.length>0&&(i.images=s),n.length>0&&(i.nodes=n)}return i}}function pn(e,t){if("function"!=typeof t||!e)throw new Error(`Node class ${e} is not a class`);if(cn.has(e))throw new Error(`Redefinition of node class ${e}`);cn.set(e,t),t.type=e}class mn extends hn{constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?on(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=on(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=un(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?an(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){}}pn("InputNode",mn);class gn extends hn{constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getNodeType(e)}generate(e){return`${this.node.build(e)}[ ${this.indexNode.build(e,"uint")} ]`}}pn("ArrayElementNode",gn);class fn extends hn{constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const n of this.convertTo.split("|"))null!==s&&e.getTypeLength(t)!==e.getTypeLength(n)||(s=n);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,n=this.getNodeType(e),i=s.build(e,n);return e.format(i,n,t)}}pn("ConvertNode",fn);class xn extends hn{constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).dependenciesCount>1}build(e,t){if("generate"===e.getBuildStage()){const s=e.getVectorType(this.getNodeType(e,t)),n=e.getDataFromNode(this);if(!1!==e.context.tempRead&&void 0!==n.propertyName)return e.format(n.propertyName,s,t);if(!1!==e.context.tempWrite&&"void"!==s&&"void"!==t&&this.hasDependencies(e)){const i=super.build(e,s),r=e.getVarFromNode(this,null,s),o=e.getPropertyName(r);return e.addLineFlowCode(`${o} = ${i}`),n.snippet=i,n.propertyName=o,e.format(n.propertyName,s,t)}}return super.build(e,t)}}pn("TempNode",xn);class bn extends xn{constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce(((t,s)=>t+e.getTypeLength(s.getNodeType(e))),0))}generate(e,t){const s=this.getNodeType(e),n=this.nodes,i=[];for(const t of n){const s=t.build(e);i.push(s)}const r=`${e.getType(s)}( ${i.join(", ")} )`;return e.format(r,s,t)}}pn("JoinNode",bn);const Tn=sn.join("");class _n extends hn{constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(sn.indexOf(t)+1,e);return e}getNodeType(e){return e.getTypeFromLength(this.components.length)}generate(e,t){const s=this.node,n=e.getTypeLength(s.getNodeType(e));let i=null;if(n>1){let r=null;this.getVectorLength()>=n&&(r=e.getTypeFromLength(this.getVectorLength()));const o=s.build(e,r);i=this.components.length===n&&this.components===Tn.slice(0,this.components.length)?e.format(o,r,t):e.format(`${o}.${this.components}`,this.getNodeType(e),t)}else i=s.build(e,t);return i}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}pn("SplitNode",_n);class yn extends xn{constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:n}=this,i=this.getNodeType(e),r=e.getTypeFromLength(s.length),o=n.build(e,r),a=t.build(e,i),u=e.getTypeLength(i),l=[];for(let e=0;e<u;e++){const t=sn[e];t===s[0]?(l.push(o),e+=s.length-1):l.push(a+"."+t)}return`${e.getType(i)}( ${l.join(", ")} )`}}pn("SetNode",yn);class Nn extends mn{constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.getConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return e.format(this.generateConst(e),s,t)}}pn("ConstNode",Nn);const vn=new Map;function Sn(e,t){if(vn.has(e))throw new Error(`Redefinition of node element ${e}`);if("function"!=typeof t)throw new Error(`Node element ${e} is not a function`);vn.set(e,t)}const An=e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Rn={setup(e,t){const s=t.shift();return e(Xn(s),...t)},get:function(e,t,s){if("string"==typeof t&&void 0===e[t]){if(vn.has(t)){const n=vn.get(t);return e.isStackNode?(...e)=>s.add(n(...e)):(...e)=>n(s,...e)}if("self"===t)return e;if(t.endsWith("Assign")&&vn.has(t.slice(0,t.length-6))){const n=vn.get(t.slice(0,t.length-6));return e.isStackNode?(...e)=>s.assign(e[0],n(...e)):(...e)=>s.assign(n(s,...e))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=An(t),jn(new _n(e,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=(t=An(t.slice(3).toLowerCase())).split("").sort().join(""),s=>jn(new yn(e,t,s));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),jn(new _n(e,t));if(!0===/^\d+$/.test(t))return jn(new gn(e,new Nn(Number(t),"uint")))}return e[t]}},Cn=new WeakMap,En=function(e,t=null){for(const s in e)e[s]=jn(e[s],t);return e},wn=function(e,t=null){const s=e.length;for(let n=0;n<s;n++)e[n]=jn(e[n],t);return e},Mn=function(e,t=null,s=null,n=null){const i=e=>jn(null!==n?Object.assign(e,n):e);return null===t?(...t)=>i(new e(...Yn(t))):null!==s?(s=jn(s),(...n)=>i(new e(t,...Yn(n),s))):(...s)=>i(new e(t,...Yn(s)))},On=function(e,...t){return jn(new e(...Yn(t)))};class Bn extends hn{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){const{outputNode:t}=e.getNodeProperties(this);return t?t.getNodeType(e):super.getNodeType(e)}call(e){const{shaderNode:t,inputNodes:s}=this,n=t.jsFunc,i=null!==s?n(Xn(s),e.stack,e):n(e.stack,e);return jn(i)}setup(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);return null===s?this.call(e).build(e,t):super.generate(e,t)}}class Un extends hn{constructor(e){super(),this.jsFunc=e}call(e=null){return jn(new Bn(this,e))}setup(){return this.call()}}const Fn=[!1,!0],In=[0,1,2,3],Ln=[-1,-2],Pn=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],Dn=new Map;for(const e of Fn)Dn.set(e,new Nn(e));const Gn=new Map;for(const e of In)Gn.set(e,new Nn(e,"uint"));const kn=new Map([...Gn].map((e=>new Nn(e.value,"int"))));for(const e of Ln)kn.set(e,new Nn(e,"int"));const zn=new Map([...kn].map((e=>new Nn(e.value))));for(const e of Pn)zn.set(e,new Nn(e));for(const e of Pn)zn.set(-e,new Nn(-e));const Vn={bool:Dn,uint:Gn,ints:kn,float:zn},$n=new Map([...Dn,...zn]),Hn=(e,t)=>$n.has(e)?$n.get(e):!0===e.isNode?e:new Nn(e,t),Wn=function(e,t=null){return(...s)=>{if((0===s.length||!["bool","float","int","uint"].includes(e)&&s.every((e=>"object"!=typeof e)))&&(s=[an(e,...s)]),1===s.length&&null!==t&&t.has(s[0]))return jn(t.get(s[0]));if(1===s.length){const t=Hn(s[0],e);return(e=>{try{return e.getNodeType()}catch(e){return}})(t)===e?jn(t):jn(new fn(t,e))}const n=s.map((e=>Hn(e)));return jn(new bn(n,e))}};function qn(e){return new Proxy(new Un(e),Rn)}const jn=(e,t=null)=>function(e,t=null){const s=on(e);if("node"===s){let t=Cn.get(e);return void 0===t&&(t=new Proxy(e,Rn),Cn.set(e,t),Cn.set(t,t)),t}return null===t&&("float"===s||"boolean"===s)||s&&"shader"!==s&&"string"!==s?jn(Hn(e,t)):"shader"===s?Zn(e):e}(e,t),Xn=(e,t=null)=>new En(e,t),Yn=(e,t=null)=>new wn(e,t),Kn=(...e)=>new Mn(...e),Qn=(...e)=>new On(...e),Zn=e=>{const t=new qn(e);return e=>t.call(e)};pn("ShaderNode",qn);const Jn=new Wn("color"),ei=new Wn("float",Vn.float),ti=new Wn("int",Vn.int),si=new Wn("uint",Vn.uint),ni=new Wn("bool",Vn.bool),ii=new Wn("vec2"),ri=new Wn("ivec2"),oi=new Wn("uvec2"),ai=new Wn("bvec2"),ui=new Wn("vec3"),li=new Wn("ivec3"),ci=new Wn("uvec3"),di=new Wn("bvec3"),hi=new Wn("vec4"),pi=new Wn("ivec4"),mi=new Wn("uvec4"),gi=new Wn("bvec4"),fi=new Wn("mat3"),xi=new Wn("imat3"),bi=new Wn("umat3"),Ti=new Wn("bmat3"),_i=new Wn("mat4"),yi=new Wn("imat4"),Ni=new Wn("umat4"),vi=new Wn("bmat4");Sn("color",Jn),Sn("float",ei),Sn("int",ti),Sn("uint",si),Sn("bool",ni),Sn("vec2",ii),Sn("ivec2",ri),Sn("uvec2",oi),Sn("bvec2",ai),Sn("vec3",ui),Sn("ivec3",li),Sn("uvec3",ci),Sn("bvec3",di),Sn("vec4",hi),Sn("ivec4",pi),Sn("uvec4",mi),Sn("bvec4",gi),Sn("mat3",fi),Sn("imat3",xi),Sn("umat3",bi),Sn("bmat3",Ti),Sn("mat4",_i),Sn("imat4",yi),Sn("umat4",Ni),Sn("bmat4",vi),Sn("string",((e="")=>jn(new Nn(e,"string")))),Sn("arrayBuffer",(e=>jn(new Nn(e,"ArrayBuffer"))));Sn("element",Kn(gn)),Sn("convert",((e,t)=>jn(new fn(jn(e),t))));class Si extends mn{constructor(e,t=null){super(e,t),this.isUniformNode=!0}getUniformHash(e){return this.getHash(e)}generate(e,t){const s=this.getNodeType(e),n=this.getUniformHash(e);let i=e.getNodeFromHash(n);void 0===i&&(e.setHashNode(this,n),i=this);const r=i.getInputType(e),o=e.getUniformFromNode(i,r,e.shaderStage,e.context.label),a=e.getPropertyName(o);return void 0!==e.context.label&&delete e.context.label,e.format(a,s,t)}}const Ai=(e,t)=>{const s=(e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null)(t||e),n=e&&!0===e.isNode?e.node&&e.node.value||e.value:e;return jn(new Si(n,s))};pn("UniformNode",Si);pn("ArrayUniformNode",class extends Si{constructor(e=[]){super(),this.isArrayUniformNode=!0,this.nodes=e}getNodeType(e){return this.nodes[0].getNodeType(e)}});class Ri extends hn{constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{name:t,node:s}=this,n=this.getNodeType(e),i=e.getVaryingFromNode(this,n);i.needsInterpolation||(i.needsInterpolation="fragment"===e.shaderStage),null!==t&&(i.name=t);const r=e.getPropertyName(i,Ys);return e.flowNodeFromShaderStage(Ys,s,n,r),e.getPropertyName(i)}}const Ci=Kn(Ri);Sn("varying",Ci),pn("VaryingNode",Ri);class Ei extends hn{constructor(e,t=null){super(t),this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=super.getNodeType(e);if(null===t){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const n=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(n)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const n=e.geometry.getAttribute(t),i=e.getTypeFromAttribute(n),r=e.getAttribute(t,i);if("vertex"===e.shaderStage)return e.format(r.name,i,s);return Ci(this).build(e,s)}return e.getConst(s)}}const wi=(e,t)=>jn(new Ei(e,t));pn("AttributeNode",Ei);class Mi extends hn{constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t),this.outputNode.build(e)}}const Oi=Kn(Mi);Sn("bypass",Oi),pn("BypassNode",Mi);let Bi=0;class Ui{constructor(){this.id=Bi++,this.nodesData=new WeakMap}getNodeData(e){return this.nodesData.get(e)}setNodeData(e,t){this.nodesData.set(e,t)}}class Fi extends hn{constructor(e,t=new Ui){super(),this.isCacheNode=!0,this.node=e,this.cache=t}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const s=e.getCache();e.setCache(this.cache);const n=this.node.build(e,...t);return e.setCache(s),n}}const Ii=Kn(Fi);Sn("cache",Ii),pn("CacheNode",Fi);class Li extends hn{constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.context=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.context});const s=this.node.build(e);return e.setContext(t),s}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.context});const n=this.node.build(e,t);return e.setContext(s),n}}const Pi=Kn(Li),Di=(e,t)=>Pi(e,{label:t});Sn("context",Pi),Sn("label",Di),pn("ContextNode",Li);class Gi extends hn{constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let n,i;if(s===Gi.VERTEX)n=e.getVertexIndex();else{if(s!==Gi.INSTANCE)throw new Error("THREE.IndexNode: Unknown scope: "+s);n=e.getInstanceIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)i=n;else{i=Ci(this).build(e,t)}return i}}Gi.VERTEX="vertex",Gi.INSTANCE="instance",Qn(Gi,Gi.VERTEX);const ki=Qn(Gi,Gi.INSTANCE);pn("IndexNode",Gi);class zi{start(){}finish(){}direct(){}indirectDiffuse(){}indirectSpecular(){}ambientOcclusion(){}}class Vi extends hn{constructor(e,t=null){super(),this.node=e,this.name=t}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:s}=this,n=e.getVarFromNode(this,s,e.getVectorType(this.getNodeType(e))),i=e.getPropertyName(n),r=t.build(e,n.type);return e.addLineFlowCode(`${i} = ${r}`),i}}const $i=Kn(Vi);Sn("temp",$i),pn("VarNode",Vi);class Hi{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class Wi{constructor(e,t,s,n=void 0){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s.getSelf(),this.needsUpdate=n}get value(){return this.node.value}set value(e){this.node.value=e}}class qi{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class ji extends qi{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class Xi{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}class Yi{constructor(){this.keywords=[],this.nodes=[],this.keywordsCallback={}}getNode(e){let t=this.nodes[e];return void 0===t&&void 0!==this.keywordsCallback[e]&&(t=this.keywordsCallback[e](e),this.nodes[e]=t),t}addKeyword(e,t){return this.keywords.push(e),this.keywordsCallback[e]=t,this}parse(e){const t=this.keywords,s=new RegExp(`\\b${t.join("\\b|\\b")}\\b`,"g"),n=e.match(s),i=[];if(null!==n)for(const e of n){const t=this.getNode(e);void 0!==t&&-1===i.indexOf(t)&&i.push(t)}return i}include(e,t){const s=this.parse(t);for(const t of s)t.build(e)}}class Ki extends hn{constructor(e,t=null){super(e),this.name=t,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){return e.getPropertyName(e.getVarFromNode(this,this.name))}}const Qi=(e,t)=>jn(new Ki(e,t)),Zi=Qn(Ki,"vec4","DiffuseColor"),Ji=Qn(Ki,"float","Roughness"),er=Qn(Ki,"float","Metalness"),tr=Qn(Ki,"float","Clearcoat"),sr=Qn(Ki,"float","ClearcoatRoughness"),nr=Qn(Ki,"vec3","Sheen"),ir=Qn(Ki,"float","SheenRoughness"),rr=Qn(Ki,"float","Iridescence"),or=Qn(Ki,"float","IridescenceIOR"),ar=Qn(Ki,"float","IridescenceThickness"),ur=Qn(Ki,"color","SpecularColor"),lr=Qn(Ki,"float","Shininess"),cr=Qn(Ki,"vec4","Output"),dr=Qn(Ki,"float","dashSize"),hr=Qn(Ki,"float","gapSize");pn("PropertyNode",Ki);class pr extends Ei{constructor(e=0){super(null,"vec2"),this.isUVNode=!0,this.index=e}getAttributeName(){const e=this.index;return"uv"+(e>0?e:"")}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const mr=(...e)=>jn(new pr(...e));pn("UVNode",pr);class gr extends hn{constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),n=this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${n} )`,this.getNodeType(e),t)}}const fr=Kn(gr);Sn("textureSize",fr),pn("TextureSizeNode",gr);class xr extends xn{constructor(e,t,s,...n){if(super(),this.op=e,n.length>0){let t=s;for(let s=0;s<n.length;s++)t=new xr(e,t,n[s]);s=t}this.aNode=t,this.bNode=s}hasDependencies(e){return"="!==this.op&&super.hasDependencies(e)}getNodeType(e,t){const s=this.op,n=this.aNode,i=this.bNode,r=n.getNodeType(e),o=i.getNodeType(e);if("void"===r||"void"===o)return"void";if("="===s||"%"===s)return r;if("&"===s||"|"===s||"^"===s||">>"===s||"<<"===s)return e.getIntegerType(r);if("=="===s||"&&"===s||"||"===s||"^^"===s)return"bool";if("<"===s||">"===s||"<="===s||">="===s){const s=t?e.getTypeLength(t):Math.max(e.getTypeLength(r),e.getTypeLength(o));return s>1?`bvec${s}`:"bool"}return"float"===r&&e.isMatrix(o)?o:e.isMatrix(r)&&e.isVector(o)?e.getVectorFromMatrix(r):e.isVector(r)&&e.isMatrix(o)?e.getVectorFromMatrix(o):e.getTypeLength(o)>e.getTypeLength(r)?o:r}generate(e,t){const s=this.op,n=this.aNode,i=this.bNode,r=this.getNodeType(e,t);let o=null,a=null;"void"!==r?(o=n.getNodeType(e),a=i.getNodeType(e),"="===s?a=o:"<"===s||">"===s||"<="===s||">="===s||"=="===s?e.isVector(o)?a=o:o=a="float":">>"===s||"<<"===s?(o=r,a=e.changeComponentType(a,"uint")):e.isMatrix(o)&&e.isVector(a)?a=e.getVectorFromMatrix(o):o=e.isVector(o)&&e.isMatrix(a)?e.getVectorFromMatrix(a):a=r):o=a=r;const u=n.build(e,o),l=i.build(e,a),c=e.getTypeLength(t);return"void"!==t?"="===s?(e.addLineFlowCode(`${u} ${this.op} ${l}`),u):"<"===s&&c>1?e.format(`${e.getMethod("lessThan")}( ${u}, ${l} )`,r,t):"<="===s&&c>1?e.format(`${e.getMethod("lessThanEqual")}( ${u}, ${l} )`,r,t):">"===s&&c>1?e.format(`${e.getMethod("greaterThan")}( ${u}, ${l} )`,r,t):">="===s&&c>1?e.format(`${e.getMethod("greaterThanEqual")}( ${u}, ${l} )`,r,t):e.format(`( ${u} ${this.op} ${l} )`,r,t):"void"!==o?e.format(`${u} ${this.op} ${l}`,r,t):void 0}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const br=Kn(xr,"+"),Tr=Kn(xr,"-"),_r=Kn(xr,"*"),yr=Kn(xr,"/"),Nr=Kn(xr,"%"),vr=Kn(xr,"=="),Sr=Kn(xr,"="),Ar=Kn(xr,"<"),Rr=Kn(xr,">"),Cr=Kn(xr,"<="),Er=Kn(xr,">="),wr=Kn(xr,"&&"),Mr=Kn(xr,"||"),Or=Kn(xr,"^^"),Br=Kn(xr,"&"),Ur=Kn(xr,"|"),Fr=Kn(xr,"^"),Ir=Kn(xr,"<<"),Lr=Kn(xr,">>");Sn("add",br),Sn("sub",Tr),Sn("mul",_r),Sn("div",yr),Sn("remainder",Nr),Sn("equal",vr),Sn("assign",Sr),Sn("lessThan",Ar),Sn("greaterThan",Rr),Sn("lessThanEqual",Cr),Sn("greaterThanEqual",Er),Sn("and",wr),Sn("or",Mr),Sn("xor",Or),Sn("bitAnd",Br),Sn("bitOr",Ur),Sn("bitXor",Fr),Sn("shiftLeft",Ir),Sn("shiftRight",Lr),pn("OperatorNode",xr);class Pr extends xn{constructor(e,t,s=null,n=null){super(),this.method=e,this.aNode=t,this.bNode=s,this.cNode=n}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,n=this.cNode?this.cNode.getNodeType(e):null,i=e.isMatrix(t)?0:e.getTypeLength(t),r=e.isMatrix(s)?0:e.getTypeLength(s),o=e.isMatrix(n)?0:e.getTypeLength(n);return i>r&&i>o?t:r>o?s:o>i?n:t}getNodeType(e){const t=this.method;return t===Pr.LENGTH||t===Pr.DISTANCE||t===Pr.DOT?"float":t===Pr.CROSS?"vec3":this.getInputType(e)}generate(e,t){const s=this.method,n=this.getNodeType(e),i=this.getInputType(e),r=this.aNode,o=this.bNode,a=this.cNode,u=!0===e.renderer.isWebGLRenderer;if(s===Pr.TRANSFORM_DIRECTION){let s=r,n=o;e.isMatrix(s.getNodeType(e))?n=hi(ui(n),0):s=hi(ui(s),0);const i=_r(s,n).xyz;return Yr(i).build(e,t)}if(s===Pr.NEGATE)return e.format("( - "+r.build(e,i)+" )",n,t);if(s===Pr.ONE_MINUS)return Tr(1,r).build(e,t);if(s===Pr.RECIPROCAL)return yr(1,r).build(e,t);if(s===Pr.DIFFERENCE)return no(Tr(r,o)).build(e,t);{const l=[];return s===Pr.CROSS?l.push(r.build(e,n),o.build(e,n)):s===Pr.STEP?l.push(r.build(e,1===e.getTypeLength(r.getNodeType(e))?"float":i),o.build(e,i)):u&&(s===Pr.MIN||s===Pr.MAX)||s===Pr.MOD?l.push(r.build(e,i),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":i)):s===Pr.REFRACT?l.push(r.build(e,i),o.build(e,i),a.build(e,"float")):s===Pr.MIX?l.push(r.build(e,i),o.build(e,i),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":i)):(l.push(r.build(e,i)),null!==o&&l.push(o.build(e,i)),null!==a&&l.push(a.build(e,i))),e.format(`${e.getMethod(s)}( ${l.join(", ")} )`,n,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Pr.RADIANS="radians",Pr.DEGREES="degrees",Pr.EXP="exp",Pr.EXP2="exp2",Pr.LOG="log",Pr.LOG2="log2",Pr.SQRT="sqrt",Pr.INVERSE_SQRT="inversesqrt",Pr.FLOOR="floor",Pr.CEIL="ceil",Pr.NORMALIZE="normalize",Pr.FRACT="fract",Pr.SIN="sin",Pr.COS="cos",Pr.TAN="tan",Pr.ASIN="asin",Pr.ACOS="acos",Pr.ATAN="atan",Pr.ABS="abs",Pr.SIGN="sign",Pr.LENGTH="length",Pr.NEGATE="negate",Pr.ONE_MINUS="oneMinus",Pr.DFDX="dFdx",Pr.DFDY="dFdy",Pr.ROUND="round",Pr.RECIPROCAL="reciprocal",Pr.TRUNC="trunc",Pr.FWIDTH="fwidth",Pr.ATAN2="atan2",Pr.MIN="min",Pr.MAX="max",Pr.MOD="mod",Pr.STEP="step",Pr.REFLECT="reflect",Pr.DISTANCE="distance",Pr.DIFFERENCE="difference",Pr.DOT="dot",Pr.CROSS="cross",Pr.POW="pow",Pr.TRANSFORM_DIRECTION="transformDirection",Pr.MIX="mix",Pr.CLAMP="clamp",Pr.REFRACT="refract",Pr.SMOOTHSTEP="smoothstep",Pr.FACEFORWARD="faceforward";const Dr=ei(1e-6);ei(1e6);const Gr=Kn(Pr,Pr.RADIANS),kr=Kn(Pr,Pr.DEGREES),zr=Kn(Pr,Pr.EXP),Vr=Kn(Pr,Pr.EXP2),$r=Kn(Pr,Pr.LOG),Hr=Kn(Pr,Pr.LOG2),Wr=Kn(Pr,Pr.SQRT),qr=Kn(Pr,Pr.INVERSE_SQRT),jr=Kn(Pr,Pr.FLOOR),Xr=Kn(Pr,Pr.CEIL),Yr=Kn(Pr,Pr.NORMALIZE),Kr=Kn(Pr,Pr.FRACT),Qr=Kn(Pr,Pr.SIN),Zr=Kn(Pr,Pr.COS),Jr=Kn(Pr,Pr.TAN),eo=Kn(Pr,Pr.ASIN),to=Kn(Pr,Pr.ACOS),so=Kn(Pr,Pr.ATAN),no=Kn(Pr,Pr.ABS),io=Kn(Pr,Pr.SIGN),ro=Kn(Pr,Pr.LENGTH),oo=Kn(Pr,Pr.NEGATE),ao=Kn(Pr,Pr.ONE_MINUS),uo=Kn(Pr,Pr.DFDX),lo=Kn(Pr,Pr.DFDY),co=Kn(Pr,Pr.ROUND),ho=Kn(Pr,Pr.RECIPROCAL),po=Kn(Pr,Pr.TRUNC),mo=Kn(Pr,Pr.FWIDTH),go=Kn(Pr,Pr.ATAN2),fo=Kn(Pr,Pr.MIN),xo=Kn(Pr,Pr.MAX),bo=Kn(Pr,Pr.MOD),To=Kn(Pr,Pr.STEP),_o=Kn(Pr,Pr.REFLECT),yo=Kn(Pr,Pr.DISTANCE),No=Kn(Pr,Pr.DIFFERENCE),vo=Kn(Pr,Pr.DOT),So=Kn(Pr,Pr.CROSS),Ao=Kn(Pr,Pr.POW),Ro=Kn(Pr,Pr.POW,2),Co=Kn(Pr,Pr.POW,3),Eo=Kn(Pr,Pr.POW,4),wo=Kn(Pr,Pr.TRANSFORM_DIRECTION),Mo=Kn(Pr,Pr.MIX),Oo=(e,t=0,s=1)=>jn(new Pr(Pr.CLAMP,jn(e),jn(t),jn(s))),Bo=Kn(Pr,Pr.REFRACT),Uo=Kn(Pr,Pr.SMOOTHSTEP),Fo=Kn(Pr,Pr.FACEFORWARD);Sn("radians",Gr),Sn("degrees",kr),Sn("exp",zr),Sn("exp2",Vr),Sn("log",$r),Sn("log2",Hr),Sn("sqrt",Wr),Sn("inverseSqrt",qr),Sn("floor",jr),Sn("ceil",Xr),Sn("normalize",Yr),Sn("fract",Kr),Sn("sin",Qr),Sn("cos",Zr),Sn("tan",Jr),Sn("asin",eo),Sn("acos",to),Sn("atan",so),Sn("abs",no),Sn("sign",io),Sn("length",ro),Sn("negate",oo),Sn("oneMinus",ao),Sn("dFdx",uo),Sn("dFdy",lo),Sn("round",co),Sn("reciprocal",ho),Sn("trunc",po),Sn("fwidth",mo),Sn("atan2",go),Sn("min",fo),Sn("max",xo),Sn("mod",bo),Sn("step",To),Sn("reflect",_o),Sn("distance",yo),Sn("dot",vo),Sn("cross",So),Sn("pow",Ao),Sn("pow2",Ro),Sn("pow3",Co),Sn("pow4",Eo),Sn("transformDirection",wo),Sn("mix",((e,t,s)=>Mo(t,s,e))),Sn("clamp",Oo),Sn("refract",Bo),Sn("smoothstep",((e,t,s)=>Uo(t,s,e))),Sn("faceForward",Fo),Sn("difference",No),Sn("saturate",(e=>Oo(e))),pn("MathNode",Pr);const Io=Zn((e=>{const{value:t}=e,{rgb:s}=t,n=s.mul(.9478672986).add(.0521327014).pow(2.4),i=s.mul(.0773993808),r=s.lessThanEqual(.04045),o=Mo(n,i,r);return hi(o,t.a)})),Lo=Zn((e=>{const{value:t}=e,{rgb:s}=t,n=s.pow(.41666).mul(1.055).sub(.055),i=s.mul(12.92),r=s.lessThanEqual(.0031308),o=Mo(n,i,r);return hi(o,t.a)})),Po=e=>{let t=null;return e===d?t="Linear":e===h&&(t="sRGB"),t},Do=(e,t)=>Po(e)+"To"+Po(t);class Go extends xn{constructor(e,t){super("vec4"),this.method=e,this.node=t}setup(){const{method:e,node:t}=this;return e===Go.LINEAR_TO_LINEAR?t:ko[e]({value:t})}}Go.LINEAR_TO_LINEAR="LinearToLinear",Go.LINEAR_TO_sRGB="LinearTosRGB",Go.sRGB_TO_LINEAR="sRGBToLinear";const ko={[Go.LINEAR_TO_sRGB]:Lo,[Go.sRGB_TO_LINEAR]:Io},zo=(e,t)=>jn(new Go(Do(t,d),jn(e))),Vo=Kn(Go,Go.LINEAR_TO_sRGB),$o=Kn(Go,Go.sRGB_TO_LINEAR);Sn("linearTosRGB",Vo),Sn("sRGBToLinear",$o),Sn("linearToColorSpace",((e,t)=>jn(new Go(Do(d,t),jn(e))))),Sn("colorSpaceToLinear",zo),pn("ColorSpaceNode",Go);class Ho extends hn{constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),n=this.snippet;if("void"!==s)return e.format(`( ${n} )`,s,t);e.addLineFlowCode(n)}}const Wo=Kn(Ho);pn("ExpressionNode",Ho);class qo extends Si{constructor(e,t=null,s=null,n=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.compareNode=n,this.updateMatrix=!1,this.updateType=Ks,this.setUpdateMatrix(null===t)}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":"vec4"}getInputType(){return"texture"}getDefaultUV(){return mr(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){const t=this.value;return Ai(t.matrix).mul(ui(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?Qs:Ks,this}setup(e){const t=e.getNodeProperties(this);let s=this.uvNode;null===s&&e.context.getUVNode&&(s=e.context.getUVNode(this)),s||(s=this.getDefaultUV()),!0===this.updateMatrix&&(s=this.getTransformedUV(s));let n=this.levelNode;null===n&&e.context.getSamplerLevelNode&&(n=e.context.getSamplerLevelNode(this)),t.uvNode=s,t.levelNode=n?e.context.getMIPLevelAlgorithmNode(this,n):null}generate(e,t){const{uvNode:s,levelNode:n}=e.getNodeProperties(this),i=this.compareNode,r=this.value;if(!r||!0!==r.isTexture)throw new Error("TextureNode: Need a three.js texture.");const o=super.generate(e,"property");if("sampler"===t)return o+"_sampler";if(e.isReference(t))return o;{const a=e.getDataFromNode(this);let u=a.propertyName;if(void 0===u){const t=s.build(e,"vec2"),l=e.getVarFromNode(this);u=e.getPropertyName(l);let c=null;if(n&&!0===n.isNode){const s=n.build(e,"float");c=e.getTextureLevel(r,o,t,s)}else if(null!==i){const s=i.build(e,"float");c=e.getTextureCompare(r,o,t,s)}else c=e.getTexture(r,o,t);e.addLineFlowCode(`${u} = ${c}`),!1!==e.context.tempWrite&&(a.snippet=c,a.propertyName=u)}let l=u;const c=this.getNodeType(e);return e.needsColorSpaceToLinear(this.value)&&(l=zo(Wo(l,c),this.value.colorSpace).setup(e).build(e,c)),e.format(l,c,t)}}uv(e){const t=this.clone();return t.uvNode=e,jn(t)}level(e){const t=this.clone();return t.levelNode=e,Pi(t,{getMIPLevelAlgorithmNode:(e,t)=>t})}size(e){return fr(this,e)}compare(e){const t=this.clone();return t.compareNode=jn(e),jn(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value]}update(){const e=this.value;!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){return new this.constructor(this.value,this.uvNode,this.levelNode,this.compareNode)}}const jo=Kn(qo);Sn("texture",jo),pn("TextureNode",qo);class Xo extends hn{constructor(e,t,s=null){super(),this.property=e,this.uniformType=t,this.object=s,this.reference=null,this.node=null,this.updateType=Js,this.setNodeType(t)}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setNodeType(e){let t=null;t="texture"===e?jo(null):Ai(e),this.node=t}getNodeType(e){return this.node.getNodeType(e)}update(){this.node.value=this.reference[this.property]}setup(){return this.node}}const Yo=(e,t,s)=>jn(new Xo(e,t,s));pn("ReferenceNode",Xo);class Ko extends Xo{constructor(e,t,s=null){super(e,t,s),this.material=s,this.updateType=Zs}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}setup(e){const t=null!==this.material?this.material:e.material;return this.node.value=t[this.property],super.setup(e)}}const Qo=(e,t,s)=>jn(new Ko(e,t,s));pn("MaterialReferenceNode",Ko);const Zo=new Map;class Jo extends hn{constructor(e){super(),this.scope=e}getCache(e,t){let s=Zo.get(e);return void 0===s&&(s=Qo(e,t),Zo.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e,"texture")}setup(e){const t=e.context.material,s=this.scope;let n=null;if(s===Jo.ALPHA_TEST||s===Jo.SHININESS||s===Jo.REFLECTIVITY||s===Jo.ROTATION||s===Jo.IRIDESCENCE||s===Jo.IRIDESCENCE_IOR)n=this.getFloat(s);else if(s===Jo.SPECULAR_COLOR)n=this.getColor("specular");else if(s===Jo.COLOR){const e=this.getColor("color");n=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(s===Jo.OPACITY){const e=this.getFloat("opacity");n=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alphaMap")):e}else if(s===Jo.SPECULAR_STRENGTH)n=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture("specularMap").r:ei(1);else if(s===Jo.ROUGHNESS){const e=this.getFloat("roughness");n=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture("roughnessMap").g):e}else if(s===Jo.METALNESS){const e=this.getFloat("metalness");n=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture("metalnessMap").b):e}else if(s===Jo.EMISSIVE){const e=this.getColor("emissive");n=t.emissiveMap&&!0===t.emissiveMap.isTexture?e.mul(this.getTexture("emissiveMap")):e}else if(s===Jo.CLEARCOAT){const e=this.getFloat("clearcoat");n=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture("clearcoatMap").r):e}else if(s===Jo.CLEARCOAT_ROUGHNESS){const e=this.getFloat("clearcoatRoughness");n=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture("clearcoatRoughnessMap").r):e}else if(s===Jo.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));n=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColorMap").rgb):e}else if(s===Jo.SHEEN_ROUGHNESS){const e=this.getFloat("sheenRoughness");n=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture("sheenRoughnessMap").a):e,n=n.clamp(.07,1)}else if(s===Jo.IRIDESCENCE_THICKNESS){const e=Yo(1,"float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const s=Yo(0,"float",t.iridescenceThicknessRange);n=e.sub(s).mul(this.getTexture("iridescenceThicknessMap").g).add(s)}else n=e}else{const t=this.getNodeType(e);n=Qo(s,t)}return n}}Jo.ALPHA_TEST="alphaTest",Jo.COLOR="color",Jo.OPACITY="opacity",Jo.SHININESS="shininess",Jo.SPECULAR="specular",Jo.SPECULAR_STRENGTH="specularStrength",Jo.REFLECTIVITY="reflectivity",Jo.ROUGHNESS="roughness",Jo.METALNESS="metalness",Jo.CLEARCOAT="clearcoat",Jo.CLEARCOAT_ROUGHNESS="clearcoatRoughness",Jo.EMISSIVE="emissive",Jo.ROTATION="rotation",Jo.SHEEN="sheen",Jo.SHEEN_ROUGHNESS="sheenRoughness",Jo.IRIDESCENCE="iridescence",Jo.IRIDESCENCE_IOR="iridescenceIOR",Jo.IRIDESCENCE_THICKNESS="iridescenceThickness";const ea=Qn(Jo,Jo.ALPHA_TEST),ta=Qn(Jo,Jo.COLOR),sa=Qn(Jo,Jo.SHININESS),na=Qn(Jo,Jo.EMISSIVE),ia=Qn(Jo,Jo.OPACITY),ra=Qn(Jo,Jo.SPECULAR_COLOR),oa=Qn(Jo,Jo.SPECULAR_STRENGTH);Qn(Jo,Jo.REFLECTIVITY);const aa=Qn(Jo,Jo.ROUGHNESS),ua=Qn(Jo,Jo.METALNESS),la=Qn(Jo,Jo.CLEARCOAT),ca=Qn(Jo,Jo.CLEARCOAT_ROUGHNESS),da=Qn(Jo,Jo.ROTATION),ha=Qn(Jo,Jo.SHEEN),pa=Qn(Jo,Jo.SHEEN_ROUGHNESS),ma=Qn(Jo,Jo.IRIDESCENCE),ga=Qn(Jo,Jo.IRIDESCENCE_IOR),fa=Qn(Jo,Jo.IRIDESCENCE_THICKNESS);pn("MaterialNode",Jo);class xa extends hn{constructor(e=xa.VIEW_MATRIX,t=null){super(),this.scope=e,this.object3d=t,this.updateType=Js,this._uniformNode=new Si(null)}getNodeType(){const e=this.scope;return e===xa.WORLD_MATRIX||e===xa.VIEW_MATRIX?"mat4":e===xa.NORMAL_MATRIX?"mat3":e===xa.POSITION||e===xa.VIEW_POSITION||e===xa.DIRECTION||e===xa.SCALE?"vec3":void 0}update(e){const t=this.object3d,s=this._uniformNode,n=this.scope;if(n===xa.VIEW_MATRIX)s.value=t.modelViewMatrix;else if(n===xa.NORMAL_MATRIX)s.value=t.normalMatrix;else if(n===xa.WORLD_MATRIX)s.value=t.matrixWorld;else if(n===xa.POSITION)s.value=s.value||new r,s.value.setFromMatrixPosition(t.matrixWorld);else if(n===xa.SCALE)s.value=s.value||new r,s.value.setFromMatrixScale(t.matrixWorld);else if(n===xa.DIRECTION)s.value=s.value||new r,t.getWorldDirection(s.value);else if(n===xa.VIEW_POSITION){const n=e.camera;s.value=s.value||new r,s.value.setFromMatrixPosition(t.matrixWorld),s.value.applyMatrix4(n.matrixWorldInverse)}}generate(e){const t=this.scope;return t===xa.WORLD_MATRIX||t===xa.VIEW_MATRIX?this._uniformNode.nodeType="mat4":t===xa.NORMAL_MATRIX?this._uniformNode.nodeType="mat3":t!==xa.POSITION&&t!==xa.VIEW_POSITION&&t!==xa.DIRECTION&&t!==xa.SCALE||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}xa.VIEW_MATRIX="viewMatrix",xa.NORMAL_MATRIX="normalMatrix",xa.WORLD_MATRIX="worldMatrix",xa.POSITION="position",xa.SCALE="scale",xa.VIEW_POSITION="viewPosition",xa.DIRECTION="direction",Kn(xa,xa.DIRECTION),Kn(xa,xa.VIEW_MATRIX),Kn(xa,xa.NORMAL_MATRIX),Kn(xa,xa.WORLD_MATRIX);const ba=Kn(xa,xa.POSITION);Kn(xa,xa.SCALE);const Ta=Kn(xa,xa.VIEW_POSITION);pn("Object3DNode",xa);class _a extends xa{constructor(e=_a.POSITION){super(e)}getNodeType(e){const t=this.scope;return t===_a.PROJECTION_MATRIX?"mat4":t===_a.NEAR||t===_a.FAR?"float":super.getNodeType(e)}update(e){const t=e.camera,s=this._uniformNode,n=this.scope;n===_a.VIEW_MATRIX?s.value=t.matrixWorldInverse:n===_a.PROJECTION_MATRIX?s.value=t.projectionMatrix:n===_a.NEAR?s.value=t.near:n===_a.FAR?s.value=t.far:(this.object3d=t,super.update(e))}generate(e){const t=this.scope;return t===_a.PROJECTION_MATRIX?this._uniformNode.nodeType="mat4":t!==_a.NEAR&&t!==_a.FAR||(this._uniformNode.nodeType="float"),super.generate(e)}}_a.PROJECTION_MATRIX="projectionMatrix",_a.NEAR="near",_a.FAR="far";const ya=Di(Qn(_a,_a.PROJECTION_MATRIX),"projectionMatrix"),Na=Qn(_a,_a.NEAR),va=Qn(_a,_a.FAR),Sa=Qn(_a,_a.VIEW_MATRIX);Qn(_a,_a.NORMAL_MATRIX),Qn(_a,_a.WORLD_MATRIX),Qn(_a,_a.POSITION),pn("CameraNode",_a);class Aa extends xa{constructor(e=Aa.VIEW_MATRIX){super(e)}update(e){this.object3d=e.object,super.update(e)}}Qn(Aa,Aa.DIRECTION);const Ra=Qn(Aa,Aa.VIEW_MATRIX).temp("ModelViewMatrix"),Ca=Qn(Aa,Aa.NORMAL_MATRIX),Ea=Qn(Aa,Aa.WORLD_MATRIX);Qn(Aa,Aa.POSITION),Qn(Aa,Aa.SCALE),Qn(Aa,Aa.VIEW_POSITION),pn("ModelNode",Aa);class wa extends hn{constructor(e=wa.LOCAL){super("vec3"),this.scope=e}isGlobal(){return!0}getHash(){return`normal-${this.scope}`}generate(e){const t=this.scope;let s=null;if(t===wa.GEOMETRY)s=wi("normal","vec3");else if(t===wa.LOCAL)s=Ci(Ma);else if(t===wa.VIEW){const e=Ca.mul(Oa);s=Yr(Ci(e))}else if(t===wa.WORLD){const e=Ba.transformDirection(Sa);s=Yr(Ci(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}wa.GEOMETRY="geometry",wa.LOCAL="local",wa.VIEW="view",wa.WORLD="world";const Ma=Qn(wa,wa.GEOMETRY),Oa=Qn(wa,wa.LOCAL).temp("Normal"),Ba=Qn(wa,wa.VIEW),Ua=Qn(wa,wa.WORLD),Fa=Qi("vec3","TransformedNormalView"),Ia=Fa.transformDirection(Sa).normalize(),La=Qi("vec3","TransformedClearcoatNormalView");pn("NormalNode",wa);class Pa extends hn{constructor(e=Pa.LOCAL){super(),this.scope=e}getHash(){return`tangent-${this.scope}`}getNodeType(){return this.scope===Pa.GEOMETRY?"vec4":"vec3"}generate(e){const t=this.scope;let s=null;if(t===Pa.GEOMETRY)s=wi("tangent","vec4");else if(t===Pa.LOCAL)s=Ci(Da.xyz);else if(t===Pa.VIEW){const e=Ra.mul(Ga).xyz;s=Yr(Ci(e))}else if(t===Pa.WORLD){const e=ka.transformDirection(Sa);s=Yr(Ci(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Pa.GEOMETRY="geometry",Pa.LOCAL="local",Pa.VIEW="view",Pa.WORLD="world";const Da=Qn(Pa,Pa.GEOMETRY),Ga=Qn(Pa,Pa.LOCAL),ka=Qn(Pa,Pa.VIEW),za=Qn(Pa,Pa.WORLD),Va=$i(ka,"TransformedTangentView");Yr(Va.transformDirection(Sa)),pn("TangentNode",Pa);class $a extends hn{constructor(e=$a.LOCAL){super("vec3"),this.scope=e}getHash(){return`bitangent-${this.scope}`}generate(e){const t=this.scope;let s;t===$a.GEOMETRY?s=Ma.cross(Da):t===$a.LOCAL?s=Oa.cross(Ga):t===$a.VIEW?s=Ba.cross(ka):t===$a.WORLD&&(s=Ua.cross(za));const n=s.mul(Da.w).xyz;return Yr(Ci(n)).build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}$a.GEOMETRY="geometry",$a.LOCAL="local",$a.VIEW="view",$a.WORLD="world",Qn($a,$a.GEOMETRY),Qn($a,$a.LOCAL);const Ha=Qn($a,$a.VIEW);Qn($a,$a.WORLD);const Wa=Yr(Fa.cross(Va).mul(Da.w));Yr(Wa.transformDirection(Sa)),pn("BitangentNode",$a);class qa extends hn{constructor(e=qa.LOCAL){super("vec3"),this.scope=e}isGlobal(){return!0}getHash(){return`position-${this.scope}`}generate(e){const t=this.scope;let s=null;if(t===qa.GEOMETRY)s=wi("position","vec3");else if(t===qa.LOCAL)s=Ci(ja);else if(t===qa.WORLD){const e=Ea.mul(Xa);s=Ci(e)}else if(t===qa.VIEW){const e=Ra.mul(Xa);s=Ci(e)}else if(t===qa.VIEW_DIRECTION){const e=Qa.negate();s=Yr(Ci(e))}else if(t===qa.WORLD_DIRECTION){const e=Xa.transformDirection(Ea);s=Yr(Ci(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}qa.GEOMETRY="geometry",qa.LOCAL="local",qa.WORLD="world",qa.WORLD_DIRECTION="worldDirection",qa.VIEW="view",qa.VIEW_DIRECTION="viewDirection";const ja=Qn(qa,qa.GEOMETRY),Xa=Qn(qa,qa.LOCAL).temp("Position"),Ya=Qn(qa,qa.WORLD),Ka=Qn(qa,qa.WORLD_DIRECTION),Qa=Qn(qa,qa.VIEW),Za=Qn(qa,qa.VIEW_DIRECTION);pn("PositionNode",qa);class Ja extends hn{constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){return e.getFrontFacing()}}const eu=Qn(Ja),tu=ei(eu).mul(2).sub(1);pn("FrontFacingNode",Ja);const su=Zn((e=>{const{eye_pos:t,surf_norm:s,mapN:n,uv:i}=e,r=t.dFdx(),o=t.dFdy(),a=i.dFdx(),u=i.dFdy(),l=s,c=o.cross(l),d=l.cross(r),h=c.mul(a.x).add(d.mul(u.x)),p=c.mul(a.y).add(d.mul(u.y)),m=h.dot(h).max(p.dot(p)),g=tu.mul(m.inverseSqrt());return br(h.mul(n.x,g),p.mul(n.y,g),l.mul(n.z)).normalize()}));class nu extends xn{constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=p}setup(e){const{normalMapType:t,scaleNode:s}=this;let n=this.node.mul(2).sub(1);null!==s&&(n=ui(n.xy.mul(s),n.z));let i=null;if(t===m)i=Ca.mul(n).normalize();else if(t===p){i=!0===e.hasGeometryAttribute("tangent")?ru.mul(n).normalize():su({eye_pos:Qa,surf_norm:Ba,mapN:n,uv:mr()})}return i}}const iu=Kn(nu),ru=fi(ka,Ha,Ba);pn("NormalMapNode",nu);const ou=Zn((({textureNode:e,bumpScale:t})=>{let s=e;if(!0!==s.isTextureNode&&s.traverse((e=>{!0===e.isTextureNode&&(s=e)})),!0!==s.isTextureNode)throw new Error("THREE.TSL: dHdxy_fwd() requires a TextureNode.");const n=ei(e),i=s.uvNode||mr(),r=t=>e.cache().context({getUVNode:()=>t});return ii(ei(r(i.add(i.dFdx()))).sub(n),ei(r(i.add(i.dFdy()))).sub(n)).mul(t)})),au=Zn((e=>{const{surf_pos:t,surf_norm:s,dHdxy:n}=e,i=t.dFdx(),r=s,o=t.dFdy().cross(r),a=r.cross(i),u=i.dot(o).mul(tu),l=u.sign().mul(n.x.mul(o).add(n.y.mul(a)));return u.abs().mul(s).sub(l).normalize()}));class uu extends xn{constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=ou({textureNode:this.textureNode,bumpScale:e});return au({surf_pos:Qa,surf_norm:Ba,dHdxy:t})}}const lu=Kn(uu);pn("BumpMapNode",uu);class cu extends Jo{constructor(e){super(e)}getNodeType(e){const t=this.scope;let s=null;return t!==cu.NORMAL&&t!==cu.CLEARCOAT_NORMAL||(s="vec3"),s||super.getNodeType(e)}setup(e){const t=e.material,s=this.scope;let n=null;return s===cu.NORMAL?n=t.normalMap?iu(this.getTexture("normalMap"),Qo("normalScale","vec2")):t.bumpMap?lu(this.getTexture("bumpMap").r,Qo("bumpScale","float")):Ba:s===cu.CLEARCOAT_NORMAL&&(n=t.clearcoatNormalMap?iu(this.getTexture("clearcoatNormalMap"),Qo("clearcoatNormalScale","vec2")):Ba),n||super.setup(e)}}cu.NORMAL="normal",cu.CLEARCOAT_NORMAL="clearcoatNormal";const du=Qn(cu,cu.NORMAL),hu=Qn(cu,cu.CLEARCOAT_NORMAL);pn("ExtendedMaterialNode",cu);class pu extends xn{constructor(e=Xa){super("vec4"),this.positionNode=e}setup(){return ya.mul(Ra).mul(this.positionNode)}}const mu=Kn(pu);pn("ModelViewProjectionNode",pu);class gu extends mn{constructor(e,t=null,s=0,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=n,this.usage=g,this.instanced=!1,this.attribute=null,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),s=this.value,n=e.getTypeLength(t),i=this.bufferStride||n,r=this.bufferOffset,o=!0===s.isInterleavedBuffer?s:new f(s,i),a=new x(o,n,r);o.setUsage(this.usage),this.attribute=a,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),n=e.getPropertyName(s);let i=null;if("vertex"===e.shaderStage)i=n;else{i=Ci(this).build(e,t)}return i}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this}setInstanced(e){return this.instanced=e,this}}const fu=(e,t,s,n)=>jn(new gu(e,t,s,n)),xu=(e,t,s,n)=>fu(e,t,s,n).setInstanced(!0),bu=(t,s,n,i)=>((t,s,n,i)=>fu(t,s,n,i).setUsage(e))(t,s,n,i).setInstanced(!0);Sn("toAttribute",(e=>fu(e.value))),pn("BufferAttributeNode",gu);class Tu extends hn{constructor(e){super("void"),this.instanceMesh=e,this.instanceMatrixNode=null}setup(t){let s=this.instanceMatrixNode;if(null===s){const t=this.instanceMesh.instanceMatrix,n=new b(t.array,16,1),i=t.usage===e?bu:xu,r=[i(n,"vec4",16,0),i(n,"vec4",16,4),i(n,"vec4",16,8),i(n,"vec4",16,12)];s=_i(...r),this.instanceMatrixNode=s}const n=s.mul(Xa).xyz,i=fi(s[0].xyz,s[1].xyz,s[2].xyz),r=Oa.div(ui(i[0].dot(i[0]),i[1].dot(i[1]),i[2].dot(i[2]))),o=i.mul(r).xyz;t.stack.assign(Xa,n),t.stack.assign(Oa,o)}}const _u=Kn(Tu);pn("InstanceNode",Tu);class yu extends Si{constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getInputType(){return"buffer"}}const Nu=(e,t,s)=>jn(new yu(e,t,s));pn("BufferNode",yu);class vu extends hn{constructor(e){super("void"),this.skinnedMesh=e,this.updateType=Js,this.skinIndexNode=wi("skinIndex","uvec4"),this.skinWeightNode=wi("skinWeight","vec4"),this.bindMatrixNode=Ai(e.bindMatrix,"mat4"),this.bindMatrixInverseNode=Ai(e.bindMatrixInverse,"mat4"),this.boneMatricesNode=Nu(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)}setup(e){const{skinIndexNode:t,skinWeightNode:s,bindMatrixNode:n,bindMatrixInverseNode:i,boneMatricesNode:r}=this,o=r.element(t.x),a=r.element(t.y),u=r.element(t.z),l=r.element(t.w),c=n.mul(Xa),d=br(o.mul(s.x).mul(c),a.mul(s.y).mul(c),u.mul(s.z).mul(c),l.mul(s.w).mul(c)),h=i.mul(d).xyz;let p=br(s.x.mul(o),s.y.mul(a),s.z.mul(u),s.w.mul(l));p=i.mul(p).mul(n);const m=p.transformDirection(Oa).xyz;e.stack.assign(Xa,h),e.stack.assign(Oa,m),e.hasGeometryAttribute("tangent")&&e.stack.assign(Ga,m)}update(){this.skinnedMesh.skeleton.update()}}const Su=Kn(vu);pn("SkinningNode",vu);class Au extends hn{constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=Ai(1),this.updateType=Js}setupAttribute(e,t,s=Xa){const n=this.mesh,i=n.geometry.morphAttributes[t];e.stack.assign(s,s.mul(this.morphBaseInfluence));for(let t=0;t<i.length;t++){const r=i[t],o=fu(r.array,"vec3"),a=Yo(t,"float",n.morphTargetInfluences);e.stack.assign(s,s.add(o.mul(a)))}}setup(e){this.setupAttribute(e,"position")}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce(((e,t)=>e+t),0)}}const Ru=Kn(Au);pn("MorphNode",Au);class Cu extends hn{constructor(){super("vec3")}getHash(){return"reflectVector"}setup(){return Za.negate().reflect(Fa).transformDirection(Sa)}}const Eu=Qn(Cu);pn("ReflectVectorNode",Cu);class wu extends qo{constructor(e,t=null,s=null){super(e,t,s),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){return Eu}setUpdateMatrix(){}generate(e,t){const{uvNode:s,levelNode:n}=e.getNodeProperties(this),i=this.value;if(!i||!0!==i.isCubeTexture)throw new Error("CubeTextureNode: Need a three.js cube texture.");const r=Si.prototype.generate.call(this,e,"cubeTexture");if("sampler"===t)return r+"_sampler";if(e.isReference(t))return r;{const i=e.getDataFromNode(this);let o=i.propertyName;if(void 0===o){const t=ui(s.x.negate(),s.yz).build(e,"vec3"),a=e.getVarFromNode(this);o=e.getPropertyName(a);let u=null;if(n&&!0===n.isNode){const s=n.build(e,"float");u=e.getTextureLevel(this,r,t,s)}else u=e.getTexture(this,r,t);e.addLineFlowCode(`${o} = ${u}`),!1!==e.context.tempWrite&&(i.snippet=u,i.propertyName=o)}let a=o;const u=this.getNodeType(e);return e.needsColorSpaceToLinear(this.value)&&(a=zo(Wo(a,u),this.value.colorSpace).setup(e).build(e,u)),e.format(a,u,t)}}}const Mu=Kn(wu);Sn("cubeTexture",Mu),pn("CubeTextureNode",wu);class Ou extends hn{constructor(){super("vec3")}generate(){}}pn("LightingNode",Ou);let Bu=null;class Uu extends Ou{constructor(e=null){super(),this.updateType=Qs,this.light=e,this.rtt=null,this.shadowNode=null,this.color=new n,this.colorNode=Ai(this.color)}getHash(){return this.light.uuid}setupShadow(e){let t=this.shadowNode;if(null===t){null===Bu&&(Bu=e.createNodeMaterial("MeshBasicNodeMaterial"));const s=this.light.shadow,n=e.getRenderTarget(s.mapSize.width,s.mapSize.height),i=new T;i.minFilter=_,i.magFilter=_,i.image.width=s.mapSize.width,i.image.height=s.mapSize.height,i.compareFunction=y,n.depthTexture=i,s.camera.updateProjectionMatrix();const r=Yo("bias","float",s),o=Yo("normalBias","float",s);let a=Ai(s.matrix).mul(Ya.add(Ua.mul(o)));a=a.xyz.div(a.w);const u=a.x.greaterThanEqual(0).and(a.x.lessThanEqual(1)).and(a.y.greaterThanEqual(0)).and(a.y.lessThanEqual(1)).and(a.z.lessThanEqual(1));a=ui(a.x,a.y.oneMinus(),a.z.add(r).mul(2).sub(1));const l=(e,t,s)=>jo(e,t).compare(s);t=l(i,a.xy,a.z),this.rtt=n,this.colorNode=this.colorNode.mul(u.mix(1,t)),this.shadowNode=t,this.updateBeforeType=Zs}}setup(e){this.light.castShadow&&this.setupShadow(e)}updateShadow(e){const{rtt:t,light:s}=this,{renderer:n,scene:i}=e;i.overrideMaterial=Bu,t.setSize(s.shadow.mapSize.width,s.shadow.mapSize.height),s.shadow.updateMatrices(s),n.setRenderTarget(t),n.render(i,s.shadow.camera),n.setRenderTarget(null),i.overrideMaterial=null}updateBefore(e){const{light:t}=this;t.castShadow&&this.updateShadow(e)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}pn("AnalyticLightNode",Uu);const Fu=new WeakMap;class Iu extends hn{constructor(e=[]){super("vec3"),this.totalDiffuseNode=ui().temp("totalDiffuse"),this.totalSpecularNode=ui().temp("totalSpecular"),this.outgoingLightNode=ui().temp("outgoingLight"),this.lightNodes=e,this._hash=null}get hasLight(){return this.lightNodes.length>0}setup(e){const t=e.context,s=t.lightingModel;let n=this.outgoingLightNode;if(s){const{lightNodes:i,totalDiffuseNode:r,totalSpecularNode:o}=this;t.outgoingLight=n;const a=e.addStack();s.start(t,a,e);for(const t of i)t.build(e);s.indirectDiffuse(t,a,e),s.indirectSpecular(t,a,e),s.ambientOcclusion(t,a,e);const{backdrop:u,backdropAlpha:l}=t,{directDiffuse:c,directSpecular:d,indirectDiffuse:h,indirectSpecular:p}=t.reflectedLight;let m=c.add(h);null!==u&&(m=ui(null!==l?l.mix(m,u):u)),a.assign(r,m),a.assign(o,d.add(p)),a.assign(n,r.add(o)),s.finish(t,a,e),n=n.bypass(e.removeStack())}return n}getHash(e){if(null===this._hash){let t="";const s=this.lightNodes;for(const n of s)t+=n.getHash(e)+" ";this._hash=t}return this._hash}getLightNodeByHash(e){const t=this.lightNodes;for(const s of t)if(s.light.uuid===e)return s;return null}fromLights(e=[]){const t=[];e=(e=>e.sort(((e,t)=>e.id-t.id)))(e);for(const s of e){let e=this.getLightNodeByHash(s.uuid);if(null===e){const t=s.constructor,n=Fu.has(t)?Fu.get(t):Uu;e=jn(new n(s))}t.push(e)}return this.lightNodes=t,this._hash=null,this}}const Lu=Kn(Iu);function Pu(e,t){if(Fu.has(e))throw new Error(`Redefinition of light node ${t.type}`);if("function"!=typeof e)throw new Error(`Light ${e.name} is not a class`);if("function"!=typeof t||!t.type)throw new Error(`Light node ${t.type} is not a class`);Fu.set(e,t)}class Du extends Ou{constructor(e=null){super(),this.aoNode=e}setup(e){const t=this.aoNode.x.sub(1).mul(1).add(1);e.stack.mulAssign(e.context.ambientOcclusion,t)}}pn("AONode",Du);class Gu extends Li{constructor(e,t=null,s=null,n=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=n,this._context=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s={directDiffuse:ui().temp("directDiffuse"),directSpecular:ui().temp("directSpecular"),indirectDiffuse:ui().temp("indirectDiffuse"),indirectSpecular:ui().temp("indirectSpecular")};return{radiance:ui().temp("radiance"),irradiance:ui().temp("irradiance"),iblIrradiance:ui().temp("iblIrradiance"),ambientOcclusion:ei(1).temp("ambientOcclusion"),reflectedLight:s,backdrop:e,backdropAlpha:t}}setup(e){return this.context=this._context||(this._context=this.getContext()),this.context.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const ku=Kn(Gu);Sn("lightingContext",ku),pn("LightingContextNode",Gu);class zu extends xn{constructor(e=Ka){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(2*Math.PI)).add(.5),s=e.y.negate().clamp(-1,1).asin().mul(1/Math.PI).add(.5);return ii(t,s)}}const Vu=Kn(zu);pn("EquirectUVNode",zu);class $u extends Si{constructor(e){super(0),this.textureNode=e,this.updateType=Qs}get texture(){return this.textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&void 0!==s.width){const{width:e,height:t}=s;this.value=Math.log2(Math.max(e,t))}}}const Hu=Kn($u);pn("MaxMipLevelNode",$u);class Wu extends hn{constructor(e,t=null){super("float"),this.textureNode=e,this.roughnessNode=t}setup(){const{textureNode:e,roughnessNode:t}=this,s=Hu(e),n=t.mul(t).mul(Math.PI).div(t.add(1));return s.add(n.log2()).clamp(0,s)}}const qu=Kn(Wu);pn("SpecularMIPLevelNode",Wu);const ju=new WeakMap;class Xu extends Ou{constructor(e=null){super(),this.envNode=e}setup(e){let t=this.envNode;if(t.isTextureNode&&!0!==t.value.isCubeTexture){let s=ju.get(t.value);if(void 0===s){const n=t.value,i=e.renderer,r=e.getCubeRenderTarget(512).fromEquirectangularTexture(i,n);s=Mu(r.texture),ju.set(t.value,s)}t=s}const s=Yo("envMapIntensity","float",e.material),n=Pi(t,Yu(Ji,Fa)).mul(s),i=Pi(t,Ku(Ia)).mul(Math.PI).mul(s),r=Ii(n),{stack:o}=e;o.addAssign(e.context.radiance,r),o.addAssign(e.context.iblIrradiance,i);const a=e.context.lightingModel.clearcoatRadiance;if(a){const e=Pi(t,Yu(sr,La)).mul(s),n=Ii(e);o.addAssign(a,n)}}}const Yu=(e,t)=>{let s=null,n=null;return{getUVNode:i=>{let r=null;return null===s&&(s=Za.negate().reflect(t),s=e.mul(e).mix(s,t).normalize(),s=s.transformDirection(Sa)),i.isCubeTextureNode?r=s:i.isTextureNode&&(null===n&&(n=Vu(s)),r=n),r},getSamplerLevelNode:()=>e,getMIPLevelAlgorithmNode:(e,t)=>qu(e,t)}},Ku=e=>{let t=null;return{getUVNode:s=>{let n=null;return s.isCubeTextureNode?n=e:s.isTextureNode&&(null===t&&(t=Vu(e),t=ii(t.x,t.y.oneMinus())),n=t),n},getSamplerLevelNode:()=>ei(1),getMIPLevelAlgorithmNode:(e,t)=>qu(e,t)}};pn("EnvironmentNode",Xu);const Qu=new Map;class Zu extends N{constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.unlit=this.constructor===Zu.prototype.constructor,this.fog=!0,this.lights=!0,this.normals=!0,this.colorSpace=!0,this.lightsNode=null,this.envNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.outputNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+nn(this)}build(e){this.setup(e)}setup(e){let t;if(e.addStack(),e.stack.outputNode=this.setupPosition(e),e.addFlow("vertex",e.removeStack()),e.addStack(),!1===this.unlit){!0===this.normals&&this.setupNormal(e),this.setupDiffuseColor(e),this.setupVariants(e);const s=this.setupLighting(e);t=this.setupOutput(e,hi(s,Zi.a)),e.stack.assign(cr,t),null!==this.outputNode&&(t=this.outputNode)}else t=this.setupOutput(e,this.outputNode||hi(0,0,0,1));e.stack.outputNode=t,e.addFlow("fragment",e.removeStack())}setupPosition(e){const t=e.object,s=t.geometry;return e.addStack(),(s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&e.stack.add(Ru(t)),!0===t.isSkinnedMesh&&e.stack.add(Su(t)),t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&!0===e.isAvailable("instance")&&e.stack.add(_u(t)),null!==this.positionNode&&e.stack.assign(Xa,this.positionNode),e.context.vertex=e.removeStack(),this.vertexNode||mu()}setupDiffuseColor({stack:e,geometry:t}){let s=this.colorNode?hi(this.colorNode):ta;!0===this.vertexColors&&t.hasAttribute("color")&&(s=hi(s.xyz.mul(wi("color")),s.a)),e.assign(Zi,s);const n=this.opacityNode?ei(this.opacityNode):ia;if(e.assign(Zi.a,Zi.a.mul(n)),null!==this.alphaTestNode||this.alphaTest>0){const t=null!==this.alphaTestNode?ei(this.alphaTestNode):ea;e.add(Zi.a.lessThanEqual(t).discard())}}setupVariants(){}setupNormal({stack:e}){if(!0===this.flatShading){const t=uo(Qa),s=lo(Qa),n=t.cross(s).normalize();e.assign(Fa,n)}else{const t=this.normalNode?ui(this.normalNode):du;e.assign(Fa,t)}}getEnvNode(e){let t=null;return this.envNode?t=this.envNode:this.envMap?t=this.envMap.isCubeTexture?Mu(this.envMap):jo(this.envMap):e.environmentNode&&(t=e.environmentNode),t}setupLights(e){const t=this.getEnvNode(e),s=[];t&&s.push(new Xu(t)),e.material.aoMap&&s.push(new Du(jo(e.material.aoMap)));let n=this.lightsNode||e.lightsNode;return s.length>0&&(n=Lu([...n.lightNodes,...s])),n}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:n,emissiveNode:i}=this,r=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let o=Zi.rgb;if(r&&!1!==r.hasLight){const t=this.setupLightingModel(e);o=ku(r,t,s,n)}else null!==s&&(o=ui(null!==n?Mo(o,s,n):s));return(i&&!0===i.isNode||t.emissive&&!0===t.emissive.isColor)&&(o=o.add(ui(i||na))),o}setupOutput(e,t){const s=e.renderer,n=e.toneMappingNode;if(n&&(t=hi(n.context({color:t.rgb}),t.a)),!0===this.fog){const s=e.fogNode;s&&(t=hi(s.mixAssign(t.rgb),t.a))}if(!0===this.colorSpace){const e=s.getRenderTarget();let n;n=null!==e?Array.isArray(e.texture)?e.texture[0].colorSpace:e.texture.colorSpace:s.outputColorSpace,n!==d&&n!==v&&(t=t.linearToColorSpace(n))}return t}setDefaultValues(e){for(const t in e){const s=e[t];void 0===this[t]&&(this[t]=s,s&&s.clone&&(this[t]=s.clone()))}Object.assign(this.defines,e.defines);const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const e in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,e)&&void 0!==t[e].get&&Object.defineProperty(this.constructor.prototype,e,t[e])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const s=S.prototype.toJSON.call(this,e),n=rn(this);s.inputNodes={};for(const{property:t,childNode:i}of n)s.inputNodes[t]=i.toJSON(e).uuid;function i(e){const t=[];for(const s in e){const n=e[s];delete n.metadata,t.push(n)}return t}if(t){const t=i(e.textures),n=i(e.images),r=i(e.nodes);t.length>0&&(s.textures=t),n.length>0&&(s.images=n),r.length>0&&(s.nodes=r)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.outputNode=e.outputNode,this.vertexNode=e.vertexNode,super.copy(e)}static fromMaterial(e){if(!0===e.isNodeMaterial)return e;const t=el(e.type.replace("Material","NodeMaterial"));if(void 0===t)throw new Error(`NodeMaterial: Material "${e.type}" is not compatible.`);for(const s in e)t[s]=e[s];return t}}function Ju(e,t){if("function"!=typeof t||!e)throw new Error(`Node material ${e} is not a class`);if(Qu.has(e))throw new Error(`Redefinition of node material ${e}`);Qu.set(e,t),t.type=e}function el(e){const t=Qu.get(e);if(void 0!==t)return new t}Ju("NodeMaterial",Zu);class tl{constructor(e,t=null){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class sl extends tl{constructor(e,t=0){super(e,t),this.isFloatUniform=!0,this.boundary=4,this.itemSize=1}}class nl extends tl{constructor(e,t=new i){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class il extends tl{constructor(e,t=new r){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class rl extends tl{constructor(e,t=new o){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class ol extends tl{constructor(e,t=new n){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class al extends tl{constructor(e,t=new a){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class ul extends tl{constructor(e,t=new u){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class ll extends sl{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class cl extends nl{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class dl extends il{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class hl extends rl{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class pl extends ol{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class ml extends al{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class gl extends ul{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class fl extends hn{constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const t=this.ifNode.getNodeType(e);if(null!==this.elseNode){const s=this.elseNode.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(t))return s}return t}generate(e){const t=this.getNodeType(e),s={tempWrite:!1},{ifNode:n,elseNode:i}=this,r="void"!==n.getNodeType(e)||i&&"void"!==i.getNodeType(e),o=r?Qi(t).build(e):"",a=Pi(this.condNode).build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${a} ) {\n\n`).addFlowTab();let u=Pi(this.ifNode,s).build(e,t);if(u=r?o+" = "+u+";":u,e.removeFlowTab().addFlowCode(e.tab+"\t"+u+"\n\n"+e.tab+"}"),null!==i){e.addFlowCode(" else {\n\n").addFlowTab();let n=Pi(i,s).build(e,t);n=o?o+" = "+n+";":n,e.removeFlowTab().addFlowCode(e.tab+"\t"+n+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return o}}const xl=Kn(fl);Sn("cond",xl),pn("CondNode",fl);class bl extends hn{constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(Oi(Wo(),e)),this}if(e,t){const s=new qn(t);return this._currentCond=xl(e,s),this.add(this._currentCond)}elseif(e,t){const s=new qn(t),n=xl(e,s);return this._currentCond.elseNode=n,this._currentCond=n,this}else(e){return this._currentCond.elseNode=new qn(e),this}build(e,...t){for(const t of this.nodes)t.build(e,"void");return this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}}const Tl=Kn(bl);pn("StackNode",bl);class _l extends A{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,n=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i=new R(5,5,5),r=Vu(Ka),o=el("MeshBasicNodeMaterial");o.colorNode=jo(t,r,0),o.side=C,o.blending=E;const a=new w(i,o),u=new M;u.add(a),t.minFilter===O&&(t.minFilter=B);return new U(1,10,this).update(e,u),t.minFilter=s,t.currentGenerateMipmaps=n,a.geometry.dispose(),a.material.dispose(),this}}const yl=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),Nl=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),vl=new Set([Int32Array,Uint32Array,Float32Array]),Sl=e=>(e=Number(e))+(e%1?"":".0");class Al{constructor(e,t,s,n=null,i=null){this.object=e,this.material=i||e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=n,this.nodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.hashNodes={},this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.toneMappingNode=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:[]},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.codes={vertex:[],fragment:[],compute:[]},this.bindings={vertex:[],fragment:[],compute:[]},this.bindingsOffset={vertex:0,fragment:0,compute:0},this.bindingsArray=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.vars={vertex:[],fragment:[],compute:[]},this.flow={code:""},this.chaining=[],this.stack=Tl(),this.tab="\t",this.context={keywords:new Yi,material:this.material,getMIPLevelAlgorithmNode:(e,t)=>t.mul(Hu(e))},this.cache=new Ui,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null}getRenderTarget(e,t,s){return new F(e,t,s)}getCubeRenderTarget(e,t){return new _l(e,t)}includes(e){return this.nodes.includes(e)}getBindings(){let e=this.bindingsArray;if(null===e){const t=this.bindings;this.bindingsArray=e=null!==this.material?[...t.vertex,...t.fragment]:t.compute}return e}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}buildUpdateNodes(){for(const e of this.nodes){const t=e.getUpdateType(),s=e.getUpdateBeforeType();t!==Ks&&this.updateNodes.push(e.getSelf()),s!==Ks&&this.updateBeforeNodes.push(e)}}get currentNode(){return this.chaining[this.chaining.length-1]}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}setCache(e){this.cache=e}getCache(){return this.cache}isAvailable(){return!1}getVertexIndex(){}getInstanceIndex(){}getFrontFacing(){}getFragCoord(){}isFlipY(){return!1}getTexture(){}getTextureLevel(){}getConst(e,t=null){if(null===t&&("float"===e||"int"===e||"uint"===e?t=0:"bool"===e?t=!1:"color"===e?t=new n:"vec2"===e?t=new i:"vec3"===e?t=new r:"vec4"===e&&(t=new o)),"float"===e)return Sl(t);if("int"===e)return`${Math.round(t)}`;if("uint"===e)return t>=0?`${Math.round(t)}u`:"0u";if("bool"===e)return t?"true":"false";if("color"===e)return`${this.getType("vec3")}( ${Sl(t.r)}, ${Sl(t.g)}, ${Sl(t.b)} )`;const s=this.getTypeLength(e),a=this.getComponentType(e),u=e=>this.getConst(a,e);if(2===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)} )`;if(3===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)}, ${u(t.z)} )`;if(4===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)}, ${u(t.z)}, ${u(t.w)} )`;if(s>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(u).join(", ")} )`;if(s>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}generateMethod(e){return e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const s=this.attributes;for(const t of s)if(t.name===e)return t;const n=new Hi(e,t);return s.push(n),n}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"texture"===e||"cubeTexture"===e}needsColorSpaceToLinear(){return!1}getTextureEncodingFromMap(e){return this.getTextureColorSpaceFromMap(e)===h?I:L}getTextureColorSpaceFromMap(e){let t;return t=e&&e.isTexture?e.colorSpace:e&&e.isWebGLRenderTarget?e.texture.colorSpace:v,t}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;const s=yl.get(e);return("float"===t?"":t[0])+s}getTypeFromArray(e){return Nl.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,n=vl.has(s.constructor)?e.itemSize:t.stride||e.itemSize,i=e.normalized;let r;return e instanceof P||!0===i||(r=this.getTypeFromArray(s)),this.getTypeFromLength(n,r)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return null!==s?Number(s[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Tl(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,e}getDataFromNode(e,t=this.shaderStage){const s=e.isGlobal(this)?this.globalCache:this.cache;let n=s.getNodeData(e);return void 0===n&&(n={},s.setNodeData(e,n)),void 0===n[t]&&(n[t]={}),n[t]}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let n=s.bufferAttribute;if(void 0===n){const i=this.uniforms.index++;n=new Hi("nodeAttribute"+i,t,e),this.bufferAttributes.push(n),s.bufferAttribute=n}return n}getStructTypeFromNode(e,t=this.shaderStage,s=null){const n=this.getDataFromNode(e,t);if(void 0===n.structType){const s=this.structs.index++;e.name=`StructType${s}`,this.structs[t].push(e),n.structType=e}return e}getUniformFromNode(e,t,s=this.shaderStage,n=null){const i=this.getDataFromNode(e,s);let r=i.uniform;if(void 0===r){const o=this.uniforms.index++;r=new Wi(n||"nodeUniform"+o,t,e),this.uniforms[s].push(r),i.uniform=r}return r}getVarFromNode(e,t=null,s=e.getNodeType(this),n=this.shaderStage){const i=this.getDataFromNode(e,n);let r=i.variable;if(void 0===r){const e=this.vars[n];null===t&&(t="nodeVar"+e.length),r=new qi(t,s),e.push(r),i.variable=r}return r}getVaryingFromNode(e,t){const s=this.getDataFromNode(e,"any");let n=s.varying;if(void 0===n){const e=this.varyings,i=e.length;n=new ji("nodeVarying"+i,t),e.push(n),s.varying=n}return n}getCodeFromNode(e,t,s=this.shaderStage){const n=this.getDataFromNode(e);let i=n.code;if(void 0===i){const e=this.codes[s],r=e.length;i=new Xi("nodeCode"+r,t),e.push(i),n.code=i}return i}addLineFlowCode(e){return""===e||(e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}flowChildNode(e,t=null){const s=this.flow,n={code:""};return this.flow=n,n.result=e.build(this,t),this.flow=s,n}flowNodeFromShaderStage(e,t,s=null,n=null){const i=this.shaderStage;this.setShaderStage(e);const r=this.flowChildNode(t,s);return null!==n&&(r.code+=`${this.tab+n} = ${r.result};\n`),this.flowCode[e]=this.flowCode[e]+r.code,this.setShaderStage(i),r}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){}getVaryings(){}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];for(const e of s)t+=`${this.getVar(e.type,e.name)}; `;return t}getUniforms(){}getCodes(e){const t=this.codes[e];let s="";for(const e of t)s+=e.code+"\n";return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){}build(){for(const e of en){this.setBuildStage(e),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const t of tn){this.setShaderStage(t);const s=this.flowNodes[t];for(const t of s)"generate"===e?this.flowNode(t):t.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t)return new ll(e);if("vec2"===t)return new cl(e);if("vec3"===t)return new dl(e);if("vec4"===t)return new hl(e);if("color"===t)return new pl(e);if("mat3"===t)return new ml(e);if("mat4"===t)return new gl(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e){return el(e)}format(e,t,s){if((t=this.getVectorType(t))===(s=this.getVectorType(s))||null===s||this.isReference(s))return e;const n=this.getTypeLength(t),i=this.getTypeLength(s);return n>4||i>4||0===i?e:n===i?`${this.getType(s)}( ${e} )`:n>i?this.format(`${e}.${"xyz".slice(0,i)}`,this.getTypeFromLength(i,this.getComponentType(t)),s):4===i?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===n?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:`${this.getType(s)}( ${e} )`}getSignature(){return`// Three.js r${D} - NodeMaterial System\n`}}class Rl{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return void 0===s&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this),{frameMap:n,renderMap:i}=this._getMaps(this.updateBeforeMap,s);t===Qs?n.get(e)!==this.frameId&&(n.set(e,this.frameId),e.updateBefore(this)):t===Zs?i.get(e)===this.renderId&&n.get(e)===this.frameId||(i.set(e,this.renderId),n.set(e,this.frameId),e.updateBefore(this)):t===Js&&e.updateBefore(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this),{frameMap:n,renderMap:i}=this._getMaps(this.updateMap,s);t===Qs?n.get(e)!==this.frameId&&(n.set(e,this.frameId),e.update(this)):t===Zs?i.get(e)===this.renderId&&n.get(e)===this.frameId||(i.set(e,this.renderId),n.set(e,this.frameId),e.update(this)):t===Js&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class Cl{constructor(e,t,s=null,n="",i=!1){this.type=e,this.name=t,this.count=s,this.qualifier=n,this.isConst=i}}Cl.isNodeFunctionInput=!0;class El extends hn{constructor(e){super(),this.types=e,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}pn("StructTypeNode",El);class wl extends hn{constructor(...e){super(),this.isOutputStructNode=!0,this.members=e}setup(e){super.setup(e);const t=this.members,s=[];for(let n=0;n<t.length;n++)s.push(t[n].getNodeType(e));this.nodeType=e.getStructTypeFromNode(new El(s)).name}generate(e,t){const s=e.getVarFromNode(this);s.isOutputStructVar=!0;const n=e.getPropertyName(s),i=this.members,r=""!==n?n+".":"";for(let s=0;s<i.length;s++){const n=i[s].build(e,t);e.addLineFlowCode(`${r}m${s} = ${n}`)}return n}}const Ml=Kn(wl);pn("OutputStructNode",wl);class Ol extends hn{constructor(e){super(),this.seedNode=e}setup(){const e=this.seedNode.uint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).float().mul(1/2**32)}}let Bl;Sn("hash",Kn(Ol)),pn("HashNode",Ol);class Ul extends fl{constructor(e){Bl=Bl||Wo("discard"),super(e,Bl)}}Sn("discard",Kn(Ul)),pn("DiscardNode",Ul);class Fl extends hn{constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt()+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const s={};for(let e=0,t=this.params.length-1;e<t;e++){const t=this.getVarName(e);s[t]=Wo(t,"int")}return t.returnsNode=this.params[this.params.length-1](s,e.addStack(),e),t.stackNode=e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,n=t.stackNode;for(let t=0,n=s.length-1;t<n;t++){const n=s[t],i=this.getVarName(t);let r=null,o=null,a=null;n.isNode?(r="0",o=n.build(e,"int"),a="forward"):(r=n.start,o=n.end,a=n.direction,"number"==typeof r?r=r.toString():r&&r.isNode&&(r=r.build(e,"int")),"number"==typeof o?o=o.toString():o&&o.isNode&&(o=o.build(e,"int")),void 0!==r&&void 0===o?(r+=" - 1",o="0",a="backwards"):void 0!==o&&void 0===r&&(r="0",a="forward"),void 0===a&&(a=Number(r)>Number(o)?"backwards":"forward"));const u={start:r,end:o,direction:a},l=u.start,c=u.end;let d="",h="",p="";d+=e.getVar("int",i)+" = "+l,"backwards"===u.direction?(h+=i+" >= "+c,p+=i+" --"):(h+=i+" < "+c,p+=i+" ++");const m=`for ( ${d}; ${h}; ${p} )`;e.addFlowCode((0===t?"\n":"")+e.tab+m+" {\n\n").addFlowTab()}const i=Pi(n,{tempWrite:!1}).build(e,"void"),r=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+i);for(let t=0,s=this.params.length-1;t<s;t++)e.addFlowCode((0===t?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),r}}Sn("loop",((e,...t)=>Oi(e,((...e)=>jn(new Fl(Yn(e,"int"))))(...t)))),pn("LoopNode",Fl);class Il extends xn{constructor(){super("vec2")}setup(){const e=ui(Za.z,0,Za.x.negate()).normalize(),t=Za.cross(e);return ii(e.dot(Fa),t.dot(Fa)).mul(.495).add(.5)}}Qn(Il),pn("MatcapUVNode",Il);class Ll extends Si{constructor(e=Ll.LOCAL,t=1,s=0){super(s),this.scope=e,this.scale=t,this.updateType=Qs}update(e){const t=this.scope,s=this.scale;t===Ll.LOCAL?this.value+=e.deltaTime*s:t===Ll.DELTA?this.value=e.deltaTime*s:t===Ll.FRAME?this.value=e.frameId:this.value=e.time*s}serialize(e){super.serialize(e),e.scope=this.scope,e.scale=this.scale}deserialize(e){super.deserialize(e),this.scope=e.scope,this.scale=e.scale}}Ll.LOCAL="local",Ll.GLOBAL="global",Ll.DELTA="delta",Ll.FRAME="frame";Qn(Ll,Ll.FRAME).uint(),pn("TimerNode",Ll);class Pl extends hn{constructor(e=Pl.SINE,t=((e,t=0)=>jn(new Ll(Ll.LOCAL,e,t)))()){super(),this.method=e,this.timeNode=t}getNodeType(e){return this.timeNode.getNodeType(e)}setup(){const e=this.method,t=jn(this.timeNode);let s=null;return e===Pl.SINE?s=t.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5):e===Pl.SQUARE?s=t.fract().round():e===Pl.TRIANGLE?s=t.add(.5).fract().mul(2).sub(1).abs():e===Pl.SAWTOOTH&&(s=t.fract()),s}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Pl.SINE="sine",Pl.SQUARE="square",Pl.TRIANGLE="triangle",Pl.SAWTOOTH="sawtooth",Kn(Pl,Pl.SINE),Kn(Pl,Pl.SQUARE),Kn(Pl,Pl.TRIANGLE),Kn(Pl,Pl.SAWTOOTH),pn("OscNode",Pl);class Dl extends xn{constructor(e,t){super(),this.scope=e,this.node=t}getNodeType(e){return this.node.getNodeType(e)}setup(){const{scope:e,node:t}=this;let s=null;return e===Dl.DIRECTION_TO_COLOR?s=t.mul(.5).add(.5):e===Dl.COLOR_TO_DIRECTION&&(s=t.mul(2).sub(1)),s}}Dl.DIRECTION_TO_COLOR="directionToColor",Dl.COLOR_TO_DIRECTION="colorToDirection";const Gl=Kn(Dl,Dl.DIRECTION_TO_COLOR),kl=Kn(Dl,Dl.COLOR_TO_DIRECTION);Sn("directionToColor",Gl),Sn("colorToDirection",kl),pn("PackingNode",Dl);class zl extends hn{constructor(e,t,s,n,i){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=n,this.outHighNode=i,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:n,outHighNode:i,doClamp:r}=this;let o=e.sub(t).div(s.sub(t));return!0===r&&(o=o.clamp()),o.mul(i.sub(n)).add(n)}}const Vl=Kn(zl,null,null,{doClamp:!1}),$l=Kn(zl);Sn("remap",Vl),Sn("remapClamp",$l),pn("RemapNode",zl);class Hl extends xn{constructor(e,t,s=ii(.5)){super("vec2"),this.uvNode=e,this.rotationNode=t,this.centerNode=s}setup(){const{uvNode:e,rotationNode:t,centerNode:s}=this,n=t.cos(),i=t.sin(),r=e.sub(s);return ii(ii(n,i).dot(r),ii(i.negate(),n).dot(r)).add(s)}}Sn("rotateUV",Kn(Hl)),pn("RotateUVNode",Hl);class Wl extends hn{constructor(e,t=mr(),s=ei(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:n,height:i}=s,r=e.mod(n.mul(i)).floor(),o=r.mod(n),a=i.sub(r.add(1).div(n).ceil()),u=s.reciprocal(),l=ii(o,a);return t.add(l).mul(u)}}Kn(Wl),pn("SpriteSheetUVNode",Wl);class ql extends hn{constructor(e,t=null,s=null,n=ei(1),i=Ya,r=Ua){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=s,this.scaleNode=n,this.positionNode=i,this.normalNode=r}setup(){const{textureXNode:e,textureYNode:t,textureZNode:s,scaleNode:n,positionNode:i,normalNode:r}=this;let o=r.abs().normalize();o=o.div(o.dot(ui(1)));const a=i.yz.mul(n),u=i.zx.mul(n),l=i.xy.mul(n),c=e.value,d=null!==t?t.value:c,h=null!==s?s.value:c,p=jo(c,a).mul(o.x),m=jo(d,u).mul(o.y),g=jo(h,l).mul(o.z);return br(p,m,g)}}const jl=Kn(ql);Sn("triplanarTexture",((...e)=>jl(...e))),pn("TriplanarTexturesNode",ql);class Xl extends Jo{setup(){return this.getFloat(this.scope)}}Xl.SCALE="scale",Xl.DASH_SIZE="dashSize",Xl.GAP_SIZE="gapSize",Xl.LINEWIDTH="linewidth",Xl.DASH_OFFSET="dashOffset";const Yl=Qn(Xl,Xl.SCALE),Kl=Qn(Xl,Xl.DASH_OFFSET),Ql=Qn(Xl,Xl.DASH_SIZE),Zl=Qn(Xl,Xl.GAP_SIZE),Jl=Qn(Xl,Xl.LINEWIDTH);pn("LineMaterialNode",Xl);const ec=1/6,tc=e=>_r(ec,_r(e,_r(e,e.negate().add(3)).sub(3)).add(1)),sc=e=>_r(ec,_r(e,_r(e,_r(3,e).sub(6))).add(4)),nc=e=>_r(ec,_r(e,_r(e,_r(-3,e).add(3)).add(3)).add(1)),ic=e=>_r(ec,Ao(e,3)),rc=e=>tc(e).add(sc(e)),oc=e=>nc(e).add(ic(e)),ac=e=>br(-1,sc(e).div(tc(e).add(sc(e)))),uc=e=>br(1,ic(e).div(nc(e).add(ic(e)))),lc=(e,t,s)=>{const n=e.uvNode,i=_r(n,t.zw).add(.5),r=jr(i),o=Kr(i),a=rc(o.x),u=oc(o.x),l=ac(o.x),c=uc(o.x),d=ac(o.y),h=uc(o.y),p=ii(r.x.add(l),r.y.add(d)).sub(.5).mul(t.xy),m=ii(r.x.add(c),r.y.add(d)).sub(.5).mul(t.xy),g=ii(r.x.add(l),r.y.add(h)).sub(.5).mul(t.xy),f=ii(r.x.add(c),r.y.add(h)).sub(.5).mul(t.xy),x=rc(o.y).mul(br(a.mul(e.uv(p).level(s)),u.mul(e.uv(m).level(s)))),b=oc(o.y).mul(br(a.mul(e.uv(g).level(s)),u.mul(e.uv(f).level(s))));return x.add(b)};class cc extends xn{constructor(e,t=ei(3)){super("vec4"),this.textureNode=e,this.blurNode=t}setup(){return((e,t)=>{const s=ii(e.size(ti(t))),n=ii(e.size(ti(t.add(1)))),i=yr(1,s),r=yr(1,n),o=lc(e,hi(i,s),jr(t)),a=lc(e,hi(r,n),Xr(t));return Kr(t).mix(o,a)})(this.textureNode,this.blurNode)}}Sn("bicubic",Kn(cc)),pn("TextureBicubicNode",cc);class dc extends hn{constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}Qn(dc),pn("PointUVNode",dc);class hc extends hn{constructor(e=hc.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=null!==this.scene?this.scene:e.scene;let n;return t===hc.BACKGROUND_BLURRINESS?n=Yo("backgroundBlurriness","float",s):t===hc.BACKGROUND_INTENSITY&&(n=Yo("backgroundIntensity","float",s)),n}}hc.BACKGROUND_BLURRINESS="backgroundBlurriness",hc.BACKGROUND_INTENSITY="backgroundIntensity";const pc=Qn(hc,hc.BACKGROUND_BLURRINESS),mc=Qn(hc,hc.BACKGROUND_INTENSITY);pn("SceneNode",hc);pn("StorageBufferNode",class extends yu{constructor(e,t,s=0){super(e,t,s),this.isStorageBufferNode=!0}getInputType(){return"storageBuffer"}});class gc extends qo{constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStoreTextureNode=!0}getNodeType(){return"void"}}Kn(gc),pn("TextureStoreNode",gc);pn("UserDataNode",class extends Xo{constructor(e,t,s=null){super(e,t,s),this.userData=s}update(e){this.reference=null!==this.userData?this.userData:e.object.userData,super.update(e)}});const fc=Zn((({base:e,blend:t})=>{const s=s=>t[s].lessThan(Dr).cond(t[s],e[s].oneMinus().div(t[s]).oneMinus().max(0));return ui(s("x"),s("y"),s("z"))})),xc=Zn((({base:e,blend:t})=>{const s=s=>t[s].equal(1).cond(t[s],e[s].div(t[s].oneMinus()).max(0));return ui(s("x"),s("y"),s("z"))})),bc=Zn((({base:e,blend:t})=>{const s=s=>e[s].oneMinus().mul(t[s].oneMinus()).oneMinus();return ui(s("x"),s("y"),s("z"))})),Tc=Zn((({base:e,blend:t})=>{const s=s=>e[s].lessThan(.5).cond(e[s].mul(t[s],2),e[s].oneMinus().mul(t[s].oneMinus()).oneMinus());return ui(s("x"),s("y"),s("z"))}));class _c extends xn{constructor(e,t,s){super(),this.blendMode=e,this.baseNode=t,this.blendNode=s}setup(){const{blendMode:e,baseNode:t,blendNode:s}=this,n={base:t,blend:s};let i=null;return e===_c.BURN?i=fc(n):e===_c.DODGE?i=xc(n):e===_c.SCREEN?i=bc(n):e===_c.OVERLAY&&(i=Tc(n)),i}}_c.BURN="burn",_c.DODGE="dodge",_c.SCREEN="screen",_c.OVERLAY="overlay";const yc=Kn(_c,_c.BURN),Nc=Kn(_c,_c.DODGE),vc=Kn(_c,_c.OVERLAY),Sc=Kn(_c,_c.SCREEN);Sn("burn",yc),Sn("dodge",Nc),Sn("overlay",vc),Sn("screen",Sc),pn("BlendModeNode",_c);const Ac=Zn((({color:e,adjustment:t})=>t.mix(Uc(e),e))),Rc=Zn((({color:e,adjustment:t})=>{const s=br(e.r,e.g,e.b).div(3),n=e.r.max(e.g.max(e.b)),i=n.sub(s).mul(t).mul(-3);return Mo(e,n,i)})),Cc=Zn((({color:e,adjustment:t})=>{const s=fi(.299,.587,.114,.595716,-.274453,-.321263,.211456,-.522591,.311135),n=fi(1,.9563,.621,1,-.2721,-.6474,1,-1.107,1.7046),i=s.mul(e),r=i.z.atan2(i.y).add(t),o=i.yz.length();return n.mul(ui(i.x,o.mul(r.cos()),o.mul(r.sin())))}));class Ec extends xn{constructor(e,t,s=ei(1)){super("vec3"),this.method=e,this.colorNode=t,this.adjustmentNode=s}setup(){const{method:e,colorNode:t,adjustmentNode:s}=this,n={color:t,adjustment:s};let i=null;return e===Ec.SATURATION?i=Ac(n):e===Ec.VIBRANCE?i=Rc(n):e===Ec.HUE&&(i=Cc(n)),i}}Ec.SATURATION="saturation",Ec.VIBRANCE="vibrance",Ec.HUE="hue";const wc=Kn(Ec,Ec.SATURATION),Mc=Kn(Ec,Ec.VIBRANCE),Oc=Kn(Ec,Ec.HUE),Bc=ui(.2125,.7154,.0721),Uc=(e,t=Bc)=>vo(e,t);Sn("saturation",wc),Sn("vibrance",Mc),Sn("hue",Oc),pn("ColorAdjustmentNode",Ec);class Fc extends xn{constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}Sn("posterize",Kn(Fc)),pn("PosterizeNode",Fc);const Ic=Zn((({color:e,exposure:t})=>e.mul(t).clamp())),Lc=Zn((({color:e,exposure:t})=>(e=e.mul(t)).div(e.add(1)).clamp())),Pc=Zn((({color:e,exposure:t})=>{const s=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),n=e.mul(e.mul(6.2).add(1.7)).add(.06);return s.div(n).pow(2.2)})),Dc=Zn((({color:e})=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),s=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(s)})),Gc=Zn((({color:e,exposure:t})=>{const s=fi(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=fi(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=s.mul(e),e=Dc({color:e}),(e=n.mul(e)).clamp()})),kc={[k]:Ic,[z]:Lc,[V]:Pc,[$]:Gc};class zc extends xn{constructor(e=G,t=ei(1),s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}getCacheKey(){let e=super.getCacheKey();return e="{toneMapping:"+this.toneMapping+",nodes:"+e+"}",e}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===G)return t;const n={exposure:this.exposureNode,color:t},i=kc[s];let r=null;return r=i?i(n):t,r}}let Vc,$c;pn("ToneMappingNode",zc);class Hc extends hn{constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===Hc.COORDINATE||this.scope===Hc.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=Ks;return this.scope!==Hc.RESOLUTION&&this.scope!==Hc.VIEWPORT||(e=Qs),this.updateType=e,e}update({renderer:e}){this.scope===Hc.VIEWPORT?e.getViewport($c):e.getDrawingBufferSize(Vc)}setup(e){const t=this.scope;if(t===Hc.COORDINATE)return;let s=null;if(t===Hc.RESOLUTION)s=Ai(Vc||(Vc=new i));else if(t===Hc.VIEWPORT)s=Ai($c||($c=new o));else{const n=ii(new Hc(Hc.COORDINATE)),i=new Hc(Hc.RESOLUTION);s=n.div(i);let r=s.x,o=s.y;(/top/i.test(t)&&e.isFlipY()||/bottom/i.test(t)&&!1===e.isFlipY())&&(o=o.oneMinus()),/right/i.test(t)&&(r=r.oneMinus()),s=ii(r,o)}return s}generate(e){return this.scope===Hc.COORDINATE?e.getFragCoord():super.generate(e)}}Hc.COORDINATE="coordinate",Hc.RESOLUTION="resolution",Hc.VIEWPORT="viewport",Hc.TOP_LEFT="topLeft",Hc.BOTTOM_LEFT="bottomLeft",Hc.TOP_RIGHT="topRight",Hc.BOTTOM_RIGHT="bottomRight",Qn(Hc,Hc.COORDINATE),Qn(Hc,Hc.RESOLUTION);const Wc=Qn(Hc,Hc.VIEWPORT),qc=Qn(Hc,Hc.TOP_LEFT),jc=Qn(Hc,Hc.BOTTOM_LEFT);Qn(Hc,Hc.TOP_RIGHT),Qn(Hc,Hc.BOTTOM_RIGHT),pn("ViewportNode",Hc);const Xc=new i;class Yc extends qo{constructor(e=qc,t=null,s=null){null===s&&((s=new H).minFilter=O),super(s,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=Qs}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(Xc);const s=this.value;s.image.width===Xc.width&&s.image.height===Xc.height||(s.image.width=Xc.width,s.image.height=Xc.height,s.needsUpdate=!0);const n=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(s),s.generateMipmaps=n}clone(){return new this.constructor(this.uvNode,this.levelNode,this.value)}}const Kc=Kn(Yc),Qc=Kn(Yc,null,null,{generateMipmaps:!0});Sn("viewportTexture",Kc),Sn("viewportMipTexture",Qc),pn("ViewportTextureNode",Yc);let Zc=null;class Jc extends Yc{constructor(e=qc,t=null){null===Zc&&(Zc=new H),super(e,t,Zc)}}Sn("viewportSharedTexture",Kn(Jc)),pn("ViewportSharedTextureNode",Jc);let ed=null;class td extends Yc{constructor(e=qc,t=null){null===ed&&(ed=new T,ed.minFilter=O,ed.type=W,ed.format=q),super(e,t,ed)}}const sd=Kn(td);Sn("viewportDepthTexture",sd),pn("ViewportDepthTextureNode",td);class nd extends hn{constructor(e,t=null){super("float"),this.scope=e,this.textureNode=t,this.isViewportDepthNode=!0}setup(){const{scope:e}=this;let t=null;if(e===nd.DEPTH)t=id(Qa.z,Na,va);else if(e===nd.DEPTH_TEXTURE){const e=this.textureNode||sd(),s=rd(e,Na,va);t=id(s,Na,va)}return t}}const id=(e,t,s)=>e.add(t).div(t.sub(s)),rd=(e,t,s)=>t.mul(s).div(s.sub(t).mul(e).sub(s));nd.DEPTH="depth",nd.DEPTH_TEXTURE="depthTexture",Qn(nd,nd.DEPTH),Kn(nd,nd.DEPTH_TEXTURE),pn("ViewportDepthNode",nd);class od extends hn{constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=s,this._includes=t}setIncludes(e){return this._includes=e,this}getIncludes(){return this._includes}generate(e){const t=this.getIncludes(e);for(const s of t)s.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const ad=Kn(od),ud=(e,t)=>ad(e,t,"glsl");pn("CodeNode",od);class ld extends xn{constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],s=this.functionNode,n=s.getInputs(e),i=this.parameters;if(Array.isArray(i))for(let s=0;s<i.length;s++){const r=n[s],o=i[s];t.push(o.build(e,r.type))}else for(const s of n){const n=i[s.name];if(void 0===n)throw new Error(`FunctionCallNode: Input '${s.name}' not found in FunctionNode.`);t.push(n.build(e,s.type))}return`${s.build(e,"property")}( ${t.join(", ")} )`}}Sn("call",((e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?Yn(t):Xn(t[0]),jn(new ld(jn(e),t))))),pn("FunctionCallNode",ld);class cd extends od{constructor(e="",t=[],s=""){super(e,t,s),this.keywords={}}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return void 0===s&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),n=s.name,i=s.type,r=e.getCodeFromNode(this,i);""!==n&&(r.name=n);const o=e.getPropertyName(r);let a=this.getNodeFunction(e).getCode(o);const u=this.keywords,l=Object.keys(u);if(l.length>0)for(const t of l){const s=new RegExp(`\\b${t}\\b`,"g"),n=u[t].build(e,"property");a=a.replace(s,n)}return r.code=a,"property"===t?o:e.format(`${o}()`,i,t)}}const dd=(e,t)=>((e,t=[],s="")=>{for(let e=0;e<t.length;e++){const s=t[e];"function"==typeof s&&(t[e]=s.functionNode)}const n=jn(new cd(e,t,s)),i=(...e)=>n.call(...e);return i.functionNode=n,i})(e,t,"glsl");pn("FunctionNode",cd);class hd extends hn{constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new l,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:ei()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=un(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?ln(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const pd=Kn(hd);Sn("scriptableValue",pd),pn("ScriptableValueNode",hd);class md extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(null!==t){const n=t(...s);return this.set(e,n),n}}}class gd{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const fd=new md;class xd extends hn{constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new md,this._output=pd(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return void 0===s[e]?s[e]=pd(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):void 0===s[e]?(s[e]=pd(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const s=this.getObject()[e];if("function"==typeof s)return s(...t)}async callAsync(e,...t){const s=this.getObject()[e];if("function"==typeof s)return"AsyncFunction"===s.constructor.name?await s(...t):s(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new gd(this),t=fd.get("THREE"),s=fd.get("TSL"),n=this.getMethod(this.codeNode),i=[e,this._local,fd,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,s];this._object=n(...i);const r=this._object.layout;if(r&&(!1===r.cache&&this._local.clear(),this._output.outputType=r.outputType||null,Array.isArray(r.elements)))for(const e of r.elements){const t=e.id||e.name;e.inputType&&(void 0===this.getParameter(t)&&this.setParameter(t,null),this.getParameter(t).inputType=e.inputType),e.outputType&&(void 0===this.getOutput(t)&&this.setOutput(t,null),this.getOutput(t).outputType=e.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const e in this.parameters){let t=this.parameters[e];t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:ei()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",s="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],s),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}Sn("scriptable",Kn(xd)),pn("ScriptableNode",xd);class bd extends hn{constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}mixAssign(e){return this.mix(e,this.colorNode)}setup(){return this.factorNode}}Sn("fog",Kn(bd)),pn("FogNode",bd);class Td extends bd{constructor(e,t,s){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=s}setup(){return Uo(this.nearNode,this.farNode,Qa.z.negate())}}const _d=Kn(Td);Sn("rangeFog",_d),pn("FogRangeNode",Td);class yd extends bd{constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(){const e=Qa.z.negate(),t=this.densityNode;return t.mul(t,e,e).negate().exp().oneMinus()}}const Nd=Kn(yd);Sn("densityFog",Nd),pn("FogExp2Node",yd);let vd=null,Sd=null;class Ad extends hn{constructor(e=ei(),t=ei()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(on(this.minNode.value)),s=e.getTypeLength(on(this.maxNode.value));return t>s?t:s}getNodeType(e){return!0===e.object.isInstancedMesh?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(!0===t.isInstancedMesh){const n=this.minNode.value,i=this.maxNode.value,r=e.getTypeLength(on(n)),a=e.getTypeLength(on(i));vd=vd||new o,Sd=Sd||new o,vd.setScalar(0),Sd.setScalar(0),1===r?vd.setScalar(n):n.isColor?vd.set(n.r,n.g,n.b):vd.set(n.x,n.y,n.z||0,n.w||0),1===a?Sd.setScalar(i):i.isColor?Sd.set(i.r,i.g,i.b):Sd.set(i.x,i.y,i.z||0,i.w||0);const u=4,l=u*t.count,d=new Float32Array(l);for(let e=0;e<l;e++){const t=e%u,s=vd.getComponent(t),n=Sd.getComponent(t);d[e]=c.lerp(s,n,Math.random())}const h=this.getNodeType(e);s=Nu(d,"vec4",t.count).element(ki).convert(h)}else s=ei(0);return s}}Kn(Ad),pn("RangeNode",Ad);class Rd extends hn{constructor(e,t,s=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=s,this.dispatchCount=0,this.version=1,this.updateType=Js,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let s=t[0];for(let e=1;e<t.length;e++)s*=t[e];this.dispatchCount=Math.ceil(e/s)}onInit(){}update({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if("compute"===t){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t)}}}Sn("compute",((e,t,s)=>jn(new Rd(jn(e),t,s)))),pn("ComputeNode",Rd);class Cd extends hn{constructor(e=Cd.TARGET_DIRECTION,t=null){super(),this.scope=e,this.light=t}setup(){const{scope:e,light:t}=this;let s=null;return e===Cd.TARGET_DIRECTION&&(s=Sa.transformDirection(ba(t).sub(ba(t.target)))),s}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Cd.TARGET_DIRECTION="targetDirection";const Ed=Kn(Cd,Cd.TARGET_DIRECTION);pn("LightNode",Cd);const wd=Zn((e=>{const{lightDistance:t,cutoffDistance:s,decayExponent:n}=e,i=t.pow(n).max(.01).reciprocal();return s.greaterThan(0).cond(i.mul(t.div(s).pow4().oneMinus().clamp().pow2()),i)}));class Md extends Uu{constructor(e=null){super(e),this.cutoffDistanceNode=Ai(0),this.decayExponentNode=Ai(0)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setup(e){const{colorNode:t,cutoffDistanceNode:s,decayExponentNode:n,light:i}=this,r=e.context.lightingModel,o=Ta(i).sub(Qa),a=o.normalize(),u=o.length(),l=wd({lightDistance:u,cutoffDistance:s,decayExponent:n}),c=t.mul(l),d=e.context.reflectedLight;r.direct({lightDirection:a,lightColor:c,reflectedLight:d},e.stack,e)}}pn("PointLightNode",Md),Pu(j,Md);class Od extends Uu{constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,s=this.colorNode,n=Ed(this.light),i=e.context.reflectedLight;t.direct({lightDirection:n,lightColor:s,reflectedLight:i},e.stack,e)}}pn("DirectionalLightNode",Od),Pu(X,Od);class Bd extends Uu{constructor(e=null){super(e),this.coneCosNode=Ai(0),this.penumbraCosNode=Ai(0),this.cutoffDistanceNode=Ai(0),this.decayExponentNode=Ai(0)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:s}=this;return Uo(t,s,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:s,cutoffDistanceNode:n,decayExponentNode:i,light:r}=this,o=Ta(r).sub(Qa),a=o.normalize(),u=a.dot(Ed(r)),l=this.getSpotAttenuation(u),c=o.length(),d=wd({lightDistance:c,cutoffDistance:n,decayExponent:i}),h=s.mul(l).mul(d),p=e.context.reflectedLight;t.direct({lightDirection:a,lightColor:h,reflectedLight:p},e.stack,e)}}pn("SpotLightNode",Bd),Pu(Y,Bd);class Ud extends Bd{getSpotAttenuation(e){const t=this.light.iesMap;let s=null;if(t&&!0===t.isTexture){const n=e.acos().mul(1/Math.PI);s=jo(t,ii(n,0),0).r}else s=super.getSpotAttenuation(e);return s}}pn("IESSpotLightNode",Ud),Pu(class extends Y{constructor(e,t,s,n,i,r){super(e,t,s,n,i,r),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}},Ud);class Fd extends Uu{constructor(e=null){super(e)}setup(e){e.stack.addAssign(e.context.irradiance,this.colorNode)}}pn("AmbientLightNode",Fd),Pu(K,Fd);class Id extends Uu{constructor(e=null){super(e),this.lightPositionNode=ba(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Ai(new n)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:n}=this,i=Ba.dot(n).mul(.5).add(.5),r=Mo(s,t,i);e.stack.addAssign(e.context.irradiance,r)}}pn("HemisphereLightNode",Id),Pu(Q,Id);const Ld=Zn((e=>{const t=e.uv.mul(2),s=t.x.floor(),n=t.y.floor();return s.add(n).mod(2).sign()}));class Pd extends xn{constructor(e=mr()){super("float"),this.uvNode=e}setup(){return Ld({uv:this.uvNode})}}Sn("checker",Kn(Pd)),pn("CheckerNode",Pd);const Dd=new Z;Ju("LineBasicNodeMaterial",class extends Zu{constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.normals=!1,this.setDefaultValues(Dd),this.setValues(e)}});const Gd=new J;Ju("LineDashedNodeMaterial",class extends Zu{constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.normals=!1,this.setDefaultValues(Gd),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants({stack:e}){const t=this.offsetNode,s=this.dashScaleNode?ei(this.dashScaleNode):Yl,n=this.dashSizeNode?ei(this.dashSizeNode):Ql,i=this.dashSizeNode?ei(this.dashGapNode):Zl;e.assign(dr,n),e.assign(hr,i);const r=Ci(wi("lineDistance").mul(s)),o=t?r.add(t):r;e.add(o.mod(dr.add(hr)).greaterThan(dr).discard())}});const kd=new J;Ju("Line2NodeMaterial",class extends Zu{constructor(e={}){super(),this.normals=!1,this.lights=!1,this.setDefaultValues(kd),this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.useDash=e.dashed,this.useWorldUnits=!1,this.dashOffset=0,this.lineWidth=1,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setupShaders(),this.setValues(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor,s=this.dashed,n=this.worldUnits,i=Zn((({start:e,end:t})=>{const s=ya.element(2).element(2),n=ya.element(3).element(2).mul(-.5).div(s).sub(e.z).div(t.z.sub(e.z));return hi(Mo(e.xyz,t.xyz,n),t.w)}));this.vertexNode=new qn((e=>{e.assign(Ci(ii(),"vUv"),mr());const t=wi("instanceStart"),r=wi("instanceEnd"),o=Qi("vec4","start"),a=Qi("vec4","end");e.assign(o,Ra.mul(hi(t,1))),e.assign(a,Ra.mul(hi(r,1))),n&&(e.assign(Ci(ui(),"worldStart"),o.xyz),e.assign(Ci(ui(),"worldEnd"),a.xyz));const u=Wc.z.div(Wc.w),l=ya.element(2).element(3).equal(-1);e.if(l,(e=>{e.if(o.z.lessThan(0).and(a.z.greaterThan(0)),(e=>{e.assign(a,i({start:o,end:a}))})).elseif(a.z.lessThan(0).and(o.z.greaterThanEqual(0)),(e=>{e.assign(o,i({start:a,end:o}))}))}));const c=ya.mul(o),d=ya.mul(a),h=c.xyz.div(c.w),p=d.xyz.div(d.w),m=p.xy.sub(h.xy).temp();e.assign(m.x,m.x.mul(u)),e.assign(m,m.normalize());const g=$i(hi());if(n){const t=a.xyz.sub(o.xyz).normalize(),n=ja.y.lessThan(.5).cond(o.xyz.cross(t).normalize(),a.xyz.cross(t).normalize());e.assign(n,ja.x.lessThan(0).cond(n.negate(),n));const i=t.dot(ui(0,0,1));s||(e.assign(o,o.sub(hi(t.mul(Jl).mul(.5),0))),e.assign(a,a.add(hi(t.mul(Jl).mul(.5),0))),e.assign(n,n.sub(ui(m.mul(i),0))),e.assign(n.z,n.z.add(.5))),e.if(ja.y.greaterThan(1).or(ja.y.lessThan(0)),(e=>{e.assign(n,n.add(ui(m.mul(2).mul(i),0)))})),e.assign(n,n.mul(Jl).mul(.5));const r=Ci(hi(),"worldPos");e.assign(r,ja.y.lessThan(.5).cond(o,a)),e.assign(r,r.add(hi(n,0))),e.assign(g,ya.mul(r));const u=$i(ui());e.assign(u,ja.y.lessThan(.5).cond(h,p)),e.assign(g.z,u.z.mul(g.w))}else{const t=Qi("vec2","offset");e.assign(t,ii(m.y,m.x.negate())),e.assign(m.x,m.x.div(u)),e.assign(t.x,t.x.div(u)),e.assign(t,ja.x.lessThan(0).cond(t.negate(),t)),e.if(ja.y.lessThan(0),(e=>{e.assign(t,t.sub(m))})).elseif(ja.y.greaterThan(1),(e=>{e.assign(t,t.add(m))})),e.assign(t,t.mul(Jl)),e.assign(t,t.div(Wc.w)),e.assign(g,ja.y.lessThan(.5).cond(c,d)),e.assign(t,t.mul(g.w)),e.assign(g,g.add(hi(t,0,0)))}return g}));const r=Zn((({p1:e,p2:t,p3:s,p4:n})=>{const i=e.sub(s),r=n.sub(s),o=t.sub(e),a=vo(i,r),u=vo(r,o),l=vo(i,o),c=vo(r,r),d=vo(o,o).mul(c).sub(u.mul(u)),h=a.mul(u).sub(l.mul(c)),p=Oo(h.div(d),0,1),m=Oo(a.add(u.mul(p)).div(c),0,1);return ii(p,m)}));this.colorNode=new qn((i=>{const o=Ci(ii(),"vUv");if(s){const e=this.offsetNode?ei(this.offsetNodeNode):Kl,t=this.dashScaleNode?ei(this.dashScaleNode):Yl,s=this.dashSizeNode?ei(this.dashSizeNode):Ql,n=this.dashSizeNode?ei(this.dashGapNode):Zl;i.assign(dr,s),i.assign(hr,n);const r=wi("instanceDistanceStart"),a=wi("instanceDistanceEnd"),u=ja.y.lessThan(.5).cond(t.mul(r),Yl.mul(a)),l=Ci(u.add(Kl)),c=e?l.add(e):l;i.add(o.y.lessThan(-1).or(o.y.greaterThan(1)).discard()),i.add(bo(c,dr.add(hr)).greaterThan(dr).discard())}const a=Qi("float","alpha");if(i.assign(a,1),n){let t=Ci(ui(),"worldStart"),n=Ci(ui(),"worldEnd");const o=Ci(hi(),"worldPos").xyz.normalize().mul(1e5),u=n.sub(t),l=r({p1:t,p2:n,p3:ui(0,0,0),p4:o}),c=t.add(u.mul(l.x)),d=o.mul(l.y),h=c.sub(d).length().div(Jl);if(!s)if(e){const e=h.fwidth();i.assign(a,Uo(e.negate().add(.5),e.add(.5),h).oneMinus())}else i.add(h.greaterThan(.5).discard())}else if(e){const e=o.x,t=o.y.greaterThan(0).cond(o.y.sub(1),o.y.add(1)),s=e.mul(e).add(t.mul(t)),n=Qi("float","dlen");i.assign(n,s.fwidth()),i.if(no(o.y).greaterThan(1),(e=>{e.assign(a,Uo(n.oneMinus(),n.add(1),s).oneMinus())}))}else i.if(no(o.y).greaterThan(1),(e=>{const t=o.x,s=o.y.greaterThan(0).cond(o.y.sub(1),o.y.add(1)),n=t.mul(t).add(s.mul(s));e.add(n.greaterThan(1).discard())}));let u;if(this.lineColorNode)u=this.lineColorNode;else if(t){const e=wi("instanceColorStart"),t=wi("instanceColorEnd");u=Ci(ja.y.lessThan(.5).cond(e,t))}else u=ta;return hi(u,a)})),this.needsUpdate=!0}get worldUnits(){return this.useWorldUnits}set worldUnits(e){this.useWorldUnits!==e&&(this.useWorldUnits=e,this.setupShaders())}get dashed(){return this.useDash}set dashed(e){this.useDash!==e&&(this.useDash=e,this.setupShaders())}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.setupShaders())}});const zd=new ee;Ju("MeshNormalNodeMaterial",class extends Zu{constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.colorSpace=!1,this.setDefaultValues(zd),this.setValues(e)}setupDiffuseColor({stack:e}){const t=this.opacityNode?ei(this.opacityNode):ia;e.assign(Zi,hi(Gl(Fa),t))}});const Vd=new te;class $d extends Zu{constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(Vd),this.setValues(e)}}Ju("MeshBasicNodeMaterial",$d);const Hd=Zn((({f0:e,f90:t,dotVH:s})=>{const n=s.mul(-5.55473).sub(6.98316).mul(s).exp2();return e.mul(n.oneMinus()).add(t.mul(n))})),Wd=Zn((e=>e.diffuseColor.mul(1/Math.PI))),qd=Zn((({dotNH:e})=>lr.mul(.5/Math.PI).add(1).mul(e.pow(lr)))),jd=Zn((({lightDirection:e})=>{const t=e.add(Za).normalize(),s=Fa.dot(t).clamp(),n=Za.dot(t).clamp(),i=Hd({f0:ur,f90:1,dotVH:n}),r=ei(.25),o=qd({dotNH:s});return i.mul(r).mul(o)}));class Xd extends zi{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s},n){const i=Fa.dot(e).clamp().mul(t);n.addAssign(s.directDiffuse,i.mul(Wd({diffuseColor:Zi.rgb}))),!0===this.specular&&n.addAssign(s.directSpecular,i.mul(jd({lightDirection:e})).mul(oa))}indirectDiffuse({irradiance:e,reflectedLight:t},s){s.addAssign(t.indirectDiffuse,e.mul(Wd({diffuseColor:Zi})))}}const Yd=new se;Ju("MeshLambertNodeMaterial",class extends Zu{constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Yd),this.setValues(e)}setupLightingModel(){return new Xd(!1)}});const Kd=new ne;Ju("MeshPhongNodeMaterial",class extends Zu{constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(Kd),this.setValues(e)}setupLightingModel(){return new Xd}setupVariants({stack:e}){const t=(this.shininessNode?ei(this.shininessNode):sa).max(1e-4);e.assign(lr,t);const s=this.specularNode||ra;e.assign(ur,s)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}});const Qd=Zn((()=>{const e=Ma.dFdx().abs().max(Ma.dFdy().abs());return e.x.max(e.y).max(e.z)})),Zd=Zn((e=>{const{roughness:t}=e,s=Qd();let n=t.max(.0525);return n=n.add(s),n=n.min(1),n})),Jd=Zn((e=>{const{alpha:t,dotNL:s,dotNV:n}=e,i=t.pow2(),r=s.mul(i.add(i.oneMinus().mul(n.pow2())).sqrt()),o=n.mul(i.add(i.oneMinus().mul(s.pow2())).sqrt());return yr(.5,r.add(o).max(Dr))})),eh=Zn((e=>{const{alpha:t,dotNH:s}=e,n=t.pow2(),i=s.pow2().mul(n.oneMinus()).oneMinus();return n.div(i.pow2()).mul(1/Math.PI)})),th=Zn((e=>{const{lightDirection:t,f0:s,f90:n,roughness:i,iridescenceFresnel:r}=e,o=e.normalView||Fa,a=i.pow2(),u=t.add(Za).normalize(),l=o.dot(t).clamp(),c=o.dot(Za).clamp(),d=o.dot(u).clamp(),h=Za.dot(u).clamp();let p=Hd({f0:s,f90:n,dotVH:h});r&&(p=rr.mix(p,r));const m=Jd({alpha:a,dotNL:l,dotNV:c}),g=eh({alpha:a,dotNH:d});return p.mul(m).mul(g)})),sh=Zn((e=>{const{roughness:t}=e,s=e.dotNV||Fa.dot(Za).clamp(),n=hi(-1,-.0275,-.572,.022),i=hi(1,.0425,1.04,-.04),r=t.mul(n).add(i),o=r.x.mul(r.x).min(s.mul(-9.28).exp2()).mul(r.x).add(r.y);return ii(-1.04,1.04).mul(o).add(r.zw)})),nh=Zn((e=>{const{dotNV:t,specularColor:s,specularF90:n,roughness:i}=e,r=sh({dotNV:t,roughness:i});return s.mul(r.x).add(n.mul(r.y))})),ih=Zn((({f:e,f90:t,dotVH:s})=>{const n=s.oneMinus().saturate(),i=n.mul(n),r=n.mul(i,i).clamp(0,.9999);return e.sub(ui(t).mul(r)).div(r.oneMinus())})),rh=Zn((({lightDirection:e})=>{const t=e.add(Za).normalize(),s=Fa.dot(e).clamp(),n=Fa.dot(Za).clamp(),i=Fa.dot(t).clamp(),r=((e,t)=>{const s=e.pow2(),n=ei(1).div(s),i=t.pow2().oneMinus().max(.0078125);return ei(2).add(n).mul(i.pow(n.mul(.5))).div(2*Math.PI)})(ir,i),o=((e,t)=>ei(1).div(ei(4).mul(t.add(e).sub(t.mul(e)))))(n,s);return nr.mul(r).mul(o)})),oh=fi(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),ah=(e,t)=>e.sub(t).div(e.add(t)).pow2(),uh=(e,t)=>{const s=e.mul(2*Math.PI*1e-9),n=ui(54856e-17,44201e-17,52481e-17),i=ui(1681e3,1795300,2208400),r=ui(43278e5,93046e5,66121e5),o=ei(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(s.mul(2239900).add(t.x).cos()).mul(s.pow2().mul(-45282e5).exp());let a=n.mul(r.mul(2*Math.PI).sqrt()).mul(i.mul(s).add(t).cos()).mul(s.pow2().negate().mul(r).exp());a=ui(a.x.add(o),a.y,a.z).div(1.0685e-7);return oh.mul(a)},lh=(e,t,s,n,i)=>{const r=Mo(e,t,Uo(0,.03,n)),o=e.div(r).pow2().mul(ei(1).sub(s.pow2())),a=ei(1).sub(o).sqrt(),u=ah(r,e),l=Hd({f0:u,f90:1,dotVH:s}),c=l.oneMinus(),d=r.lessThan(e).cond(Math.PI,0),h=ei(Math.PI).sub(d),p=(e=>{const t=e.sqrt();return ui(1).add(t).div(ui(1).sub(t))})(i.clamp(0,.9999)),m=ah(p,r.vec3()),g=Hd({f0:m,f90:1,dotVH:a}),f=ui(p.x.lessThan(r).cond(Math.PI,0),p.y.lessThan(r).cond(Math.PI,0),p.z.lessThan(r).cond(Math.PI,0)),x=r.mul(n,a,2),b=ui(h).add(f),T=l.mul(g).clamp(1e-5,.9999),_=T.sqrt(),y=c.pow2().mul(g).div(ui(1).sub(T));let N=l.add(y),v=y.sub(c);for(let e=1;e<=2;++e){v=v.mul(_);const t=uh(ei(e).mul(x),ei(e).mul(b)).mul(2);N=N.add(v.mul(t))}return N.max(ui(0))},ch=ui(.04),dh=ui(1);class hh extends zi{constructor(e=!1,t=!1,s=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.clearcoatRadiance=null,this.clearcoatSpecular=null,this.sheenSpecular=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(){if(!0===this.clearcoat&&(this.clearcoatRadiance=ui().temp("clearcoatRadiance"),this.clearcoatSpecular=ui().temp("clearcoatSpecular")),!0===this.sheen&&(this.sheenSpecular=ui().temp("sheenSpecular")),!0===this.iridescence){const e=Fa.dot(Za).clamp();this.iridescenceFresnel=lh(ei(1),or,e,ar,ur),this.iridescenceF0=ih({f:this.iridescenceFresnel,f90:1,dotVH:e})}}computeMultiscattering(e,t,s,n=ei(1)){const i=sh({roughness:Ji}),r=(this.iridescenceF0?rr.mix(ur,this.iridescenceF0):ur).mul(i.x).add(n.mul(i.y)),o=i.x.add(i.y).oneMinus(),a=ur.add(ur.oneMinus().mul(.047619)),u=r.mul(a).div(o.mul(a).oneMinus());e.addAssign(t,r),e.addAssign(s,u.mul(o))}direct({lightDirection:e,lightColor:t,reflectedLight:s},n){const i=Fa.dot(e).clamp().mul(t);if(!0===this.sheen&&n.addAssign(this.sheenSpecular,i.mul(rh({lightDirection:e}))),!0===this.clearcoat){const s=La.dot(e).clamp().mul(t);n.addAssign(this.clearcoatSpecular,s.mul(th({lightDirection:e,f0:ch,f90:dh,roughness:sr,normalView:La})))}n.addAssign(s.directDiffuse,i.mul(Wd({diffuseColor:Zi.rgb}))),n.addAssign(s.directSpecular,i.mul(th({lightDirection:e,f0:ur,f90:1,roughness:Ji,iridescence:this.iridescence,iridescenceFresnel:this.iridescenceFresnel})))}indirectDiffuse({irradiance:e,reflectedLight:t},s){s.addAssign(t.indirectDiffuse,e.mul(Wd({diffuseColor:Zi})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:s},n){if(!0===this.sheen&&n.addAssign(this.sheenSpecular,t.mul(nr,((e,t,s)=>{const n=e.dot(t).saturate(),i=s.pow2(),r=xl(s.lessThan(.25),ei(-339.2).mul(i).add(ei(161.4).mul(s)).sub(25.9),ei(-8.48).mul(i).add(ei(14.3).mul(s)).sub(9.95)),o=xl(s.lessThan(.25),ei(44).mul(i).sub(ei(23.7).mul(s)).add(3.26),ei(1.97).mul(i).sub(ei(3.27).mul(s)).add(.72));return xl(s.lessThan(.25),0,ei(.1).mul(s).sub(.025)).add(r.mul(n).add(o).exp()).mul(1/Math.PI).saturate()})(Fa,Za,ir))),!0===this.clearcoat){const e=La.dot(Za).clamp(),t=nh({dotNV:e,specularColor:ch,specularF90:dh,roughness:sr});n.addAssign(this.clearcoatSpecular,this.clearcoatRadiance.mul(t))}const i=ui().temp("singleScattering"),r=ui().temp("multiScattering"),o=t.mul(1/Math.PI);this.computeMultiscattering(n,i,r);const a=i.add(r),u=Zi.mul(a.r.max(a.g).max(a.b).oneMinus());n.addAssign(s.indirectSpecular,e.mul(i)),n.addAssign(s.indirectSpecular,r.mul(o)),n.addAssign(s.indirectDiffuse,u.mul(o))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t},s){const n=Fa.dot(Za).clamp().add(e),i=Ji.mul(-16).oneMinus().negate().exp2(),r=e.sub(n.pow(i).oneMinus()).clamp();s.mulAssign(t.indirectDiffuse,e),s.mulAssign(t.indirectSpecular,r)}finish(e,t){const{outgoingLight:s}=e;if(!0===this.clearcoat){const e=La.dot(Za).clamp(),n=Hd({dotVH:e,f0:ch,f90:dh}),i=s.mul(tr.mul(n).oneMinus()).add(this.clearcoatSpecular.mul(tr));t.assign(s,i)}if(!0===this.sheen){const e=nr.r.max(nr.g).max(nr.b).mul(.157).oneMinus(),n=s.mul(e).add(this.sheenSpecular);t.assign(s,n)}}}const ph=new ie;class mh extends Zu{constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(ph),this.setValues(e)}setupLightingModel(){return new hh}setupVariants({stack:e}){const t=this.metalnessNode?ei(this.metalnessNode):ua;e.assign(er,t);let s=this.roughnessNode?ei(this.roughnessNode):aa;s=Zd({roughness:s}),e.assign(Ji,s);const n=Mo(ui(.04),Zi.rgb,t);e.assign(ur,n),e.assign(Zi,hi(Zi.rgb.mul(t.oneMinus()),Zi.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}Ju("MeshStandardNodeMaterial",mh);const gh=new re;Ju("MeshPhysicalNodeMaterial",class extends mh{constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.setDefaultValues(gh),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}setupLightingModel(){return new hh(this.useClearcoat,this.useSheen,this.useIridescence)}setupVariants(e){super.setupVariants(e);const{stack:t}=e;if(this.useClearcoat){const e=this.clearcoatNode?ei(this.clearcoatNode):la,s=this.clearcoatRoughnessNode?ei(this.clearcoatRoughnessNode):ca;t.assign(tr,e),t.assign(sr,s)}if(this.useSheen){const e=this.sheenNode?ui(this.sheenNode):ha,s=this.sheenRoughnessNode?ei(this.sheenRoughnessNode):pa;t.assign(nr,e),t.assign(ir,s)}if(this.useIridescence){const e=this.iridescenceNode?ei(this.iridescenceNode):ma,s=this.iridescenceIORNode?ei(this.iridescenceIORNode):ga,n=this.iridescenceThicknessNode?ei(this.iridescenceThicknessNode):fa;t.assign(rr,e),t.assign(or,s),t.assign(ar,n)}}setupNormal(e){super.setupNormal(e);const t=this.clearcoatNormalNode?ui(this.clearcoatNormalNode):hu;e.stack.assign(La,t)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,super.copy(e)}});const fh=new oe;Ju("PointsNodeMaterial",class extends Zu{constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.normals=!1,this.transparent=!0,this.colorNode=null,this.opacityNode=null,this.alphaTestNode=null,this.lightNode=null,this.sizeNode=null,this.positionNode=null,this.setDefaultValues(fh),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}});const xh=new ae;Ju("SpriteNodeMaterial",class extends Zu{constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this.normals=!1,this.colorNode=null,this.opacityNode=null,this.alphaTestNode=null,this.lightNode=null,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(xh),this.setValues(e)}setupPosition({object:e,context:t}){const{positionNode:s,rotationNode:n,scaleNode:i}=this,r=Xa;let o=Ra.mul(ui(s||0)),a=ii(Ea[0].xyz.length(),Ea[1].xyz.length());null!==i&&(a=a.mul(i));let u=r.xy;e.center&&!0===e.center.isVector2&&(u=u.sub(Ai(e.center).sub(.5))),u=u.mul(a);const l=ei(n||da),c=l.cos(),d=l.sin(),h=ii(ii(c,d.negate()).dot(u),ii(d,c).dot(u));o=hi(o.xy.add(h),o.zw);const p=ya.mul(o);return t.vertex=r,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}});const bh=ue.createMaterialFromType;ue.createMaterialFromType=function(e){const t=el(e);return void 0!==t?t:bh.call(this,e)};class Th{parseFunction(){}}class _h{constructor(e,t,s="",n=""){this.type=e,this.inputs=t,this.name=s,this.presicion=n}getCode(){}}_h.isNodeFunction=!0;const yh=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,Nh=/[a-z_0-9]+/gi,vh="#pragma main";class Sh extends _h{constructor(e){const{type:t,inputs:s,name:n,presicion:i,inputsCode:r,blockCode:o,headerCode:a}=(e=>{const t=(e=e.trim()).indexOf(vh),s=-1!==t?e.slice(t+12):e,n=s.match(yh);if(null!==n&&5===n.length){const i=n[4],r=[];let o=null;for(;null!==(o=Nh.exec(i));)r.push(o);const a=[];let u=0;for(;u<r.length;){const e="const"===r[u][0];!0===e&&u++;let t=r[u][0];"in"===t||"out"===t||"inout"===t?u++:t="";const s=r[u++][0];let n=Number.parseInt(r[u][0]);!1===Number.isNaN(n)?u++:n=null;const i=r[u++][0];a.push(new Cl(s,i,n,t,e))}const l=s.substring(n[0].length),c=void 0!==n[3]?n[3]:"";return{type:n[2],inputs:a,name:c,presicion:void 0!==n[1]?n[1]:"",inputsCode:i,blockCode:l,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,s,n,i),this.inputsCode=r,this.blockCode=o,this.headerCode=a}getCode(e=this.name){let t;const s=this.blockCode;if(""!==s){const{type:n,inputsCode:i,headerCode:r,presicion:o}=this;let a=`${n} ${e} ( ${i.trim()} )`;""!==o&&(a=`${o} ${a}`),t=r+a+s}else t="";return t}}class Ah extends Th{parseFunction(e){return new Sh(e)}}const Rh=[ud('float mx_select(bool b, float t, float f)\n{\n    return b ? t : f;\n}\n\nfloat mx_negate_if(float val, bool b)\n{\n    return b ? -val : val;\n}\n\nint mx_floor(float x)\n{\n    return int(floor(x));\n}\n\n// return mx_floor as well as the fractional remainder\nfloat mx_floorfrac(float x, out int i)\n{\n    i = mx_floor(x);\n    return x - float(i);\n}\n\nfloat mx_bilerp(float v0, float v1, float v2, float v3, float s, float t)\n{\n    float s1 = 1.0 - s;\n    return (1.0 - t) * (v0*s1 + v1*s) + t * (v2*s1 + v3*s);\n}\nvec3 mx_bilerp(vec3 v0, vec3 v1, vec3 v2, vec3 v3, float s, float t)\n{\n    float s1 = 1.0 - s;\n    return (1.0 - t) * (v0*s1 + v1*s) + t * (v2*s1 + v3*s);\n}\nfloat mx_trilerp(float v0, float v1, float v2, float v3, float v4, float v5, float v6, float v7, float s, float t, float r)\n{\n    float s1 = 1.0 - s;\n    float t1 = 1.0 - t;\n    float r1 = 1.0 - r;\n    return (r1*(t1*(v0*s1 + v1*s) + t*(v2*s1 + v3*s)) +\n            r*(t1*(v4*s1 + v5*s) + t*(v6*s1 + v7*s)));\n}\nvec3 mx_trilerp(vec3 v0, vec3 v1, vec3 v2, vec3 v3, vec3 v4, vec3 v5, vec3 v6, vec3 v7, float s, float t, float r)\n{\n    float s1 = 1.0 - s;\n    float t1 = 1.0 - t;\n    float r1 = 1.0 - r;\n    return (r1*(t1*(v0*s1 + v1*s) + t*(v2*s1 + v3*s)) +\n            r*(t1*(v4*s1 + v5*s) + t*(v6*s1 + v7*s)));\n}\n\n// 2 and 3 dimensional gradient functions - perform a dot product against a\n// randomly chosen vector. Note that the gradient vector is not normalized, but\n// this only affects the overal "scale" of the result, so we simply account for\n// the scale by multiplying in the corresponding "perlin" function.\nfloat mx_gradient_float(uint hash, float x, float y)\n{\n    // 8 possible directions (+-1,+-2) and (+-2,+-1)\n    uint h = hash & 7u;\n    float u = mx_select(h<4u, x, y);\n    float v = 2.0 * mx_select(h<4u, y, x);\n    // compute the dot product with (x,y).\n    return mx_negate_if(u, bool(h&1u)) + mx_negate_if(v, bool(h&2u));\n}\nfloat mx_gradient_float(uint hash, float x, float y, float z)\n{\n    // use vectors pointing to the edges of the cube\n    uint h = hash & 15u;\n    float u = mx_select(h<8u, x, y);\n    float v = mx_select(h<4u, y, mx_select((h==12u)||(h==14u), x, z));\n    return mx_negate_if(u, bool(h&1u)) + mx_negate_if(v, bool(h&2u));\n}\nvec3 mx_gradient_vec3(uvec3 hash, float x, float y)\n{\n    return vec3(mx_gradient_float(hash.x, x, y), mx_gradient_float(hash.y, x, y), mx_gradient_float(hash.z, x, y));\n}\nvec3 mx_gradient_vec3(uvec3 hash, float x, float y, float z)\n{\n    return vec3(mx_gradient_float(hash.x, x, y, z), mx_gradient_float(hash.y, x, y, z), mx_gradient_float(hash.z, x, y, z));\n}\n// Scaling factors to normalize the result of gradients above.\n// These factors were experimentally calculated to be:\n//    2D:   0.6616\n//    3D:   0.9820\nfloat mx_gradient_scale2d(float v) { return 0.6616 * v; }\nfloat mx_gradient_scale3d(float v) { return 0.9820 * v; }\nvec3 mx_gradient_scale2d(vec3 v) { return 0.6616 * v; }\nvec3 mx_gradient_scale3d(vec3 v) { return 0.9820 * v; }\n\n/// Bitwise circular rotation left by k bits (for 32 bit unsigned integers)\nuint mx_rotl32(uint x, int k)\n{\n    return (x<<k) | (x>>(32-k));\n}\n\nvoid mx_bjmix(inout uint a, inout uint b, inout uint c)\n{\n    a -= c; a ^= mx_rotl32(c, 4); c += b;\n    b -= a; b ^= mx_rotl32(a, 6); a += c;\n    c -= b; c ^= mx_rotl32(b, 8); b += a;\n    a -= c; a ^= mx_rotl32(c,16); c += b;\n    b -= a; b ^= mx_rotl32(a,19); a += c;\n    c -= b; c ^= mx_rotl32(b, 4); b += a;\n}\n\n// Mix up and combine the bits of a, b, and c (doesn\'t change them, but\n// returns a hash of those three original values).\nuint mx_bjfinal(uint a, uint b, uint c)\n{\n    c ^= b; c -= mx_rotl32(b,14);\n    a ^= c; a -= mx_rotl32(c,11);\n    b ^= a; b -= mx_rotl32(a,25);\n    c ^= b; c -= mx_rotl32(b,16);\n    a ^= c; a -= mx_rotl32(c,4);\n    b ^= a; b -= mx_rotl32(a,14);\n    c ^= b; c -= mx_rotl32(b,24);\n    return c;\n}\n\n// Convert a 32 bit integer into a floating point number in [0,1]\nfloat mx_bits_to_01(uint bits)\n{\n    return float(bits) / float(uint(0xffffffff));\n}\n\nfloat mx_fade(float t)\n{\n   return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n}\n\nuint mx_hash_int(int x)\n{\n    uint len = 1u;\n    uint seed = uint(0xdeadbeef) + (len << 2u) + 13u;\n    return mx_bjfinal(seed+uint(x), seed, seed);\n}\n\nuint mx_hash_int(int x, int y)\n{\n    uint len = 2u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z)\n{\n    uint len = 3u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z, int xx)\n{\n    uint len = 4u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    mx_bjmix(a, b, c);\n    a += uint(xx);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z, int xx, int yy)\n{\n    uint len = 5u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    mx_bjmix(a, b, c);\n    a += uint(xx);\n    b += uint(yy);\n    return mx_bjfinal(a, b, c);\n}\n\nuvec3 mx_hash_vec3(int x, int y)\n{\n    uint h = mx_hash_int(x, y);\n    // we only need the low-order bits to be random, so split out\n    // the 32 bit result into 3 parts for each channel\n    uvec3 result;\n    result.x = (h      ) & 0xFFu;\n    result.y = (h >> 8 ) & 0xFFu;\n    result.z = (h >> 16) & 0xFFu;\n    return result;\n}\n\nuvec3 mx_hash_vec3(int x, int y, int z)\n{\n    uint h = mx_hash_int(x, y, z);\n    // we only need the low-order bits to be random, so split out\n    // the 32 bit result into 3 parts for each channel\n    uvec3 result;\n    result.x = (h      ) & 0xFFu;\n    result.y = (h >> 8 ) & 0xFFu;\n    result.z = (h >> 16) & 0xFFu;\n    return result;\n}\n\nfloat mx_perlin_noise_float(vec2 p)\n{\n    int X, Y;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float result = mx_bilerp(\n        mx_gradient_float(mx_hash_int(X  , Y  ), fx    , fy     ),\n        mx_gradient_float(mx_hash_int(X+1, Y  ), fx-1.0, fy     ),\n        mx_gradient_float(mx_hash_int(X  , Y+1), fx    , fy-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y+1), fx-1.0, fy-1.0),\n        u, v);\n    return mx_gradient_scale2d(result);\n}\n\nfloat mx_perlin_noise_float(vec3 p)\n{\n    int X, Y, Z;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float fz = mx_floorfrac(p.z, Z);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float w = mx_fade(fz);\n    float result = mx_trilerp(\n        mx_gradient_float(mx_hash_int(X  , Y  , Z  ), fx    , fy    , fz     ),\n        mx_gradient_float(mx_hash_int(X+1, Y  , Z  ), fx-1.0, fy    , fz     ),\n        mx_gradient_float(mx_hash_int(X  , Y+1, Z  ), fx    , fy-1.0, fz     ),\n        mx_gradient_float(mx_hash_int(X+1, Y+1, Z  ), fx-1.0, fy-1.0, fz     ),\n        mx_gradient_float(mx_hash_int(X  , Y  , Z+1), fx    , fy    , fz-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y  , Z+1), fx-1.0, fy    , fz-1.0),\n        mx_gradient_float(mx_hash_int(X  , Y+1, Z+1), fx    , fy-1.0, fz-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y+1, Z+1), fx-1.0, fy-1.0, fz-1.0),\n        u, v, w);\n    return mx_gradient_scale3d(result);\n}\n\nvec3 mx_perlin_noise_vec3(vec2 p)\n{\n    int X, Y;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    vec3 result = mx_bilerp(\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  ), fx    , fy     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  ), fx-1.0, fy     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1), fx    , fy-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1), fx-1.0, fy-1.0),\n        u, v);\n    return mx_gradient_scale2d(result);\n}\n\nvec3 mx_perlin_noise_vec3(vec3 p)\n{\n    int X, Y, Z;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float fz = mx_floorfrac(p.z, Z);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float w = mx_fade(fz);\n    vec3 result = mx_trilerp(\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  , Z  ), fx    , fy    , fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  , Z  ), fx-1.0, fy    , fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1, Z  ), fx    , fy-1.0, fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1, Z  ), fx-1.0, fy-1.0, fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  , Z+1), fx    , fy    , fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  , Z+1), fx-1.0, fy    , fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1, Z+1), fx    , fy-1.0, fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1, Z+1), fx-1.0, fy-1.0, fz-1.0),\n        u, v, w);\n    return mx_gradient_scale3d(result);\n}\n\nfloat mx_cell_noise_float(float p)\n{\n    int ix = mx_floor(p);\n    return mx_bits_to_01(mx_hash_int(ix));\n}\n\nfloat mx_cell_noise_float(vec2 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    return mx_bits_to_01(mx_hash_int(ix, iy));\n}\n\nfloat mx_cell_noise_float(vec3 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    return mx_bits_to_01(mx_hash_int(ix, iy, iz));\n}\n\nfloat mx_cell_noise_float(vec4 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    int iw = mx_floor(p.w);\n    return mx_bits_to_01(mx_hash_int(ix, iy, iz, iw));\n}\n\nvec3 mx_cell_noise_vec3(float p)\n{\n    int ix = mx_floor(p);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, 0)),\n            mx_bits_to_01(mx_hash_int(ix, 1)),\n            mx_bits_to_01(mx_hash_int(ix, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec2 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec3 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec4 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    int iw = mx_floor(p.w);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 2))\n    );\n}\n\nfloat mx_fractal_noise_float(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    float result = 0.0;\n    float amplitude = 1.0;\n    for (int i = 0;  i < octaves; ++i)\n    {\n        result += amplitude * mx_perlin_noise_float(p);\n        amplitude *= diminish;\n        p *= lacunarity;\n    }\n    return result;\n}\n\nvec3 mx_fractal_noise_vec3(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    vec3 result = vec3(0.0);\n    float amplitude = 1.0;\n    for (int i = 0;  i < octaves; ++i)\n    {\n        result += amplitude * mx_perlin_noise_vec3(p);\n        amplitude *= diminish;\n        p *= lacunarity;\n    }\n    return result;\n}\n\nvec2 mx_fractal_noise_vec2(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    return vec2(mx_fractal_noise_float(p, octaves, lacunarity, diminish),\n                mx_fractal_noise_float(p+vec3(19, 193, 17), octaves, lacunarity, diminish));\n}\n\nvec4 mx_fractal_noise_vec4(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    vec3  c = mx_fractal_noise_vec3(p, octaves, lacunarity, diminish);\n    float f = mx_fractal_noise_float(p+vec3(19, 193, 17), octaves, lacunarity, diminish);\n    return vec4(c, f);\n}\n\nfloat mx_worley_distance(vec2 p, int x, int y, int xoff, int yoff, float jitter, int metric)\n{\n    vec3  tmp = mx_cell_noise_vec3(vec2(x+xoff, y+yoff));\n    vec2  off = vec2(tmp.x, tmp.y);\n\n    off -= 0.5f;\n    off *= jitter;\n    off += 0.5f;\n\n    vec2 cellpos = vec2(float(x), float(y)) + off;\n    vec2 diff = cellpos - p;\n    if (metric == 2)\n        return abs(diff.x) + abs(diff.y);       // Manhattan distance\n    if (metric == 3)\n        return max(abs(diff.x), abs(diff.y));   // Chebyshev distance\n    // Either Euclidian or Distance^2\n    return dot(diff, diff);\n}\n\nfloat mx_worley_distance(vec3 p, int x, int y, int z, int xoff, int yoff, int zoff, float jitter, int metric)\n{\n    vec3  off = mx_cell_noise_vec3(vec3(x+xoff, y+yoff, z+zoff));\n\n    off -= 0.5f;\n    off *= jitter;\n    off += 0.5f;\n\n    vec3 cellpos = vec3(float(x), float(y), float(z)) + off;\n    vec3 diff = cellpos - p;\n    if (metric == 2)\n        return abs(diff.x) + abs(diff.y) + abs(diff.z); // Manhattan distance\n    if (metric == 3)\n        return max(max(abs(diff.x), abs(diff.y)), abs(diff.z)); // Chebyshev distance\n    // Either Euclidian or Distance^2\n    return dot(diff, diff);\n}\n\nfloat mx_worley_noise_float(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    float sqdist = 1e6f;        // Some big number for jitter > 1 (not all GPUs may be IEEE)\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            sqdist = min(sqdist, dist);\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec2 mx_worley_noise_vec2(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    vec2 sqdist = vec2(1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            if (dist < sqdist.x)\n            {\n                sqdist.y = sqdist.x;\n                sqdist.x = dist;\n            }\n            else if (dist < sqdist.y)\n            {\n                sqdist.y = dist;\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec3 mx_worley_noise_vec3(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    vec3 sqdist = vec3(1e6f, 1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            if (dist < sqdist.x)\n            {\n                sqdist.z = sqdist.y;\n                sqdist.y = sqdist.x;\n                sqdist.x = dist;\n            }\n            else if (dist < sqdist.y)\n            {\n                sqdist.z = sqdist.y;\n                sqdist.y = dist;\n            }\n            else if (dist < sqdist.z)\n            {\n                sqdist.z = dist;\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nfloat mx_worley_noise_float(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    float sqdist = 1e6f;\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                sqdist = min(sqdist, dist);\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec2 mx_worley_noise_vec2(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    vec2 sqdist = vec2(1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                if (dist < sqdist.x)\n                {\n                    sqdist.y = sqdist.x;\n                    sqdist.x = dist;\n                }\n                else if (dist < sqdist.y)\n                {\n                    sqdist.y = dist;\n                }\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec3 mx_worley_noise_vec3(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    vec3 sqdist = vec3(1e6f, 1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                if (dist < sqdist.x)\n                {\n                    sqdist.z = sqdist.y;\n                    sqdist.y = sqdist.x;\n                    sqdist.x = dist;\n                }\n                else if (dist < sqdist.y)\n                {\n                    sqdist.z = sqdist.y;\n                    sqdist.y = dist;\n                }\n                else if (dist < sqdist.z)\n                {\n                    sqdist.z = dist;\n                }\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}')];dd("float mx_perlin_noise_float( any p )",Rh),dd("vec2 mx_perlin_noise_vec2( any p )",Rh),dd("vec3 mx_perlin_noise_vec3( any p )",Rh),dd("float mx_cell_noise_float( vec3 p )",Rh),dd("float mx_worley_noise_float( any p, float jitter, int metric )",Rh),dd("float mx_worley_noise_vec2( any p, float jitter, int metric )",Rh),dd("float mx_worley_noise_vec3( any p, float jitter, int metric )",Rh),dd("float mx_fractal_noise_float( vec3 p, int octaves, float lacunarity, float diminish )",Rh),dd("float mx_fractal_noise_vec2( vec3 p, int octaves, float lacunarity, float diminish )",Rh),dd("float mx_fractal_noise_vec3( vec3 p, int octaves, float lacunarity, float diminish )",Rh),dd("float mx_fractal_noise_vec4( vec3 p, int octaves, float lacunarity, float diminish )",Rh),dd("vec3 mx_hsvtorgb(vec3 hsv)\n{\n    // Reference for this technique: Foley & van Dam\n    float h = hsv.x; float s = hsv.y; float v = hsv.z;\n    if (s < 0.0001f) {\n      return vec3 (v, v, v);\n    } else {\n        h = 6.0f * (h - floor(h));  // expand to [0..6)\n        int hi = int(trunc(h));\n        float f = h - float(hi);\n        float p = v * (1.0f-s);\n        float q = v * (1.0f-s*f);\n        float t = v * (1.0f-s*(1.0f-f));\n        if (hi == 0)\n            return vec3 (v, t, p);\n        else if (hi == 1)\n            return vec3 (q, v, p);\n        else if (hi == 2)\n            return vec3 (p, v, t);\n        else if (hi == 3)\n            return vec3 (p, q, v);\n        else if (hi == 4)\n            return vec3 (t, p, v);\n        return vec3 (v, p, q);\n    }\n}"),dd("vec3 mx_rgbtohsv(vec3 c)\n{\n    // See Foley & van Dam\n    float r = c.x; float g = c.y; float b = c.z;\n    float mincomp = min (r, min(g, b));\n    float maxcomp = max (r, max(g, b));\n    float delta = maxcomp - mincomp;  // chroma\n    float h, s, v;\n    v = maxcomp;\n    if (maxcomp > 0.0f)\n        s = delta / maxcomp;\n    else s = 0.0f;\n    if (s <= 0.0f)\n        h = 0.0f;\n    else {\n        if      (r >= maxcomp) h = (g-b) / delta;\n        else if (g >= maxcomp) h = 2.0f + (b-r) / delta;\n        else                   h = 4.0f + (r-g) / delta;\n        h *= (1.0f/6.0f);\n        if (h < 0.0f)\n            h += 1.0f;\n    }\n    return vec3(h, s, v);\n}");function Ch(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Eh(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}dd("vec3 mx_srgb_texture_to_lin_rec709( vec3 color )",[ud("#define M_AP1_TO_REC709 mat3(1.705079555511475, -0.1297005265951157, -0.02416634373366833, -0.6242334842681885, 1.138468623161316, -0.1246141716837883, -0.0808461606502533, -0.008768022060394287, 1.148780584335327)\n\nvec3 mx_srgb_texture_to_lin_rec709(vec3 color)\n{\n    bvec3 isAbove = greaterThan(color, vec3(0.04045));\n    vec3 linSeg = color / 12.92;\n    vec3 powSeg = pow(max(color + vec3(0.055), vec3(0.0)) / 1.055, vec3(2.4));\n    return mix(linSeg, powSeg, isAbove);\n}")]);class wh{constructor(){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparent=[],this.lightsNode=new Iu([]),this.lightsArray=[],this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparent.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,n,i,r){let o=this.renderItems[this.renderItemsIndex];return void 0===o?(o={id:e.id,object:e,geometry:t,material:s,groupOrder:n,renderOrder:e.renderOrder,z:i,group:r},this.renderItems[this.renderItemsIndex]=o):(o.id=e.id,o.object=e,o.geometry=t,o.material=s,o.groupOrder=n,o.renderOrder=e.renderOrder,o.z=i,o.group=r),this.renderItemsIndex++,o}push(e,t,s,n,i,r){const o=this.getNextRenderItem(e,t,s,n,i,r);!0===e.occlusionTest&&this.occlusionQueryCount++,(!0===s.transparent?this.transparent:this.opaque).push(o)}unshift(e,t,s,n,i,r){const o=this.getNextRenderItem(e,t,s,n,i,r);(!0===s.transparent?this.transparent:this.opaque).unshift(o)}pushLight(e){this.lightsArray.push(e)}getLightsNode(){return this.lightsNode.fromLights(this.lightsArray)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||Ch),this.transparent.length>1&&this.transparent.sort(t||Eh)}finish(){this.lightsNode.fromLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null}}}class Mh{constructor(){this.lists=new Es}get(e,t){const s=this.lists,n=[e,t];let i=s.get(n);return void 0===i&&(i=new wh,s.set(n,i)),i}dispose(){this.lists=new Es}}let Oh=0;class Bh{constructor(){this.id=Oh++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!0,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new o,this.scissor=!1,this.scissorValue=new o,this.texture=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0}}class Uh{constructor(){this.chainMaps={}}get(e,t,s=null){const n=[e,t];let i;if(null===s)i="default";else{let e,t;s.isWebGLMultipleRenderTargets?(e=s.texture[0].format,t=s.texture.length):(e=s.texture.format,t=1),i=`${t}:${e}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const r=this.getChainMap(i);let o=r.get(n);return void 0===o&&(o=new Bh,r.set(n,o)),null!==s&&(o.sampleCount=0===s.samples?1:s.samples),o}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Es)}dispose(){this.chainMaps={}}}const Fh=new r;class Ih extends Bs{constructor(e,t){super(),this.backend=e,this.info=t}updateRenderTarget(e,t=0){const s=this.get(e),n=0===e.samples?1:e.samples,i=s.depthTextureMips||(s.depthTextureMips={});let r,o;e.isWebGLMultipleRenderTargets?(o=e.texture,r=e.texture[0]):(o=[e.texture],r=e.texture);const a=this.getSize(r),u=a.width>>t,l=a.height>>t;let c=e.depthTexture||i[t],d=!1;void 0===c&&(c=new T,c.format=le,c.type=ce,c.image.width=u,c.image.height=l,i[t]=c),s.width===a.width&&a.height===s.height||(d=!0,c.needsUpdate=!0,c.image.width=u,c.image.height=l),s.width=a.width,s.height=a.height,s.textures=o,s.depthTexture=c,s.sampleCount!==n&&(d=!0,c.needsUpdate=!0,s.sampleCount=n);const h={sampleCount:n};for(let e=0;e<o.length;e++){const t=o[e];d&&(t.needsUpdate=!0),this.updateTexture(t,h)}if(this.updateTexture(c,h),!0!==s.initialized){s.initialized=!0;const t=()=>{if(e.removeEventListener("dispose",t),void 0!==o)for(let e=0;e<o.length;e++)this._destroyTexture(o[e]);else this._destroyTexture(r);this._destroyTexture(c)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const s=this.get(e);if(!0===s.initialized&&s.version===e.version)return;const n=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,i=this.backend;n&&!0===s.initialized&&(i.destroySampler(e),i.destroyTexture(e));const{width:r,height:o,depth:a}=this.getSize(e);if(t.width=r,t.height=o,t.depth=a,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,r,o):1,n||!0===e.isStorageTexture)i.createSampler(e),i.createTexture(e,t);else{if(!0!==s.initialized&&i.createSampler(e),e.version>0){const n=e.image;if(void 0===n);else if(!1===n.complete);else{if(e.images){const s=[];for(const t of e.images)s.push(this._getUploadImage(t));t.images=s}else t.image=this._getUploadImage(n);void 0!==s.isDefaultTexture&&!0!==s.isDefaultTexture||(i.createTexture(e,t),s.isDefaultTexture=!1),i.updateTexture(e,t),t.needsMipmaps&&i.generateMipmaps(e)}}else i.createDefaultTexture(e),s.isDefaultTexture=!0}if(!0!==s.initialized){s.initialized=!0,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",t)}s.version=e.version}getSize(e,t=Fh){let s=e.images?e.images[0]:e.image;return s?(void 0!==s.image&&(s=s.image),t.width=s.width,t.height=s.height,t.depth=e.isCubeTexture?6:s.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let n;return n=e.isCompressedTexture?e.mipmaps.length:Math.floor(Math.log2(Math.max(t,s)))+1,n}needsMipmaps(e){return!!this.isEnvironmentTexture(e)||!0!==e.isCompressedTexture&&e.minFilter!==_&&e.minFilter!==B}isEnvironmentTexture(e){const t=e.mapping;return t===de||t===he||t===pe||t===me}_getUploadImage(e){return this._isHTMLImage(e)?this._imageToCanvas(e):e}_imageToCanvas(e){const{width:t,height:s}=e,n=new OffscreenCanvas(t,s);return n.getContext("2d").drawImage(e,0,0,t,s),n}_isHTMLImage(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}let Lh;const Ph=new n;class Dh extends Bs{constructor(e,t){super(),this.renderer=e,this.nodes=t,this.backgroundMesh=null,this.backgroundMeshNode=null}update(e,t,s){const n=this.renderer,i=this.nodes.getBackgroundNode(e)||e.background;let r=!1;if(null===i)Ph.copyLinearToSRGB(n._clearColor),Lh=n._clearAlpha;else if(!0===i.isColor)Ph.copyLinearToSRGB(i),Lh=1,r=!0;else if(!0===i.isNode){const s=this.get(e),r=i;Ph.copy(n._clearColor),Lh=n._clearAlpha;let o=this.backgroundMesh;if(null===o){this.backgroundMeshNode=Pi(r,{getUVNode:()=>Ua,getSamplerLevelNode:()=>pc}).mul(mc);let e=mu();e=e.setZ(e.w);const t=new Zu;t.outputNode=this.backgroundMeshNode,t.side=C,t.depthTest=!1,t.depthWrite=!1,t.fog=!1,t.vertexNode=e,this.backgroundMesh=o=new w(new ge(1,32,32),t),o.frustumCulled=!1,o.onBeforeRender=function(e,t,s){this.matrixWorld.copyPosition(s.matrixWorld)}}const a=r.getCacheKey();s.backgroundCacheKey!==a&&(this.backgroundMeshNode.node=r,o.material.needsUpdate=!0,s.backgroundCacheKey=a),t.unshift(o,o.geometry,o.material,0,0,null)}if(!0===n.autoClear||!0===r){Ph.multiplyScalar(Lh);const e=s.clearColorValue;e.r=Ph.r,e.g=Ph.g,e.b=Ph.b,e.a=Lh,s.depthClearValue=n._clearDepth,s.stencilClearValue=n._clearStencil,s.clearColor=!0===n.autoClearColor,s.clearDepth=!0===n.autoClearDepth,s.clearStencil=!0===n.autoClearStencil}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}class Gh{constructor(e,t,s,n,i,r,o){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.nodeAttributes=n,this.bindings=i,this.updateNodes=r,this.updateBeforeNodes=o,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)e.push(t.clone());return e}}class kh extends Bs{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new Rl,this.nodeBuilderCache=new Map}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const{nodeBuilderCache:n}=this,i=this.getForRenderCacheKey(e);if(s=n.get(i),void 0===s){const t=this.backend.createNodeBuilder(e.object,this.renderer,e.scene);t.material=e.material,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.toneMappingNode=this.getToneMappingNode(),t.build(),s=this._createNodeBuilderState(t),n.set(i,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const n=this.backend.createNodeBuilder(e,this.renderer);n.build(),s=this._createNodeBuilderState(n),t.nodeBuilderState=n}return s}_createNodeBuilderState(e){return new Gh(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getToneMappingNode(){return!1===this.isToneMappingState?null:this.renderer.toneMappingNode||this.get(this.renderer).toneMappingNode||null}getCacheKey(e,t){const s=this.getEnvironmentNode(e),n=this.getFogNode(e),i=this.getToneMappingNode(),r=[];return t&&r.push("lightsNode:"+t.getCacheKey()),s&&r.push("environmentNode:"+s.getCacheKey()),n&&r.push("fogNode:"+n.getCacheKey()),i&&r.push("toneMappingNode:"+i.getCacheKey()),"{"+r.join(",")+"}"}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e),this.updateToneMapping()}get isToneMappingState(){const e=this.renderer.getRenderTarget();return!e||!e.isCubeRenderTarget}updateToneMapping(){const e=this.renderer,t=this.get(e),s=e.toneMapping;if(this.isToneMappingState&&s!==G){if(t.toneMapping!==s){const n=t.rendererToneMappingNode||((e,t,s)=>jn(new zc(e,jn(t),jn(s))))(s,Yo("toneMappingExposure","float",e));n.toneMapping=s,t.rendererToneMappingNode=n,t.toneMappingNode=n,t.toneMapping=s}}else delete t.toneMappingNode,delete t.toneMapping}updateBackground(e){const t=this.get(e),s=e.background;if(s){if(t.background!==s){let e=null;if(!0===s.isCubeTexture)e=Mu(s,Ua);else if(!0===s.isTexture){let t=null;t=s.mapping===de||s.mapping===he?Vu():jc,e=jo(s,t).setUpdateMatrix(!0)}else s.isColor;t.backgroundNode=e,t.background=s}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){let e=null;s.isFogExp2?e=Nd(Yo("color","color",s),Yo("density","float",s)):s.isFog&&(e=_d(Yo("color","color",s),Yo("near","float",s),Yo("far","float",s))),t.fogNode=e,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){let e=null;!0===s.isCubeTexture?e=Mu(s):!0===s.isTexture&&(e=jo(s)),t.environmentNode=e,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e){const t=this.nodeFrame;return t.scene=e.scene,t.object=e.object,t.camera=e.camera,t.renderer=e.renderer,t.material=e.material,t}updateBefore(e){const t=this.getNodeFrame(e),s=e.getNodeBuilderState();for(const e of s.updateBeforeNodes)t.updateBeforeNode(e)}updateForCompute(){}updateForRender(e){const t=this.getNodeFrame(e),s=e.getNodeBuilderState();for(const e of s.updateNodes)t.updateNode(e)}dispose(){super.dispose(),this.nodeFrame=new Rl,this.nodeBuilderCache=new Map}}const zh=new M,Vh=new i,$h=new o,Hh=new fe,Wh=new u,qh=new r;class jh{constructor(e){this.isRenderer=!0,this.domElement=e.getDomElement(),this.backend=e,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.outputColorSpace=h,this.toneMapping=G,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=!0,this.stencil=!0,this.info=new zs,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new o(0,0,this._width,this._height),this._scissor=new o(0,0,this._width,this._height),this._scissorTest=!1,this._properties=null,this._attributes=null,this._geometries=null,this._nodes=null,this._bindings=null,this._objects=null,this._pipelines=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._animation=new Cs,this._currentRenderContext=null,this._lastRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._clearAlpha=1,this._clearColor=new n(0),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._initialized=!1,this._initPromise=null,this.shadowMap={enabled:!1,type:null},this.xr={enabled:!1}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise((async(e,t)=>{const s=this.backend;try{await s.init(this)}catch(e){return void t(e)}this._nodes=new kh(this,s),this._attributes=new Ps(s),this._background=new Dh(this,this._nodes),this._geometries=new ks(this._attributes,this.info),this._textures=new Ih(s,this.info),this._pipelines=new js(s,this._nodes),this._bindings=new Xs(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new Os(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new Mh,this._renderContexts=new Uh,this._animation.setNodes(this._nodes),this._animation.start(),this._initialized=!0,e()}))),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compile(){}async render(e,t){!1===this._initialized&&await this.init();const s=this._nodes.nodeFrame,n=s.renderId,i=this._currentRenderContext,r=!0===e.isScene?e:zh,o=this._renderTarget,a=this._renderContexts.get(e,t,o),u=this._activeCubeFace,l=this._activeMipmapLevel;this._currentRenderContext=a,s.renderId++;const c=this.coordinateSystem;t.coordinateSystem!==c&&(t.coordinateSystem=c,t.updateProjectionMatrix()),!1===this._animation.isAnimating&&s.update(),!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===this.info.autoReset&&this.info.reset(),this.info.render.frame++;let d=this._viewport,h=this._scissor,p=this._pixelRatio;null!==o&&(d=o.viewport,h=o.scissor,p=1),this.getDrawingBufferSize(Vh),$h.set(0,0,Vh.width,Vh.height);const m=void 0===d.minDepth?0:d.minDepth,g=void 0===d.maxDepth?1:d.maxDepth;a.viewportValue.copy(d).multiplyScalar(p).floor(),a.viewportValue.width>>=l,a.viewportValue.height>>=l,a.viewportValue.minDepth=m,a.viewportValue.maxDepth=g,a.viewport=!1===a.viewportValue.equals($h),a.scissorValue.copy(h).multiplyScalar(p).floor(),a.scissor=this._scissorTest&&!1===a.scissorValue.equals($h),a.scissorValue.width>>=l,a.scissorValue.height>>=l,a.depth=this.depth,a.stencil=this.stencil,r.onBeforeRender(this,e,t,o),Wh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Hh.setFromProjectionMatrix(Wh,c);const f=this._renderLists.get(e,t);if(f.begin(),this._projectObject(e,t,0,f),f.finish(),!0===this.sortObjects&&f.sort(this._opaqueSort,this._transparentSort),null!==o){this._textures.updateRenderTarget(o,l);const e=this._textures.get(o);a.textures=e.textures,a.depthTexture=e.depthTexture,a.width=e.width,a.height=e.height}else a.textures=null,a.depthTexture=null,a.width=this.domElement.width,a.height=this.domElement.height;a.width>>=l,a.height>>=l,a.activeCubeFace=u,a.activeMipmapLevel=l,a.occlusionQueryCount=f.occlusionQueryCount,this._nodes.updateScene(r),this._background.update(r,f,a),this.backend.beginRender(a);const x=f.opaque,b=f.transparent,T=f.lightsNode;x.length>0&&this._renderObjects(x,t,r,T),b.length>0&&this._renderObjects(b,t,r,T),this.backend.finishRender(a),s.renderId=n,this._currentRenderContext=i,this._lastRenderContext=a,r.onAfterRender(this,e,t,o)}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}setAnimationLoop(e){!1===this._initialized&&this.init();const t=this._animation;t.setAnimationLoop(e),null===e?t.stop():t.start()}getArrayBuffer(e){return this.getArrayBufferAsync(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this._context}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio=e,this.setSize(this._width,this._height,!1)}setDrawingBufferSize(e,t,s){this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,s=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===s&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,n){const i=this._scissor;e.isVector4?i.copy(e):i.set(e,t,s,n)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,n,i=0,r=1){const o=this._viewport;e.isVector4?o.copy(e):o.set(e,t,s,n),o.minDepth=i,o.maxDepth=r}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearAlpha=t}getClearAlpha(){return this._clearAlpha}setClearAlpha(e){this._clearAlpha=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext||this._lastRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){const n=this._currentRenderContext||this._lastRenderContext;n&&this.backend.clear(n,e,t,s)}clearColor(){this.clear(!0,!1,!1)}clearDepth(){this.clear(!1,!0,!1)}clearStencil(){this.clear(!1,!1,!0)}dispose(){this.info.dispose(),this._objects.dispose(),this._properties.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}async compute(e){!1===this._initialized&&await this.init();const t=this.backend,s=this._pipelines,n=this._bindings,i=this._nodes,r=Array.isArray(e)?e:[e];t.beginCompute(e);for(const o of r){if(!1===s.has(o)){const e=()=>{o.removeEventListener("dispose",e),s.delete(o),n.delete(o),i.delete(o)};o.addEventListener("dispose",e),o.onInit({renderer:this})}i.updateForCompute(o),n.updateForCompute(o);const r=n.getForCompute(o),a=s.getForCompute(o,r);t.compute(e,o,r,a)}t.finishCompute(e)}hasFeature(e){return this.backend.hasFeature(e)}copyFramebufferToTexture(e){const t=this._currentRenderContext||this._lastRenderContext;this._textures.updateTexture(e),this.backend.copyFramebufferToTexture(e,t)}readRenderTargetPixelsAsync(e,t,s,n,i){return this.backend.copyTextureToBuffer(e.texture,t,s,n,i)}_projectObject(e,t,s,n){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)s=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)n.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||Hh.intersectsSprite(e)){!0===this.sortObjects&&qh.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Wh);const t=e.geometry,i=e.material;i.visible&&n.push(e,t,i,s,qh.z,null)}}else if(e.isLineLoop);else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||Hh.intersectsObject(e))){const t=e.geometry,i=e.material;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),qh.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Wh)),Array.isArray(i)){const r=t.groups;for(let o=0,a=r.length;o<a;o++){const a=r[o],u=i[a.materialIndex];u&&u.visible&&n.push(e,t,u,s,qh.z,a)}}else i.visible&&n.push(e,t,i,s,qh.z,null)}const i=e.children;for(let e=0,r=i.length;e<r;e++)this._projectObject(i[e],t,s,n)}_renderObjects(e,t,s,n){for(let i=0,r=e.length;i<r;i++){const r=e[i],{object:o,geometry:a,material:u,group:l}=r;if(t.isArrayCamera){const e=t.cameras;for(let t=0,i=e.length;t<i;t++){const i=e[t];if(o.layers.test(i.layers)){const e=i.viewport,t=void 0===e.minDepth?0:e.minDepth,r=void 0===e.maxDepth?1:e.maxDepth,c=this._currentRenderContext.viewportValue;c.copy(e).multiplyScalar(this._pixelRatio).floor(),c.minDepth=t,c.maxDepth=r,this.backend.updateViewport(this._currentRenderContext),this._renderObject(o,s,i,a,u,l,n)}}}else this._renderObject(o,s,t,a,u,l,n)}}_renderObject(e,t,s,n,i,r,o){i=null!==t.overrideMaterial?t.overrideMaterial:i,e.onBeforeRender(this,t,s,n,i,r),i.onBeforeRender(this,t,s,n,i,r),!0===i.transparent&&i.side===xe&&!1===i.forceSinglePass?(i.side=C,this._renderObjectDirect(e,i,t,s,o,"backSide"),i.side=be,this._renderObjectDirect(e,i,t,s,o),i.side=xe):this._renderObjectDirect(e,i,t,s,o),e.onAfterRender(this,t,s,n,i,r)}_renderObjectDirect(e,t,s,n,i,r){const o=this._objects.get(e,t,s,n,i,this._currentRenderContext,r);this._nodes.updateBefore(o),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),this._nodes.updateForRender(o),this._geometries.updateForRender(o),this._bindings.updateForRender(o),this._pipelines.updateForRender(o),this.backend.draw(o,this.info)}}class Xh{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function Yh(e){return e+(Ls-e%Ls)%Ls}function Kh(e,t=4){return Yh(Qh(t)*e)}function Qh(e){return e+(4-e%4)%4}class Zh extends Xh{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return Yh(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class Jh extends Zh{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}class ep extends Jh{constructor(e){super(e),this.isUniformsGroup=!0,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,s=this.uniforms.length;t<s;t++){const s=this.uniforms[t],n=e%Ls;0!==n&&Ls-n-s.boundary<0?e+=Ls-n:n%s.boundary!=0&&(e+=n%s.boundary),s.offset=e/this.bytesPerElement,e+=s.itemSize*this.bytesPerElement}return Math.ceil(e/Ls)*Ls}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isFloatUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void 0}updateNumber(e){let t=!1;const s=this.buffer,n=e.getValue(),i=e.offset;return s[i]!==n&&(s[i]=n,t=!0),t}updateVector2(e){let t=!1;const s=this.buffer,n=e.getValue(),i=e.offset;return s[i+0]===n.x&&s[i+1]===n.y||(s[i+0]=n.x,s[i+1]=n.y,t=!0),t}updateVector3(e){let t=!1;const s=this.buffer,n=e.getValue(),i=e.offset;return s[i+0]===n.x&&s[i+1]===n.y&&s[i+2]===n.z||(s[i+0]=n.x,s[i+1]=n.y,s[i+2]=n.z,t=!0),t}updateVector4(e){let t=!1;const s=this.buffer,n=e.getValue(),i=e.offset;return s[i+0]===n.x&&s[i+1]===n.y&&s[i+2]===n.z&&s[i+4]===n.w||(s[i+0]=n.x,s[i+1]=n.y,s[i+2]=n.z,s[i+3]=n.w,t=!0),t}updateColor(e){let t=!1;const s=this.buffer,n=e.getValue(),i=e.offset;return s[i+0]===n.r&&s[i+1]===n.g&&s[i+2]===n.b||(s[i+0]=n.r,s[i+1]=n.g,s[i+2]=n.b,t=!0),t}updateMatrix3(e){let t=!1;const s=this.buffer,n=e.getValue().elements,i=e.offset;return s[i+0]===n[0]&&s[i+1]===n[1]&&s[i+2]===n[2]&&s[i+4]===n[3]&&s[i+5]===n[4]&&s[i+6]===n[5]&&s[i+8]===n[6]&&s[i+9]===n[7]&&s[i+10]===n[8]||(s[i+0]=n[0],s[i+1]=n[1],s[i+2]=n[2],s[i+4]=n[3],s[i+5]=n[4],s[i+6]=n[5],s[i+8]=n[6],s[i+9]=n[7],s[i+10]=n[8],t=!0),t}updateMatrix4(e){let t=!1;const s=this.buffer,n=e.getValue().elements,i=e.offset;return!1===function(e,t,s){for(let n=0,i=t.length;n<i;n++)if(e[s+n]!==t[n])return!1;return!0}(s,n,i)&&(s.set(n,i),t=!0),t}}let tp=0;class sp extends Xh{constructor(e,t){super(e),this.id=tp++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.isSampledTexture=!0}get needsBindingsUpdate(){const{texture:e,version:t}=this;return!!e.isVideoTexture||t!==e.version}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}}class np extends sp{constructor(e,t){super(e,t?t.value:null),this.textureNode=t}get needsBindingsUpdate(){return this.textureNode.value!==this.texture||super.needsBindingsUpdate}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class ip extends np{constructor(e,t){super(e,t),this.isSampledCubeTexture=!0}}const rp={[Pr.ATAN2]:"atan",textureDimensions:"textureSize"},op={low:"lowp",medium:"mediump",high:"highp"},ap={instance:!0};class up extends Al{constructor(e,t,s=null){super(e,t,new Ah,s),this.uniformsGroup={}}getMethod(e){return rp[e]||e}getPropertyName(e,t){return e.isOutputStructVar?"":super.getPropertyName(e,t)}getTexture(e,t,s){return e.isTextureCube?`textureCube( ${t}, ${s} )`:e.isDepthTexture?`texture( ${t}, ${s} ).x`:`texture( ${t}, ${s} )`}getTextureLevel(e,t,s,n){return`textureLod( ${t}, ${s}, ${n} )`}getTextureCompare(e,t,s,n,i=this.shaderStage){if("fragment"===i)return`texture( ${t}, vec3( ${s}, ${n} ) )`}getVars(e){const t=[],s=this.vars[e];for(const e of s)e.isOutputStructVar||t.push(`${this.getVar(e.type,e.name)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],s=[],n=[];for(const e of t){let t=null,i=!1;if("texture"===e.type)t=e.node.value.compareFunction?`sampler2DShadow ${e.name};`:`sampler2D ${e.name};`;else if("cubeTexture"===e.type)t=`samplerCube ${e.name};`;else{t=`${this.getVectorType(e.type)} ${e.name};`,i=!0}const r=e.node.precision;null!==r&&(t=op[r]+" "+t),i?(t="\t"+t,n.push(t)):(t="uniform "+t,s.push(t))}let i="";return n.length>0&&(i+=this._getGLSLUniformStruct(e+"NodeUniforms",n.join("\n"))+"\n"),i+=s.join("\n"),i}getAttributes(e){let t="";if("vertex"===e){const e=this.getAttributesArray();let s=0;for(const n of e)t+=`layout( location = ${s++} ) in ${n.type} ${n.name};\n`}return t}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const n=s[e];t.push(`layout( location = ${e} ) out ${n} m${e};`)}return t.join("\n")}getStructs(e){const t=[],s=this.structs[e];if(0===s.length)return"layout( location = 0 ) out vec4 fragColor;\n";for(let e=0,n=s.length;e<n;e++){const n=s[e];let i="\n";i+=this.getStructMembers(n),i+="\n",t.push(i)}return t.join("\n\n")}getVaryings(e){let t="";const s=this.varyings;if("vertex"===e)for(const e of s)t+=`${e.needsInterpolation?"out":"/*out*/"} ${e.type} ${e.name};\n`;else if("fragment"===e)for(const e of s)e.needsInterpolation&&(t+=`in ${e.type} ${e.name};\n`);return t}getVertexIndex(){return"gl_VertexID"}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord"}isAvailable(e){return!0===ap[e]}isFlipY(){return!0}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\nprecision highp float;\nprecision highp int;\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\nprecision highp float;\nprecision highp int;\nprecision lowp sampler2DShadow;\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};for(const t in e){let s="// code\n\n";s+=this.flowCode[t];const n=this.flowNodes[t],i=n[n.length-1];for(const e of n){const n=this.getFlowData(e),r=e.name;r&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${r}\n\t`),s+=`${n.code}\n\t`,e===i&&"compute"!==t&&(s+="// result\n\t","vertex"===t?(s+="gl_Position = ",s+=`${n.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${n.result};`)))}const r=e[t];r.uniforms=this.getUniforms(t),r.attributes=this.getAttributes(t),r.varyings=this.getVaryings(t),r.vars=this.getVars(t),r.structs=this.getStructs(t),r.codes=this.getCodes(t),r.flow=s}null!==this.material&&(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment))}getUniformFromNode(e,t,s,n=null){const i=super.getUniformFromNode(e,t,s,n),r=this.getDataFromNode(e,s);let o=r.uniformGPU;if(void 0===o){if("texture"===t)o=new np(i.name,i.node),this.bindings[s].push(o);else if("cubeTexture"===t)o=new ip(i.name,i.node),this.bindings[s].push(o);else{let e=this.uniformsGroup[s];void 0===e&&(e=new ep(s+"NodeUniforms"),this.uniformsGroup[s]=e,this.bindings[s].push(e)),o=this.getNodeUniform(i,t),e.addUniform(o)}r.uniformGPU=o}return i}build(){const{object:e,material:t}=this;return null!==t?Zu.fromMaterial(t).build(this):this.addFlow("compute",e),super.build()}}let lp=null,cp=null;class dp{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(e){}finish(e){}draw(e,t){}createProgram(e){}destroyProgram(e){}createBindings(e){}updateBindings(e){}createRenderPipeline(e){}createComputePipeline(e,t){}destroyPipeline(e){}needsUpdate(e){}getCacheKey(e){}createNodeBuilder(e){}createSampler(e){}createDefaultTexture(e){}createTexture(e){}copyTextureToBuffer(e,t,s,n,i){}createAttribute(e){}createIndexAttribute(e){}updateAttribute(e){}destroyAttribute(e){}updateSize(){}hasFeature(e){}getInstanceCount(e){const{object:t,geometry:s}=e;return s.isInstancedBufferGeometry?s.instanceCount:t.isInstancedMesh?t.count:1}getDrawingBufferSize(){return lp=lp||new i,this.renderer.getDrawingBufferSize(lp)}getScissor(){return cp=cp||new o,this.renderer.getScissor(cp)}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:Te(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${D}`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){this.data.delete(e)}}class hp{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:n}=s,i=e.array,r=e.usage||n.STATIC_DRAW,o=e.isInterleavedBufferAttribute?e.data:e,a=s.get(o);let u,l=a.bufferGPU;if(void 0===l&&(l=n.createBuffer(),n.bindBuffer(t,l),n.bufferData(t,i,r),n.bindBuffer(t,null),a.bufferGPU=l,a.bufferType=t,a.version=o.version),i instanceof Float32Array)u=n.FLOAT;else if(i instanceof Uint16Array)u=e.isFloat16BufferAttribute?n.HALF_FLOAT:n.UNSIGNED_SHORT;else if(i instanceof Int16Array)u=n.SHORT;else if(i instanceof Uint32Array)u=n.UNSIGNED_INT;else if(i instanceof Int32Array)u=n.INT;else if(i instanceof Int8Array)u=n.BYTE;else if(i instanceof Uint8Array)u=n.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+i);u=n.UNSIGNED_BYTE}s.set(e,{bufferGPU:l,type:u,bytesPerElement:i.BYTES_PER_ELEMENT})}updateAttribute(e){const t=this.backend,{gl:s}=t,n=e.array,i=e.isInterleavedBufferAttribute?e.data:e,r=t.get(i),o=r.bufferType;s.bindBuffer(o,r.bufferGPU),s.bufferSubData(o,0,n),s.bindBuffer(o,null),r.version=i.version}}let pp,mp,gp=!1;class fp{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=null,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,!1===gp&&(this._init(this.gl),gp=!0)}_init(e){pp={[_e]:e.FUNC_ADD,[ye]:e.FUNC_SUBTRACT,[Ne]:e.FUNC_REVERSE_SUBTRACT},mp={[ve]:e.ZERO,[Se]:e.ONE,[Ae]:e.SRC_COLOR,[Re]:e.SRC_ALPHA,[Ce]:e.SRC_ALPHA_SATURATE,[Ee]:e.DST_COLOR,[we]:e.DST_ALPHA,[Me]:e.ONE_MINUS_SRC_COLOR,[Oe]:e.ONE_MINUS_SRC_ALPHA,[Be]:e.ONE_MINUS_DST_COLOR,[Ue]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==Fe?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===Ie?t.cullFace(t.BACK):e===Le?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setBlending(e,t,s,n,i,r,o,a){const{gl:u}=this;if(e!==E){if(!1===this.currentBlendingEnabled&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e===Pe)i=i||t,r=r||s,o=o||n,t===this.currentBlendEquation&&i===this.currentBlendEquationAlpha||(u.blendEquationSeparate(pp[t],pp[i]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=i),s===this.currentBlendSrc&&n===this.currentBlendDst&&r===this.currentBlendSrcAlpha&&o===this.currentBlendDstAlpha||(u.blendFuncSeparate(mp[s],mp[n],mp[r],mp[o]),this.currentBlendSrc=s,this.currentBlendDst=n,this.currentBlendSrcAlpha=r,this.currentBlendDstAlpha=o),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||a!==this.currentPremultipledAlpha){if(this.currentBlendEquation===_e&&this.currentBlendEquationAlpha===_e||(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=_e,this.currentBlendEquationAlpha=_e),a)switch(e){case ze:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case ke:u.blendFunc(u.ONE,u.ONE);break;case Ge:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case De:u.blendFuncSeparate(u.ZERO,u.SRC_COLOR,u.ZERO,u.SRC_ALPHA)}else switch(e){case ze:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case ke:u.blendFunc(u.SRC_ALPHA,u.ONE);break;case Ge:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case De:u.blendFunc(u.ZERO,u.SRC_COLOR)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=a}}else!0===this.currentBlendingEnabled&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case Ye:t.depthFunc(t.NEVER);break;case Xe:t.depthFunc(t.ALWAYS);break;case je:t.depthFunc(t.LESS);break;case qe:t.depthFunc(t.LEQUAL);break;case We:t.depthFunc(t.EQUAL);break;case He:t.depthFunc(t.GEQUAL);break;case $e:t.depthFunc(t.GREATER);break;case Ve:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===s||(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===s||(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t){const{gl:s}=this;e.side===xe?this.disable(s.CULL_FACE):this.enable(s.CULL_FACE);let n=e.side===C;t&&(n=!n),this.setFlipSided(n),e.blending===ze&&!1===e.transparent?this.setBlending(E):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setDepthMask(e.colorWrite);const i=e.stencilWrite;this.setStencilTest(i),i&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?this.enable(s.SAMPLE_ALPHA_TO_COVERAGE):this.disable(s.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(e,t,s){const{gl:n}=this;e?(this.enable(n.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===s||(n.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(n.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}}class xp{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=v){const{gl:s,extensions:n}=this;let i;if(e===Ke)return s.UNSIGNED_BYTE;if(e===Qe)return s.UNSIGNED_SHORT_4_4_4_4;if(e===Ze)return s.UNSIGNED_SHORT_5_5_5_1;if(e===Je)return s.BYTE;if(e===et)return s.SHORT;if(e===tt)return s.UNSIGNED_SHORT;if(e===st)return s.INT;if(e===W)return s.UNSIGNED_INT;if(e===nt)return s.FLOAT;if(e===it)return s.HALF_FLOAT;if(e===rt)return s.ALPHA;if(e===ot)return s.RGBA;if(e===at)return s.LUMINANCE;if(e===ut)return s.LUMINANCE_ALPHA;if(e===q)return s.DEPTH_COMPONENT;if(e===le)return s.DEPTH_STENCIL;if(e===lt)return s.RED;if(e===ct)return s.RED_INTEGER;if(e===dt)return s.RG;if(e===ht)return s.RG_INTEGER;if(e===pt)return s.RGBA_INTEGER;if(e===mt||e===gt||e===ft||e===xt)if(t===h){if(i=n.get("WEBGL_compressed_texture_s3tc_srgb"),null===i)return null;if(e===mt)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===gt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===ft)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===xt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(i=n.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(e===mt)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===gt)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===ft)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===xt)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===bt||e===Tt||e===_t||e===yt){if(i=n.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(e===bt)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Tt)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===_t)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===yt)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===Nt)return i=n.get("WEBGL_compressed_texture_etc1"),null!==i?i.COMPRESSED_RGB_ETC1_WEBGL:null;if(e===vt||e===St){if(i=n.get("WEBGL_compressed_texture_etc"),null===i)return null;if(e===vt)return t===h?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(e===St)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(e===At||e===Rt||e===Ct||e===Et||e===wt||e===Mt||e===Ot||e===Bt||e===Ut||e===Ft||e===It||e===Lt||e===Pt||e===Dt){if(i=n.get("WEBGL_compressed_texture_astc"),null===i)return null;if(e===At)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Rt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Ct)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Et)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===wt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Mt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Ot)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Bt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Ut)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Ft)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===It)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===Lt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===Pt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Dt)return t===h?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===Gt){if(i=n.get("EXT_texture_compression_bptc"),null===i)return null;if(e===Gt)return t===h?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===kt||e===zt||e===Vt||e===$t){if(i=n.get("EXT_texture_compression_rgtc"),null===i)return null;if(e===Gt)return i.COMPRESSED_RED_RGTC1_EXT;if(e===zt)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Vt)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===$t)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===ce?s.UNSIGNED_INT_24_8:void 0!==s[e]?s[e]:null}}let bp,Tp,_p,yp=!1;class Np{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,!1===yp&&(this._init(this.gl),yp=!0)}_init(e){bp={[Ht]:e.REPEAT,[Wt]:e.CLAMP_TO_EDGE,[qt]:e.MIRRORED_REPEAT},Tp={[_]:e.NEAREST,[jt]:e.NEAREST_MIPMAP_NEAREST,[Xt]:e.NEAREST_MIPMAP_LINEAR,[B]:e.LINEAR,[Yt]:e.LINEAR_MIPMAP_NEAREST,[O]:e.LINEAR_MIPMAP_LINEAR},_p={[Kt]:e.NEVER,[Qt]:e.ALWAYS,[y]:e.LESS,[Zt]:e.LEQUAL,[Jt]:e.EQUAL,[es]:e.GEQUAL,[ts]:e.GREATER,[ss]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===_||e===jt||e===Xt?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let s;return s=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,s}getInternalFormat(e,t,s,n,i=!1){const{gl:r,extensions:o}=this;if(null!==e&&void 0!==r[e])return r[e];let a=t;return t===r.RED&&(s===r.FLOAT&&(a=r.R32F),s===r.HALF_FLOAT&&(a=r.R16F),s===r.UNSIGNED_BYTE&&(a=r.R8)),t===r.RED_INTEGER&&(s===r.UNSIGNED_BYTE&&(a=r.R8UI),s===r.UNSIGNED_SHORT&&(a=r.R16UI),s===r.UNSIGNED_INT&&(a=r.R32UI),s===r.BYTE&&(a=r.R8I),s===r.SHORT&&(a=r.R16I),s===r.INT&&(a=r.R32I)),t===r.RG&&(s===r.FLOAT&&(a=r.RG32F),s===r.HALF_FLOAT&&(a=r.RG16F),s===r.UNSIGNED_BYTE&&(a=r.RG8)),t===r.RGBA&&(s===r.FLOAT&&(a=r.RGBA32F),s===r.HALF_FLOAT&&(a=r.RGBA16F),s===r.UNSIGNED_BYTE&&(a=n===h&&!1===i?r.SRGB8_ALPHA8:r.RGBA8),s===r.UNSIGNED_SHORT_4_4_4_4&&(a=r.RGBA4),s===r.UNSIGNED_SHORT_5_5_5_1&&(a=r.RGB5_A1)),t===r.DEPTH_COMPONENT&&(s===r.UNSIGNED_INT&&(a=r.DEPTH_COMPONENT24),s===r.FLOAT&&(a=r.DEPTH_COMPONENT32F)),t===r.DEPTH_STENCIL&&s===r.UNSIGNED_INT_24_8&&(a=r.DEPTH24_STENCIL8),a!==r.R16F&&a!==r.R32F&&a!==r.RG16F&&a!==r.RG32F&&a!==r.RGBA16F&&a!==r.RGBA32F||o.get("EXT_color_buffer_float"),a}setTextureParameters(e,t){const{gl:s,extensions:n}=this;if(s.texParameteri(e,s.TEXTURE_WRAP_S,bp[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,bp[t.wrapT]),e!==s.TEXTURE_3D&&e!==s.TEXTURE_2D_ARRAY||s.texParameteri(e,s.TEXTURE_WRAP_R,bp[t.wrapR]),s.texParameteri(e,s.TEXTURE_MAG_FILTER,Tp[t.magFilter]),s.texParameteri(e,s.TEXTURE_MIN_FILTER,Tp[t.minFilter]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,_p[t.compareFunction])),!0===n.has("EXT_texture_filter_anisotropic")){if(t.magFilter===_)return;if(t.minFilter!==Xt&&t.minFilter!==O)return;if(t.type===nt&&!1===n.has("OES_texture_float_linear"))return;t.anisotropy}}}class vp{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions()}get(e){return this.gl.getExtension(e)}has(e){return this.availableExtensions.includes(e)}}class Sp extends dp{constructor(e={}){super(e),this.isWebGLBackend=!0}async init(e){await super.init(e);const t=this.parameters,s=void 0!==t.context?t.context:e.domElement.getContext("webgl2");this.gl=s,this.extensions=new vp(this),this.attributeUtils=new hp(this),this.textureUtils=new Np(this),this.state=new fp(this),this.utils=new xp(this),this.defaultTextures={},this.extensions.get("EXT_color_buffer_float")}get coordinateSystem(){return ns}beginRender(e){const{gl:t}=this;this._setFramebuffer(e);let s=0;e.clearColor&&(s|=t.COLOR_BUFFER_BIT),e.clearDepth&&(s|=t.DEPTH_BUFFER_BIT),e.clearStencil&&(s|=t.STENCIL_BUFFER_BIT);const n=e.clearColorValue;if(0!==s)if(null===e.textures)t.clearColor(n.r,n.g,n.b,n.a),t.clear(s);else{for(let s=0;s<e.textures.length;s++)t.clearBufferfv(t.COLOR,s,[n.r,n.g,n.b,n.a]);t.clearBufferfi(t.DEPTH_STENCIL,0,1,1)}e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight);const i=e.occlusionQueryCount;if(i>0){const t=this.get(e);t.currentOcclusionQueries=t.occlusionQueries,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,t.lastOcclusionObject=null,t.occlusionQueries=new Array(i),t.occlusionQueryObjects=new Array(i),t.occlusionQueryIndex=0}}finishRender(e){const t=e.occlusionQueryCount;if(t>0){if(t>this.get(e).occlusionQueryIndex){const{gl:e}=this;e.endQuery(e.ANY_SAMPLES_PASSED)}this.resolveOccludedAsync(e)}}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:n}=t;if(s&&n){const e=new WeakSet,{gl:i}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const r=()=>{let o=0;for(let t=0;t<s.length;t++){const r=s[t];null!==r&&(i.getQueryParameter(r,i.QUERY_RESULT_AVAILABLE)&&(i.getQueryParameter(r,i.QUERY_RESULT)>0&&e.add(n[t]),s[t]=null,i.deleteQuery(r),o++))}o<s.length?requestAnimationFrame(r):t.occluded=e};r()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const t=this.gl,{x:s,y:n,width:i,height:r}=e.viewportValue;t.viewport(s,n,i,r)}clear(e,t,s,n){const{gl:i}=this;let r=0;t&&(r|=i.COLOR_BUFFER_BIT),s&&(r|=i.DEPTH_BUFFER_BIT),n&&(r|=i.STENCIL_BUFFER_BIT);const o=e.clearColorValue;0!==r&&(i.clearColor(o.x,o.y,o.z,o.a),i.clear(r))}beginCompute(){}compute(){}finishCompute(){}draw(e,t){const{pipeline:s,material:n,context:i}=e,{programGPU:r,vaoGPU:o}=this.get(s),{gl:a,state:u}=this,l=this.get(i),c=e.getBindings();for(const e of c){const t=this.get(e),s=t.index;e.isUniformsGroup?a.bindBufferBase(a.UNIFORM_BUFFER,s,t.bufferGPU):e.isSampledTexture&&(a.activeTexture(a.TEXTURE0+s),a.bindTexture(t.glTextureType,t.textureGPU))}u.setMaterial(n),a.useProgram(r),a.bindVertexArray(o);const d=e.getIndex(),h=e.object,p=e.geometry,m=p.drawRange,g=m.start,f=l.lastOcclusionObject;if(f!==h&&void 0!==f){if(null!==f&&!0===f.occlusionTest&&(a.endQuery(a.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),!0===h.occlusionTest){const e=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,e),l.occlusionQueries[l.occlusionQueryIndex]=e,l.occlusionQueryObjects[l.occlusionQueryIndex]=h}l.lastOcclusionObject=h}let x;x=h.isPoints?a.POINTS:h.isLineSegments?a.LINES:h.isLine?a.LINE_STRIP:h.isLineLoop?a.LINE_LOOP:a.TRIANGLES;const b=this.getInstanceCount(e);if(null!==d){const e=this.get(d),s=m.count!==1/0?m.count:d.count;b>1?a.drawElementsInstanced(x,d.count,e.type,g,b):a.drawElements(x,d.count,e.type,g),t.update(h,s,1)}else{const e=p.attributes.position,s=m.count!==1/0?m.count:e.count;b>1?a.drawArraysInstanced(x,0,s,b):a.drawArrays(x,0,s),t.update(h,s,1)}a.bindVertexArray(null)}needsUpdate(e){return!1}getCacheKey(e){return e.geometry.id}createSampler(){}destroySampler(){}createDefaultTexture(e){const{gl:t,textureUtils:s,defaultTextures:n}=this,i=s.getGLTextureType(e);let r=n[i];void 0===r&&(r=t.createTexture(),t.bindTexture(i,r),t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST),n[i]=r),this.set(e,{textureGPU:r,glTextureType:i,isDefault:!0})}createTexture(e,t){const{gl:s,utils:n,textureUtils:i}=this,{levels:r,width:o,height:a}=t,u=n.convert(e.format,e.colorSpace),l=n.convert(e.type),c=i.getInternalFormat(e.internalFormat,u,l,e.colorSpace,e.isVideoTexture),d=s.createTexture(),h=i.getGLTextureType(e);s.bindTexture(h,d),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,e.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,e.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE),i.setTextureParameters(h,e),s.bindTexture(h,d),e.isVideoTexture||s.texStorage2D(h,r,c,o,a),this.set(e,{textureGPU:d,glTextureType:h,glFormat:u,glType:l,glInternalFormat:c})}updateTexture(e,t){const{gl:s}=this,{width:n,height:i}=t,{textureGPU:r,glTextureType:o,glFormat:a,glType:u,glInternalFormat:l}=this.get(e),c=e=>e.isDataTexture?e.image.data:e instanceof ImageBitmap||e instanceof OffscreenCanvas?e:e.data;if(s.bindTexture(o,r),e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const r=c(e[t]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,n,i,a,u,r)}}else if(e.isVideoTexture)e.update(),s.texImage2D(o,0,l,a,u,t.image);else{const e=c(t.image);s.texSubImage2D(o,0,0,0,n,i,a,u,e)}}generateMipmaps(e){const{gl:t}=this,{textureGPU:s,glTextureType:n}=this.get(e);t.bindTexture(n,s),t.generateMipmap(n)}destroyTexture(){}copyTextureToBuffer(){}createNodeBuilder(e,t,s=null){return new up(e,t,s)}createProgram(e){const t=this.gl,{stage:s,code:n}=e,i="vertex"===s?t.createShader(t.VERTEX_SHADER):t.createShader(t.FRAGMENT_SHADER);t.shaderSource(i,n),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS),this.set(e,{shaderGPU:i})}destroyProgram(){}createRenderPipeline(e){const t=this.gl,s=e.pipeline,{fragmentProgram:n,vertexProgram:i}=s,r=t.createProgram();t.attachShader(r,this.get(n).shaderGPU),t.attachShader(r,this.get(i).shaderGPU),t.linkProgram(r),t.getProgramParameter(r,t.LINK_STATUS),t.useProgram(r);const o=e.getBindings();for(const e of o){const s=this.get(e).index;if(e.isUniformsGroup){const n=t.getUniformBlockIndex(r,e.name);t.uniformBlockBinding(r,n,s)}else if(e.isSampledTexture){const n=t.getUniformLocation(r,e.name);t.uniform1i(n,s)}}const a=t.createVertexArray(),u=e.getIndex(),l=e.getAttributes();if(t.bindVertexArray(a),null!==u){const e=this.get(u);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.bufferGPU)}for(let e=0;e<l.length;e++){const s=l[e],n=this.get(s);let i,r;t.bindBuffer(t.ARRAY_BUFFER,n.bufferGPU),t.enableVertexAttribArray(e),!0===s.isInterleavedBufferAttribute?(i=s.data.stride*n.bytesPerElement,r=s.offset*n.bytesPerElement):(i=0,r=0),t.vertexAttribPointer(e,s.itemSize,n.type,!1,i,r),s.isInstancedBufferAttribute&&!s.isInterleavedBufferAttribute?t.vertexAttribDivisor(e,s.meshPerAttribute):s.isInterleavedBufferAttribute&&s.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(e,s.data.meshPerAttribute)}t.bindVertexArray(null),this.set(s,{programGPU:r,vaoGPU:a})}createComputePipeline(){}createBindings(e){this.updateBindings(e)}updateBindings(e){const{gl:t}=this;let s=0,n=0;for(const i of e)if(i.isUniformsGroup){const e=t.createBuffer(),n=i.buffer;t.bindBuffer(t.UNIFORM_BUFFER,e),t.bufferData(t.UNIFORM_BUFFER,n,t.DYNAMIC_DRAW),t.bindBufferBase(t.UNIFORM_BUFFER,s,e),this.set(i,{index:s++,bufferGPU:e})}else if(i.isSampledTexture){const{textureGPU:e,glTextureType:t}=this.get(i.texture);this.set(i,{index:n++,textureGPU:e,glTextureType:t})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup){const s=this.get(e).bufferGPU,n=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,s),t.bufferData(t.UNIFORM_BUFFER,n,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(){}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(){}updateSize(){}hasFeature(e){return!0}copyFramebufferToTexture(){}_setFramebuffer(e){const{gl:t}=this;if(null!==e.textures){const s=this.get(e);let n=s.framebuffer;if(void 0===n){n=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,n);const i=e.textures,r=[];for(let e=0;e<i.length;e++){const s=i[e],{textureGPU:n}=this.get(s),o=t.COLOR_ATTACHMENT0+e;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,n,0),r.push(o)}if(t.drawBuffers(r),null!==e.depthTexture){const{textureGPU:s}=this.get(e.depthTexture);t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,s,0)}s.framebuffer=n}else t.bindFramebuffer(t.FRAMEBUFFER,n)}else t.bindFramebuffer(t.FRAMEBUFFER,null)}}const Ap="point-list",Rp="line-list",Cp="line-strip",Ep="triangle-list",wp="triangle-strip",Mp="never",Op="less",Bp="equal",Up="less-equal",Fp="greater",Ip="not-equal",Lp="greater-equal",Pp="always",Dp="store",Gp="load",kp="clear",zp="ccw",Vp="none",$p="front",Hp="back",Wp="uint16",qp="uint32",jp={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Xp="clamp-to-edge",Yp="repeat",Kp="mirror-repeat",Qp="linear",Zp="nearest",Jp={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},em="add",tm="subtract",sm="reverse-subtract",nm="min",im="max",rm=0,om=15,am="keep",um="zero",lm="replace",cm="invert",dm="increment-clamp",hm="decrement-clamp",pm="increment-wrap",mm="decrement-wrap",gm="storage",fm="unfilterable-float",xm="depth",bm="2d",Tm="3d",_m="2d",ym="cube",Nm="all",vm="vertex",Sm="instance",Am={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable"};class Rm extends Xh{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class Cm extends Rm{constructor(e,t){super(e,t?t.value:null),this.textureNode=t}}class Em extends Zh{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}class wm{constructor(e){this.device=e;this.mipmapSampler=e.createSampler({minFilter:Qp}),this.flipYSampler=e.createSampler({minFilter:Zp}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:wp,stripIndexFormat:qp},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:wp,stripIndexFormat:qp},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const n=t.format,{width:i,height:r}=t.size,o=this.getTransferPipeline(n),a=this.getFlipYPipeline(n),u=this.device.createTexture({size:{width:i,height:r,depthOrArrayLayers:1},format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:_m,baseArrayLayer:s}),c=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:_m,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),h=(e,t,s)=>{const n=e.getBindGroupLayout(0),i=this.device.createBindGroup({layout:n,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),r=d.beginRenderPass({colorAttachments:[{view:s,loadOp:kp,storeOp:Dp,clearValue:[0,0,0,0]}]});r.setPipeline(e),r.setBindGroup(0,i),r.draw(4,1,0,0),r.end()};h(o,l,c),h(a,c,l),this.device.queue.submit([d.finish()]),u.destroy()}generateMipmaps(e,t,s=0){const n=this.getTransferPipeline(t.format),i=this.device.createCommandEncoder({}),r=n.getBindGroupLayout(0);let o=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:_m,baseArrayLayer:s});for(let a=1;a<t.mipLevelCount;a++){const t=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:o}]}),u=e.createView({baseMipLevel:a,mipLevelCount:1,dimension:_m,baseArrayLayer:s}),l=i.beginRenderPass({colorAttachments:[{view:u,loadOp:kp,storeOp:Dp,clearValue:[0,0,0,0]}]});l.setPipeline(n),l.setBindGroup(0,t),l.draw(4,1,0,0),l.end(),o=u}this.device.queue.submit([i.finish()])}}const Mm={[Kt]:"never",[y]:"less",[Jt]:"equal",[Zt]:"less-equal",[ts]:"greater",[es]:"greater-equal",[Qt]:"always",[ss]:"not-equal"},Om=[0,1,3,2,4,5];class Bm{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture=null,this.defaultCubeTexture=null}createSampler(e){const t=this.backend,s=t.device,n=t.get(e),i={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:e.anisotropy};e.isDepthTexture&&null!==e.compareFunction&&(i.compare=Mm[e.compareFunction]),n.sampler=s.createSampler(i)}createDefaultTexture(e){let t;t=e.isCubeTexture?this._getDefaultCubeTextureGPU():this._getDefaultTextureGPU(),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,n=s.get(e);if(n.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:i,height:r,depth:o,levels:a}=t,u=this._getDimension(e),l=e.internalFormat||Um(e,this.device),c=void 0!==t.sampleCount?t.sampleCount:1,d=e.isRenderTargetTexture?1:c;let h=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(h|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&(h|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:i,height:r,depthOrArrayLayers:o},mipLevelCount:a,sampleCount:d,dimension:u,format:l,usage:h};if(e.isVideoTexture){const t=e.source.data,s=new VideoFrame(t);p.size.width=s.displayWidth,p.size.height=s.displayHeight,s.close(),n.externalTexture=t}else{if(void 0===l)return this.createDefaultTexture(e);n.texture=s.device.createTexture(p)}if(e.isRenderTargetTexture&&c>1){const e=Object.assign({},p);e.label=e.label+"-msaa",e.sampleCount=c,n.msaaTexture=s.device.createTexture(e)}n.initialized=!0,n.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture.destroy(),void 0!==s.msaaTexture&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let e=0;e<6;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e);else this._generateMipmaps(t.texture,t.textureDescriptorGPU)}updateTexture(e,t){const s=this.backend.get(e),{textureDescriptorGPU:n}=s;if(!e.isRenderTargetTexture&&void 0!==n){if(e.isDataTexture||e.isDataArrayTexture||e.isData3DTexture)this._copyBufferToTexture(t.image,s.texture,n,0,!1);else if(e.isCompressedTexture)this._copyCompressedBufferToTexture(e.mipmaps,s.texture,n);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,s.texture,n,e.flipY);else if(e.isVideoTexture){const t=e.source.data;s.externalTexture=t}else this._copyImageToTexture(t.image,s.texture,n,0,e.flipY);s.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,s,n,i){const r=this.backend.device,o=this.backend.get(e),a=o.texture,u=o.textureDescriptorGPU.format,l=this._getBytesPerTexel(u),c=r.createBuffer({size:n*i*l,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),d=r.createCommandEncoder();d.copyTextureToBuffer({texture:a,origin:{x:t,y:s}},{buffer:c,bytesPerRow:n*l},{width:n,height:i});const h=this._getTypedArrayType(u);r.queue.submit([d.finish()]),await c.mapAsync(GPUMapMode.READ);return new h(c.getMappedRange())}_isEnvironmentTexture(e){const t=e.mapping;return t===de||t===he||t===pe||t===me}_getDefaultTextureGPU(){let e=this.defaultTexture;if(null===e){const t=new is;t.minFilter=_,t.magFilter=_,this.createTexture(t,{width:1,height:1}),this.defaultTexture=e=t}return this.backend.get(e).texture}_getDefaultCubeTextureGPU(){let e=this.defaultTexture;if(null===e){const t=new rs;t.minFilter=_,t.magFilter=_,this.createTexture(t,{width:1,height:1,depth:6}),this.defaultCubeTexture=e=t}return this.backend.get(e).texture}_copyCubeMapToTexture(e,t,s,n){for(let i=0;i<6;i++){const r=e[i],o=!0===n?Om[i]:i;r.isDataTexture?this._copyBufferToTexture(r.image,t,s,o,n):this._copyImageToTexture(r,t,s,o,n)}}_copyImageToTexture(e,t,s,n,i){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===i&&this._flipY(t,s,n)}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new wm(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,n,i){const r=this.backend.device,o=e.data,a=this._getBytesPerTexel(s.format),u=e.width*a;r.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},o,{offset:0,bytesPerRow:u},{width:e.width,height:e.height,depthOrArrayLayers:void 0!==e.depth?e.depth:1}),!0===i&&this._flipY(t,s,n)}_copyCompressedBufferToTexture(e,t,s){const n=this.backend.device,i=this._getBlockData(s.format);for(let s=0;s<e.length;s++){const r=e[s],o=r.width,a=r.height,u=Math.ceil(o/i.width)*i.byteLength;n.queue.writeTexture({texture:t,mipLevel:s},r.data,{offset:0,bytesPerRow:u},{width:Math.ceil(o/i.width)*i.width,height:Math.ceil(a/i.width)*i.width,depthOrArrayLayers:1})}}_getBlockData(e){return e===jp.BC1RGBAUnorm||e===jp.BC1RGBAUnormSRGB?{byteLength:8,width:4,height:4}:e===jp.BC2RGBAUnorm||e===jp.BC2RGBAUnormSRGB||e===jp.BC3RGBAUnorm||e===jp.BC3RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===jp.BC4RUnorm||e===jp.BC4RSNorm?{byteLength:8,width:4,height:4}:e===jp.BC5RGUnorm||e===jp.BC5RGSnorm||e===jp.BC6HRGBUFloat||e===jp.BC6HRGBFloat||e===jp.BC7RGBAUnorm||e===jp.BC7RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===jp.ETC2RGB8Unorm||e===jp.ETC2RGB8UnormSRGB||e===jp.ETC2RGB8A1Unorm||e===jp.ETC2RGB8A1UnormSRGB?{byteLength:8,width:4,height:4}:e===jp.ETC2RGBA8Unorm||e===jp.ETC2RGBA8UnormSRGB?{byteLength:16,width:4,height:4}:e===jp.EACR11Unorm||e===jp.EACR11Snorm?{byteLength:8,width:4,height:4}:e===jp.EACRG11Unorm||e===jp.EACRG11Snorm||e===jp.ASTC4x4Unorm||e===jp.ASTC4x4UnormSRGB?{byteLength:16,width:4,height:4}:e===jp.ASTC5x4Unorm||e===jp.ASTC5x4UnormSRGB?{byteLength:16,width:5,height:4}:e===jp.ASTC5x5Unorm||e===jp.ASTC5x5UnormSRGB?{byteLength:16,width:5,height:5}:e===jp.ASTC6x5Unorm||e===jp.ASTC6x5UnormSRGB?{byteLength:16,width:6,height:5}:e===jp.ASTC6x6Unorm||e===jp.ASTC6x6UnormSRGB?{byteLength:16,width:6,height:6}:e===jp.ASTC8x5Unorm||e===jp.ASTC8x5UnormSRGB?{byteLength:16,width:8,height:5}:e===jp.ASTC8x6Unorm||e===jp.ASTC8x6UnormSRGB?{byteLength:16,width:8,height:6}:e===jp.ASTC8x8Unorm||e===jp.ASTC8x8UnormSRGB?{byteLength:16,width:8,height:8}:e===jp.ASTC10x5Unorm||e===jp.ASTC10x5UnormSRGB?{byteLength:16,width:10,height:5}:e===jp.ASTC10x6Unorm||e===jp.ASTC10x6UnormSRGB?{byteLength:16,width:10,height:6}:e===jp.ASTC10x8Unorm||e===jp.ASTC10x8UnormSRGB?{byteLength:16,width:10,height:8}:e===jp.ASTC10x10Unorm||e===jp.ASTC10x10UnormSRGB?{byteLength:16,width:10,height:10}:e===jp.ASTC12x10Unorm||e===jp.ASTC12x10UnormSRGB?{byteLength:16,width:12,height:10}:e===jp.ASTC12x12Unorm||e===jp.ASTC12x12UnormSRGB?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=Xp;return e===Ht?t=Yp:e===qt&&(t=Kp),t}_convertFilterMode(e){let t=Qp;return e!==_&&e!==jt&&e!==Xt||(t=Zp),t}_getBytesPerTexel(e){return e===jp.R8Unorm?1:e===jp.R16Float||e===jp.RG8Unorm?2:e===jp.RG16Float||e===jp.R32Float||e===jp.RGBA8Unorm||e===jp.RGBA8UnormSRGB?4:e===jp.RG32Float||e===jp.RGBA16Float?8:e===jp.RGBA32Float?16:void 0}_getTypedArrayType(e){return e===jp.R8Uint?Uint8Array:e===jp.R8Sint?Int8Array:e===jp.R8Unorm?Uint8Array:e===jp.R8Snorm?Int8Array:e===jp.RG8Uint?Uint8Array:e===jp.RG8Sint?Int8Array:e===jp.RG8Unorm?Uint8Array:e===jp.RG8Snorm?Int8Array:e===jp.RGBA8Uint?Uint8Array:e===jp.RGBA8Sint?Int8Array:e===jp.RGBA8Unorm?Uint8Array:e===jp.RGBA8Snorm?Int8Array:e===jp.R16Uint?Uint16Array:e===jp.R16Sint?Int16Array:e===jp.RG16Uint?Uint16Array:e===jp.RG16Sint?Int16Array:e===jp.RGBA16Uint?Uint16Array:e===jp.RGBA16Sint?Int16Array:e===jp.R32Uint?Uint32Array:e===jp.R32Sint?Int32Array:e===jp.R32Float?Float32Array:e===jp.RG32Uint?Uint32Array:e===jp.RG32Sint?Int32Array:e===jp.RG32Float?Float32Array:e===jp.RGBA32Uint?Uint32Array:e===jp.RGBA32Sint?Int32Array:e===jp.RGBA32Float?Float32Array:void 0}_getDimension(e){let t;return t=e.isData3DTexture?Tm:bm,t}}function Um(e,t=null){const s=e.format,n=e.type,i=e.colorSpace;let r;if(!0===e.isFramebufferTexture)r=jp.BGRA8Unorm;else if(!0===e.isCompressedTexture)switch(s){case gt:r=i===h?jp.BC1RGBAUnormSRGB:jp.BC1RGBAUnorm;break;case ft:r=i===h?jp.BC2RGBAUnormSRGB:jp.BC2RGBAUnorm;break;case xt:r=i===h?jp.BC3RGBAUnormSRGB:jp.BC3RGBAUnorm;break;case vt:r=i===h?jp.ETC2RGB8UnormSRGB:jp.ETC2RGB8Unorm;break;case St:r=i===h?jp.ETC2RGBA8UnormSRGB:jp.ETC2RGBA8Unorm;break;case At:r=i===h?jp.ASTC4x4UnormSRGB:jp.ASTC4x4Unorm;break;case Rt:r=i===h?jp.ASTC5x4UnormSRGB:jp.ASTC5x4Unorm;break;case Ct:r=i===h?jp.ASTC5x5UnormSRGB:jp.ASTC5x5Unorm;break;case Et:r=i===h?jp.ASTC6x5UnormSRGB:jp.ASTC6x5Unorm;break;case wt:r=i===h?jp.ASTC6x6UnormSRGB:jp.ASTC6x6Unorm;break;case Mt:r=i===h?jp.ASTC8x5UnormSRGB:jp.ASTC8x5Unorm;break;case Ot:r=i===h?jp.ASTC8x6UnormSRGB:jp.ASTC8x6Unorm;break;case Bt:r=i===h?jp.ASTC8x8UnormSRGB:jp.ASTC8x8Unorm;break;case Ut:r=i===h?jp.ASTC10x5UnormSRGB:jp.ASTC10x5Unorm;break;case Ft:r=i===h?jp.ASTC10x6UnormSRGB:jp.ASTC10x6Unorm;break;case It:r=i===h?jp.ASTC10x8UnormSRGB:jp.ASTC10x8Unorm;break;case Lt:r=i===h?jp.ASTC10x10UnormSRGB:jp.ASTC10x10Unorm;break;case Pt:r=i===h?jp.ASTC12x10UnormSRGB:jp.ASTC12x10Unorm;break;case Dt:r=i===h?jp.ASTC12x12UnormSRGB:jp.ASTC12x12Unorm}else switch(s){case ot:switch(n){case Ke:r=i===h?jp.RGBA8UnormSRGB:jp.RGBA8Unorm;break;case it:r=jp.RGBA16Float;break;case nt:r=jp.RGBA32Float}break;case lt:switch(n){case Ke:r=jp.R8Unorm;break;case it:r=jp.R16Float;break;case nt:r=jp.R32Float}break;case dt:switch(n){case Ke:r=jp.RG8Unorm;break;case it:r=jp.RG16Float;break;case nt:r=jp.RG32Float}break;case q:switch(n){case tt:r=jp.Depth16Unorm;break;case W:r=jp.Depth24Plus;break;case nt:r=jp.Depth32Float}break;case le:switch(n){case ce:r=jp.Depth24PlusStencil8;break;case nt:t&&t.features.has(Am.Depth32FloatStencil8),r=jp.Depth32FloatStencil8}}return r}const Fm=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+)?/i,Im=/[a-z_0-9]+|<(.*?)>+/gi,Lm={f32:"float"};class Pm extends _h{constructor(e){const{type:t,inputs:s,name:n,inputsCode:i,blockCode:r}=(e=>{const t=(e=e.trim()).match(Fm);if(null!==t&&4===t.length){const s=t[2],n=[];let i=null;for(;null!==(i=Im.exec(s));)n.push(i);const r=[];let o=0;for(;o<n.length;){const e=n[o++][0];let t=n[o++][0];t=Lm[t]||t,o<n.length&&!0===n[o][0].startsWith("<")&&o++,r.push(new Cl(t,e))}const a=e.substring(t[0].length),u=void 0!==t[1]?t[1]:"";return{type:t[3]||"void",inputs:r,name:u,inputsCode:s,blockCode:a}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,s,n),this.inputsCode=i,this.blockCode=r}getCode(e=this.name){const t="void"!==this.type?"-> "+this.type:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class Dm extends Th{parseFunction(e){return new Pm(e)}}const Gm={vertex:GPUShaderStage.VERTEX,fragment:GPUShaderStage.FRAGMENT,compute:GPUShaderStage.COMPUTE},km={instance:!0},zm={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat3:"mat3x3<f32>",imat3:"mat3x3<i32>",umat3:"mat3x3<u32>",bmat3:"mat3x3<bool>",mat4:"mat4x4<f32>",imat4:"mat4x4<i32>",umat4:"mat4x4<u32>",bmat4:"mat4x4<bool>"},Vm={dFdx:"dpdx",dFdy:"- dpdy",mod:"threejs_mod",lessThanEqual:"threejs_lessThanEqual",inversesqrt:"inverseSqrt"},$m={lessThanEqual:new od("\nfn threejs_lessThanEqual( a : vec3<f32>, b : vec3<f32> ) -> vec3<bool> {\n\n\treturn vec3<bool>( a.x <= b.x, a.y <= b.y, a.z <= b.z );\n\n}\n"),mod:new od("\nfn threejs_mod( x : f32, y : f32 ) -> f32 {\n\n\treturn x - y * floor( x / y );\n\n}\n"),repeatWrapping:new od("\nfn threejs_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {\n\n\tlet uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );\n\n\treturn ( ( uvScaled % dimension ) + dimension ) % dimension;\n\n}\n")};class Hm extends Al{constructor(e,t,s=null){super(e,t,new Dm,s),this.uniformsGroup={},this.builtins={vertex:new Map,fragment:new Map,compute:new Map,attribute:new Map}}build(){const{object:e,material:t}=this;return null!==t?Zu.fromMaterial(t).build(this):this.addFlow("compute",e),super.build()}needsColorSpaceToLinear(e){return!0===e.isVideoTexture&&e.colorSpace!==v}_getSampler(e,t,s,n=this.shaderStage){return"fragment"===n?`textureSample( ${t}, ${t}_sampler, ${s} )`:this.getTextureLoad(e,t,s)}_getVideoSampler(e,t,s=this.shaderStage){if("fragment"===s)return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`}_getSamplerLevel(e,t,s,n,i=this.shaderStage){return"fragment"===i&&!1===this.isUnfilterable(e)?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${n} )`:this.getTextureLoad(e,t,s,n)}getTextureLoad(e,t,s,n="0"){this._include("repeatWrapping");return`textureLoad( ${t}, threejs_repeatWrapping( ${s}, ${`textureDimensions( ${t}, 0 )`} ), i32( ${n} ) )`}isUnfilterable(e){return!0===e.isDataTexture&&e.type===nt}getTexture(e,t,s,n=this.shaderStage){let i=null;return i=!0===e.isVideoTexture?this._getVideoSampler(t,s,n):this.isUnfilterable(e)?this.getTextureLoad(e,t,s):this._getSampler(e,t,s,n),i}getTextureCompare(e,t,s,n,i=this.shaderStage){if("fragment"===i)return`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${n} )`}getTextureLevel(e,t,s,n,i=this.shaderStage){let r=null;return r=!0===e.isVideoTexture?this._getVideoSampler(t,s,i):this._getSamplerLevel(e,t,s,n,i),r}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`NodeVaryings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,s=e.type;return"texture"===s||"cubeTexture"===s?t:"buffer"===s||"storageBuffer"===s?`NodeBuffer_${e.node.id}.${t}`:`NodeUniforms.${t}`}return super.getPropertyName(e)}getUniformFromNode(e,t,s,n=null){const i=super.getUniformFromNode(e,t,s,n),r=this.getDataFromNode(e,s);if(void 0===r.uniformGPU){let n;const o=this.bindings[s];if("texture"===t||"cubeTexture"===t){let r=null;"texture"===t?r=new np(i.name,i.node):"cubeTexture"===t&&(r=new ip(i.name,i.node)),r.store=!0===e.isStoreTextureNode,r.setVisibility(Gm[s]);const a=o[o.length-1],u=a&&a.isUniformsGroup?o.length-1:o.length;if("fragment"===s&&!1===this.isUnfilterable(e.value)&&!1===r.store){const e=new Cm(`${i.name}_sampler`,i.node);e.setVisibility(Gm[s]),o.splice(u,0,e,r),n=[e,r]}else o.splice(u,0,r),n=[r]}else if("buffer"===t||"storageBuffer"===t){const i=new("storageBuffer"===t?Em:Jh)("NodeBuffer_"+e.id,e.value);i.setVisibility(Gm[s]);const r=o[o.length-1],a=r&&r.isUniformsGroup?o.length-1:o.length;o.splice(a,0,i),n=i}else{let r=this.uniformsGroup[s];if(void 0===r&&(r=new ep("nodeUniforms"),r.setVisibility(Gm[s]),this.uniformsGroup[s]=r,o.push(r)),!0===e.isArrayUniformNode){n=[];for(const s of e.nodes){const e=this.getNodeUniform(s,t);e.boundary=Kh(e.itemSize),e.itemSize=Qh(e.itemSize),r.addUniform(e),n.push(e)}}else n=this.getNodeUniform(i,t),r.addUniform(n)}r.uniformGPU=n,"vertex"===s&&(this.bindingsOffset.fragment=o.length)}return i}isReference(e){return super.isReference(e)||"texture_2d"===e||"texture_cube"===e||"texture_storage_2d"===e}getBuiltin(e,t,s,n=this.shaderStage){const i=this.builtins[n];return!1===i.has(e)&&i.set(e,{name:e,property:t,type:s}),t}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>","fragment")}isFlipY(){return!1}getAttributes(e){const t=[];if("compute"===e&&this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),"vertex"===e||"compute"===e){for(const{name:e,property:s,type:n}of this.builtins.attribute.values())t.push(`@builtin( ${e} ) ${s} : ${n}`);const e=this.getAttributesArray();for(let s=0,n=e.length;s<n;s++){const n=e[s],i=n.name,r=this.getType(n.type);t.push(`@location( ${s} ) ${i} : ${r}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const n=s[e];t.push(`\t@location( ${e} ) m${e} : ${n}<f32>`)}return t.join(",\n")}getStructs(e){const t=[],s=this.structs[e];for(let e=0,n=s.length;e<n;e++){const n=s[e];let i=`struct ${n.name} {\n`;i+=this.getStructMembers(n),i+="\n}",t.push(i)}return t.join("\n\n")}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],s=this.vars[e];for(const e of s)t.push(`\t${this.getVar(e.type,e.name)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const s=this.varyings,n=this.vars[e];for(let i=0;i<s.length;i++){const r=s[i];if(r.needsInterpolation){let e=`@location( ${i} )`;/^(int|uint|ivec|uvec)/.test(r.type)&&(e+=" @interpolate( flat )"),t.push(`${e} ${r.name} : ${this.getType(r.type)}`)}else"vertex"===e&&!1===n.includes(r)&&n.push(r)}}for(const{name:s,property:n,type:i}of this.builtins[e].values())t.push(`@builtin( ${s} ) ${n} : ${i}`);const s=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("NodeVaryingsStruct","\t"+s):s}getUniforms(e){const t=this.uniforms[e],s=[],n=[],i=[];let r=this.bindingsOffset[e];for(const o of t)if("texture"===o.type||"cubeTexture"===o.type){const t=o.node.value;let n;if("fragment"===e&&!1===this.isUnfilterable(t)&&!0!==o.node.isStoreTextureNode&&(!0===t.isDepthTexture&&null!==t.compareFunction?s.push(`@binding( ${r++} ) @group( 0 ) var ${o.name}_sampler : sampler_comparison;`):s.push(`@binding( ${r++} ) @group( 0 ) var ${o.name}_sampler : sampler;`)),!0===t.isCubeTexture)n="texture_cube<f32>";else if(!0===t.isDepthTexture)n="texture_depth_2d";else if(!0===t.isVideoTexture)n="texture_external";else if(!0===o.node.isStoreTextureNode){n="texture_storage_2d<"+Um(t)+", write>"}else n="texture_2d<f32>";s.push(`@binding( ${r++} ) @group( 0 ) var ${o.name} : ${n};`)}else if("buffer"===o.type||"storageBuffer"===o.type){const e=o.node,t=this.getType(e.bufferType),s=e.bufferCount,i=s>0?", "+s:"",a=`\t${o.name} : array< ${t}${i} >\n`,u=e.isStorageBufferNode?"storage,read_write":"uniform";n.push(this._getWGSLStructBinding("NodeBuffer_"+e.id,a,u,r++))}else{const e=this.getType(this.getVectorType(o.type));if(!0===Array.isArray(o.value)){const t=o.value.length;i.push(`uniform ${e}[ ${t} ] ${o.name}`)}else i.push(`\t${o.name} : ${e}`)}let o=s.join("\n");return o+=n.join("\n"),i.length>0&&(o+=this._getWGSLStructBinding("NodeUniforms",i.join(",\n"),"uniform",r++)),o}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};for(const t in e){let s="// code\n\n";s+=this.flowCode[t];const n=this.flowNodes[t],i=n[n.length-1];for(const e of n){const n=this.getFlowData(e),r=e.name;r&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${r}\n\t`),s+=`${n.code}\n\t`,e===i&&"compute"!==t&&(s+="// result\n\t","vertex"===t?s+="NodeVaryings.Vertex = ":"fragment"===t&&(s+="return "),s+=`${n.result};`)}const r=i.outputNode,o=e[t];o.uniforms=this.getUniforms(t),o.attributes=this.getAttributes(t),o.varyings=this.getVaryings(t),o.structs=this.getStructs(t),o.vars=this.getVars(t),o.codes=this.getCodes(t),o.returnType=void 0!==r&&!0===r.isOutputStructNode?r.nodeType:"@location( 0 ) vec4<f32>",o.flow=s}null!==this.material?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e){return void 0!==$m[e]&&this._include(e),Vm[e]||e}getType(e){return zm[e]||e}isAvailable(e){return!0===km[e]}_include(e){$m[e].build(this)}_getWGSLVertexCode(e){return`${this.getSignature()}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> NodeVaryingsStruct {\n\n\t// system\n\tvar NodeVaryings: NodeVaryingsStruct;\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn NodeVaryings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n\n// uniforms\n${e.uniforms}\n\n// structs\n${e.structs}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){return`${this.getSignature()}\n// system\nvar<private> instanceIndex : u32;\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${t} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = id.x;\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,s,n=0,i=0){const r=e+"Struct";return`${this._getWGSLStruct(r,t)}\n@binding( ${n} ) @group( ${i} )\nvar<${s}> ${e} : ${r};`}}class Wm{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=jp.Depth24PlusStencil8:e.depth&&(t=jp.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).texture.format}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):jp.BGRA8Unorm,t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?Ap:e.isLineSegments||e.isMesh&&!0===t.wireframe?Rp:e.isLine?Cp:e.isMesh?Ep:void 0}getSampleCount(e){return null!==e.textures?e.sampleCount:this.backend.parameters.sampleCount}}const qm=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),jm=new Map([[P,["float16"]]]),Xm=new Map([[Int32Array,"sint32"],[Uint32Array,"uint32"],[Float32Array,"float32"]]);class Ym{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),n=this.backend,i=n.get(s);let r=i.buffer;if(void 0===r){const e=n.device,o=s.array,a=o.byteLength+(4-o.byteLength%4)%4;r=e.createBuffer({label:s.name,size:a,usage:t,mappedAtCreation:!0}),new o.constructor(r.getMappedRange()).set(o),r.unmap(),i.buffer=r}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,n=s.device,i=s.get(t).buffer,r=t.array,o=t.updateRange;-1===o.count?n.queue.writeBuffer(i,0,r,0):(n.queue.writeBuffer(i,0,r,o.offset*r.BYTES_PER_ELEMENT,o.count*r.BYTES_PER_ELEMENT),o.count=-1)}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let e=0;e<t.length;e++){const n=t[e],i=n.array.BYTES_PER_ELEMENT,r=this._getBufferAttribute(n);let o=s.get(r);if(void 0===o){let e,t;!0===n.isInterleavedBufferAttribute?(e=n.data.stride*i,t=n.data.isInstancedInterleavedBuffer?Sm:vm):(e=n.itemSize*i,t=n.isInstancedBufferAttribute?Sm:vm),o={arrayStride:e,attributes:[],stepMode:t},s.set(r,o)}const a=this._getVertexFormat(n),u=!0===n.isInterleavedBufferAttribute?n.offset*i:0;o.attributes.push({shaderLocation:e,offset:u,format:a})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,n=t.get(this._getBufferAttribute(e)),i=n.buffer,r=i.size;let o=n.readBuffer,a=!0;void 0===o&&(o=s.createBuffer({label:e.name,size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=!1,n.readBuffer=o);const u=s.createCommandEncoder({});u.copyBufferToBuffer(i,0,o,0,r),a&&o.unmap();const l=u.finish();s.queue.submit([l]),await o.mapAsync(GPUMapMode.READ);return o.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,n=e.array.constructor,i=e.constructor;let r;if(1==t)r=Xm.get(n);else{const e=(jm.get(i)||qm.get(n))[s?1:0];if(e){const s=n.BYTES_PER_ELEMENT*t,i=4*Math.floor((s+3)/4)/n.BYTES_PER_ELEMENT;if(i%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");r=`${e}x${i}`}}return r}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class Km{constructor(e){this.backend=e}createBindingsLayout(e){const t=this.backend.device,s=[];let n=0;for(const t of e){const e={binding:n++,visibility:t.visibility};if(t.isUniformBuffer||t.isStorageBuffer){const s={};t.isStorageBuffer&&(s.type=gm),e.buffer=s}else if(t.isSampler){const s={};t.texture.isDepthTexture&&null!==t.texture.compareFunction&&(s.type="comparison"),e.sampler=s}else if(t.isSampledTexture&&t.texture.isVideoTexture)e.externalTexture={};else if(t.isSampledTexture&&t.store){const s=this.backend.get(t.texture).texture.format;e.storageTexture={format:s}}else if(t.isSampledTexture){const s={};t.texture.isDepthTexture?s.sampleType=xm:t.texture.isDataTexture&&t.texture.type===nt&&(s.sampleType=fm),t.isSampledCubeTexture&&(s.viewDimension=ym),e.texture=s}s.push(e)}return t.createBindGroupLayout({entries:s})}createBindings(e){const t=this.backend.get(e),s=this.createBindingsLayout(e),n=this.createBindGroup(e,s);t.layout=s,t.group=n,t.bindings=e}updateBinding(e){const t=this.backend,s=t.device,n=e.buffer,i=t.get(e).buffer;s.queue.writeBuffer(i,0,n,0)}createBindGroup(e,t){const s=this.backend,n=s.device;let i=0;const r=[];for(const t of e){if(t.isUniformBuffer){const e=s.get(t);if(void 0===e.buffer){const s=t.byteLength,i=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,r=n.createBuffer({label:"bindingBuffer",size:s,usage:i});e.buffer=r}r.push({binding:i,resource:{buffer:e.buffer}})}else if(t.isStorageBuffer){const e=s.get(t);if(void 0===e.buffer){const n=t.attribute;e.buffer=s.get(n).buffer}r.push({binding:i,resource:{buffer:e.buffer}})}else if(t.isSampler){const e=s.get(t.texture);r.push({binding:i,resource:e.sampler})}else if(t.isSampledTexture){const e=s.get(t.texture);let o,a;if(o=t.isSampledCubeTexture?ym:_m,void 0!==e.externalTexture)a=n.importExternalTexture({source:e.externalTexture});else{const t=Nm;a=e.texture.createView({aspect:t,dimension:o})}r.push({binding:i,resource:a})}i++}return n.createBindGroup({layout:t,entries:r})}}class Qm{constructor(e){this.backend=e}createRenderPipeline(e){const{object:t,material:s,geometry:n,pipeline:i}=e,{vertexProgram:r,fragmentProgram:o}=i,a=this.backend,u=a.device,l=a.utils,c=a.get(i),d=a.get(e.getBindings()),h=a.attributeUtils.createShaderVertexBuffers(e);let p;!0===s.transparent&&s.blending!==E&&(p=this._getBlending(s));let m={};!0===s.stencilWrite&&(m={compare:this._getStencilCompare(s),failOp:this._getStencilOperation(s.stencilFail),depthFailOp:this._getStencilOperation(s.stencilZFail),passOp:this._getStencilOperation(s.stencilZPass)});const g=this._getColorWriteMask(s),f=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const s=l.getTextureFormatGPU(t[e]);f.push({format:s,blend:p,writeMask:g})}}else{const t=l.getCurrentColorFormat(e.context);f.push({format:t,blend:p,writeMask:g})}const x=a.get(r).module,b=a.get(o).module,T=this._getPrimitiveState(t,n,s),_=this._getDepthCompare(s),y=l.getCurrentDepthStencilFormat(e.context),N=l.getSampleCount(e.context);c.pipeline=u.createRenderPipeline({vertex:Object.assign({},x,{buffers:h}),fragment:Object.assign({},b,{targets:f}),primitive:T,depthStencil:{format:y,depthWriteEnabled:s.depthWrite,depthCompare:_,stencilFront:m,stencilBack:{},stencilReadMask:s.stencilFuncMask,stencilWriteMask:s.stencilWriteMask},multisample:{count:N,alphaToCoverageEnabled:s.alphaToCoverage},layout:u.createPipelineLayout({bindGroupLayouts:[d.layout]})})}createComputePipeline(e,t){const s=this.backend,n=s.device,i=s.get(e.computeProgram).module,r=s.get(e),o=s.get(t);r.pipeline=n.createComputePipeline({compute:i,layout:n.createPipelineLayout({bindGroupLayouts:[o.layout]})})}_getBlending(e){let t,s;const n=e.blending;if(n===Pe){const n=null!==e.blendSrcAlpha?e.blendSrcAlpha:Jp.One,i=null!==e.blendDstAlpha?e.blendDstAlpha:Jp.Zero,r=null!==e.blendEquationAlpha?e.blendEquationAlpha:Jp.Add;t={srcFactor:this._getBlendFactor(e.blendSrc),dstFactor:this._getBlendFactor(e.blendDst),operation:this._getBlendOperation(e.blendEquation)},s={srcFactor:this._getBlendFactor(n),dstFactor:this._getBlendFactor(i),operation:this._getBlendOperation(r)}}else{const i=(e,n,i,r)=>{t={srcFactor:e,dstFactor:n,operation:em},s={srcFactor:i,dstFactor:r,operation:em}};if(e.premultipliedAlpha)switch(n){case ze:i(Jp.SrcAlpha,Jp.OneMinusSrcAlpha,Jp.One,Jp.OneMinusSrcAlpha);break;case ke:i(Jp.SrcAlpha,Jp.One,Jp.One,Jp.One);break;case Ge:i(Jp.Zero,Jp.OneMinusSrc,Jp.Zero,Jp.One);break;case De:i(Jp.Zero,Jp.Src,Jp.Zero,Jp.SrcAlpha)}else switch(n){case ze:i(Jp.SrcAlpha,Jp.OneMinusSrcAlpha,Jp.One,Jp.OneMinusSrcAlpha);break;case ke:i(Jp.SrcAlpha,Jp.One,Jp.SrcAlpha,Jp.One);break;case Ge:i(Jp.Zero,Jp.OneMinusSrc,Jp.Zero,Jp.One);break;case De:i(Jp.Zero,Jp.Src,Jp.Zero,Jp.Src)}}if(void 0!==t&&void 0!==s)return{color:t,alpha:s}}_getBlendFactor(e){let t;switch(e){case ve:t=Jp.Zero;break;case Se:t=Jp.One;break;case Ae:t=Jp.Src;break;case Me:t=Jp.OneMinusSrc;break;case Re:t=Jp.SrcAlpha;break;case Oe:t=Jp.OneMinusSrcAlpha;break;case Ee:t=Jp.Dst;break;case Be:t=Jp.OneMinusDstColor;break;case we:t=Jp.DstAlpha;break;case Ue:t=Jp.OneMinusDstAlpha;break;case Ce:t=Jp.SrcAlphaSaturated;break;case 211:t=Jp.Constant;break;case 212:t=Jp.OneMinusConstant}return t}_getStencilCompare(e){let t;switch(e.stencilFunc){case ps:t=Mp;break;case hs:t=Pp;break;case ds:t=Op;break;case cs:t=Up;break;case ls:t=Bp;break;case us:t=Lp;break;case as:t=Fp;break;case os:t=Ip}return t}_getStencilOperation(e){let t;switch(e){case ys:t=am;break;case _s:t=um;break;case Ts:t=lm;break;case bs:t=cm;break;case xs:t=dm;break;case fs:t=hm;break;case gs:t=pm;break;case ms:t=mm}return t}_getBlendOperation(e){let t;switch(e){case _e:t=em;break;case ye:t=tm;break;case Ne:t=sm;break;case vs:t=nm;break;case Ns:t=im}return t}_getPrimitiveState(e,t,s){const n={},i=this.backend.utils;if(n.topology=i.getPrimitiveTopology(e,s),!0===e.isLine&&!0!==e.isLineSegments){const e=t.index?t.index.count:t.attributes.position.count;n.stripIndexFormat=e>65535?qp:Wp}switch(s.side){case be:n.frontFace=zp,n.cullMode=Hp;break;case C:n.frontFace=zp,n.cullMode=$p;break;case xe:n.frontFace=zp,n.cullMode=Vp}return n}_getColorWriteMask(e){return!0===e.colorWrite?om:rm}_getDepthCompare(e){let t;if(!1===e.depthTest)t=Pp;else{switch(e.depthFunc){case Ye:t=Mp;break;case Xe:t=Pp;break;case je:t=Op;break;case qe:t=Up;break;case We:t=Bp;break;case He:t=Lp;break;case $e:t=Fp;break;case Ve:t=Ip}}return t}}let Zm=null;void 0!==navigator.gpu&&(Zm=await navigator.gpu.requestAdapter());class Jm extends dp{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.antialias=!0===e.antialias,!0===this.parameters.antialias?this.parameters.sampleCount=void 0===e.sampleCount?4:e.sampleCount:this.parameters.sampleCount=1,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.adapter=null,this.device=null,this.context=null,this.colorBuffer=null,this.defaultDepthTexture=new T,this.defaultDepthTexture.name="depthBuffer",this.utils=new Wm(this),this.attributeUtils=new Ym(this),this.bindingUtils=new Km(this),this.pipelineUtils=new Qm(this),this.textureUtils=new Bm(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters,s={powerPreference:t.powerPreference},n=await navigator.gpu.requestAdapter(s);if(null===n)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const i=Object.values(Am),r=[];for(const e of i)n.features.has(e)&&r.push(e);const o={requiredFeatures:r,requiredLimits:t.requiredLimits},a=await n.requestDevice(o),u=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.adapter=n,this.device=a,this.context=u,this.updateSize()}get coordinateSystem(){return Ss}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}beginRender(e){const t=this.get(e),s=this.device,n=e.occlusionQueryCount;let i;n>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,i=s.createQuerySet({type:"occlusion",count:n}),t.occlusionQuerySet=i,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(n),t.lastOcclusionObject=null);const r={colorAttachments:[{view:null}],depthStencilAttachment:{view:null},occlusionQuerySet:i},o=r.colorAttachments[0],a=r.depthStencilAttachment,u=this.parameters.antialias;if(null!==e.textures){const t=e.textures;r.colorAttachments=[];const s=r.colorAttachments;for(let n=0;n<t.length;n++){const i=this.get(t[n]),r=i.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:_m});let o,a;void 0!==i.msaaTexture?(o=i.msaaTexture.createView(),a=r):(o=r,a=void 0),s.push({view:o,resolveTarget:a,loadOp:Gp,storeOp:Dp})}const n=this.get(e.depthTexture);a.view=n.texture.createView(),e.stencil&&e.depthTexture.format===q&&(e.stencil=!1)}else!0===u?(o.view=this.colorBuffer.createView(),o.resolveTarget=this.context.getCurrentTexture().createView()):(o.view=this.context.getCurrentTexture().createView(),o.resolveTarget=void 0),a.view=this._getDepthBufferGPU(e).createView();if(null!==e.textures){const t=r.colorAttachments;for(let s=0;s<t.length;s++){const n=t[s];e.clearColor?(n.clearValue=e.clearColorValue,n.loadOp=kp,n.storeOp=Dp):(n.loadOp=Gp,n.storeOp=Dp)}}else e.clearColor?(o.clearValue=e.clearColorValue,o.loadOp=kp,o.storeOp=Dp):(o.loadOp=Gp,o.storeOp=Dp);e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=kp,a.depthStoreOp=Dp):(a.depthLoadOp=Gp,a.depthStoreOp=Dp)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=kp,a.stencilStoreOp=Dp):(a.stencilLoadOp=Gp,a.stencilStoreOp=Dp));const l=s.createCommandEncoder({label:"renderContext_"+e.id}),c=l.beginRenderPass(r);if(t.descriptor=r,t.encoder=l,t.currentPass=c,t.currentSets={attributes:{}},e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:s,width:n,height:i}=e.scissorValue;c.setScissorRect(t,e.height-i-s,n,i)}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;if(s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),s>0){const n=8*s;let i=this.occludedResolveCache.get(n);void 0===i&&(i=this.device.createBuffer({size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(n,i));const r=this.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,i,0),t.encoder.copyBufferToBuffer(i,0,r,0,n),t.occlusionQueryBuffer=r,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const s=t[e];!0===s.generateMipmaps&&this.textureUtils.generateMipmaps(s)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:n}=t;if(s&&n){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const i=s.getMappedRange(),r=new BigUint64Array(i);for(let t=0;t<n.length;t++)0n!==r[t]&&e.add(n[t]);s.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e);let{x:s,y:n,width:i,height:r,minDepth:o,maxDepth:a}=e.viewportValue;t.setViewport(s,e.height-r-n,i,r,o,a)}clear(e,t,s,n){const i=this.device,r=this.get(e),{descriptor:o}=r;s=s&&e.depth,n=n&&e.stencil;const a=o.colorAttachments[0],u=o.depthStencilAttachment;!0===this.parameters.antialias?(a.view=this.colorBuffer.createView(),a.resolveTarget=this.context.getCurrentTexture().createView()):(a.view=this.context.getCurrentTexture().createView(),a.resolveTarget=void 0),o.depthStencilAttachment.view=this._getDepthBufferGPU(e).createView(),t?(a.loadOp=kp,a.clearValue=e.clearColorValue):a.loadOp=Gp,s?(u.depthLoadOp=kp,u.depthClearValue=e.clearDepthValue):u.depthLoadOp=Gp,n?(u.stencilLoadOp=kp,u.stencilClearValue=e.clearStencilValue):u.stencilLoadOp=Gp,r.encoder=i.createCommandEncoder({}),r.currentPass=r.encoder.beginRenderPass(o),r.currentPass.end(),i.queue.submit([r.encoder.finish()])}beginCompute(e){const t=this.get(e);t.cmdEncoderGPU=this.device.createCommandEncoder({}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass()}compute(e,t,s,n){const{passEncoderGPU:i}=this.get(e),r=this.get(n).pipeline;i.setPipeline(r);const o=this.get(s).group;i.setBindGroup(0,o),i.dispatchWorkgroups(t.dispatchCount)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}draw(e,t){const{object:s,geometry:n,context:i,pipeline:r}=e,o=this.get(e.getBindings()),a=this.get(i),u=this.get(r).pipeline,l=a.currentSets,c=a.currentPass;l.pipeline!==u&&(c.setPipeline(u),l.pipeline=u);const d=o.group;c.setBindGroup(0,d);const h=e.getIndex(),p=null!==h;if(!0===p&&l.index!==h){const e=this.get(h).buffer,t=h.array instanceof Uint16Array?Wp:qp;c.setIndexBuffer(e,t),l.index=h}const m=e.getVertexBuffers();for(let e=0,t=m.length;e<t;e++){const t=m[e];if(l.attributes[e]!==t){const s=this.get(t).buffer;c.setVertexBuffer(e,s),l.attributes[e]=t}}if(void 0!==a.occlusionQuerySet){const e=a.lastOcclusionObject;e!==s&&(null!==e&&!0===e.occlusionTest&&(c.endOcclusionQuery(),a.occlusionQueryIndex++),!0===s.occlusionTest&&(c.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=s),a.lastOcclusionObject=s)}const g=n.drawRange,f=g.start,x=this.getInstanceCount(e);if(0!==x)if(!0===p){const e=g.count!==1/0?g.count:h.count;c.drawIndexed(e,x,f,0,0),t.update(s,e,x)}else{const e=n.attributes.position,i=g.count!==1/0?g.count:e.count;c.draw(i,x,f,0),t.update(s,i,x)}}needsUpdate(e){const t=this.get(e),{object:s,material:n}=e,i=this.utils,r=i.getSampleCount(e.context),o=i.getCurrentColorSpace(e.context),a=i.getCurrentColorFormat(e.context),u=i.getCurrentDepthStencilFormat(e.context),l=i.getPrimitiveTopology(s,n);let c=!1;return t.sampleCount===r&&t.colorSpace===o&&t.colorFormat===a&&t.depthStencilFormat===u&&t.primitiveTopology===l||(t.sampleCount=r,t.colorSpace=o,t.colorFormat=a,t.depthStencilFormat=u,t.primitiveTopology=l,c=!0),c}getCacheKey(e){const{object:t,material:s}=e,n=this.utils,i=e.context;return[n.getSampleCount(i),n.getCurrentColorSpace(i),n.getCurrentColorFormat(i),n.getCurrentDepthStencilFormat(i),n.getPrimitiveTopology(t,s)].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,n,i){return this.textureUtils.copyTextureToBuffer(e,t,s,n,i)}createNodeBuilder(e,t,s=null){return new Hm(e,t,s)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e){this.pipelineUtils.createRenderPipeline(e)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}createBindings(e){this.bindingUtils.createBindings(e)}updateBindings(e){this.bindingUtils.createBindings(e)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this._configureContext(),this._setupColorBuffer()}hasFeature(e){const t=this.adapter||Zm;if(!1===Object.values(Am).includes(e))throw new Error("THREE.WebGPURenderer: Unknown WebGPU GPU feature: "+e);return t.features.has(e)}copyFramebufferToTexture(e,t){const s=this.get(t),{encoder:n,descriptor:i}=s;let r=null;e.isFramebufferTexture?r=this.context.getCurrentTexture():e.isDepthTexture&&(r=this._getDepthBufferGPU(t));const o=this.get(e).texture;s.currentPass.end(),n.copyTextureToTexture({texture:r,origin:{x:0,y:0,z:0}},{texture:o},[e.image.width,e.image.height]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),i.colorAttachments[0].loadOp=Gp,t.depth&&(i.depthStencilAttachment.depthLoadOp=Gp),t.stencil&&(i.depthStencilAttachment.stencilLoadOp=Gp),s.currentPass=n.beginRenderPass(i),s.currentSets={attributes:{}}}_getDepthBufferGPU(e){const{width:t,height:s}=this.getDrawingBufferSize(),n=this.defaultDepthTexture,i=this.get(n).texture;let r,o;if(e.stencil?(r=le,o=ce):e.depth&&(r=q,o=W),void 0!==i){if(n.image.width===t&&n.image.height===s&&n.format===r&&n.type===o)return i;this.textureUtils.destroyTexture(n)}return n.name="depthBuffer",n.format=r,n.type=o,n.image.width=t,n.image.height=s,this.textureUtils.createTexture(n,{sampleCount:this.parameters.sampleCount,width:t,height:s}),this.get(n).texture}_configureContext(){this.context.configure({device:this.device,format:jp.BGRA8Unorm,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:"premultiplied"})}_setupColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const{width:e,height:t}=this.getDrawingBufferSize();this.colorBuffer=this.device.createTexture({label:"colorBuffer",size:{width:e,height:t,depthOrArrayLayers:1},sampleCount:this.parameters.sampleCount,format:jp.BGRA8Unorm,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC})}}class eg extends jh{constructor(e={}){let t;t=Rs.isAvailable()?Jm:Sp;super(new t(e)),this.isWebGPURenderer=!0}}class tg extends jh{constructor(e={},t=!1){let s;s=Rs.isAvailable()&&!t?Jm:Sp;super(new s(e)),this.isWebGPURenderer=!0}}const sg="requestVideoFrameCallback"in HTMLVideoElement.prototype,ng=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,ig=window.cancelAnimationFrame||window.mozCancelAnimationFrame;let rg;class og{constructor(e,t){this._callback=e,this.video=t,this.animationID=null,this.running=!1}set callback(e){this._callback=e}async animateLegacy(){const e=this.video.currentTime;e>rg&&((1/(e-rg)).toFixed(),await this._callback(e,{width:this.video.videoWidth,height:this.video.videoHeight})),rg=e,this.animationID=ng((async()=>await this.animateLegacy()))}async animate(e,t){await this._callback(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initAnimate(){this.animateRef=async(e,t)=>await this.animate(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initLegacyAnimate(){this.animateLegacy()}start(){this.stop(),sg?this.initAnimate():(rg=new Date,this.initLegacyAnimate()),this.running=!0}stop(){this.running=!1,sg?this.animateRef=()=>{}:ig(this.animationID&&this.animationID.data&&this.animationID.data.handleId||this.animationID)}}const ag="requestVideoFrameCallback"in HTMLVideoElement.prototype,ug=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,lg=window.cancelAnimationFrame||window.mozCancelAnimationFrame;let cg;class dg{constructor(e,t){this._callback=e,this.video=t,this.animationID=null,this.running=!1,this.updateNodesRef=()=>{}}set nodes(e){this._nodes=e,e&&(this.updateNodesRef=()=>{this._nodes.nodeFrame.update()})}set callback(e){this._callback=e}async animateLegacy(){const e=this.video.currentTime;e>cg&&((1/(e-cg)).toFixed(),this.updateNodesRef(),await this._callback(e,{width:this.video.videoWidth,height:this.video.videoHeight})),cg=e,this.animationID=ug((async()=>await this.animateLegacy()))}async animate(e,t){this.updateNodesRef(),await this._callback(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initAnimate(){this.animateRef=async(e,t)=>await this.animate(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initLegacyAnimate(){this.animateLegacy()}start(){this.stop(),ag?this.initAnimate():(cg=new Date,this.initLegacyAnimate()),this.running=!0}stop(){this.running=!1,ag?this.animateRef=()=>{}:lg(this.animationID&&this.animationID.data&&this.animationID.data.handleId||this.animationID)}}export{$d as MeshBasicNodeMaterial,og as VideoAnimation,Rs as WebGPU,tg as WebGPUGLRenderer,eg as WebGPURenderer,dg as WebGPUVideoAnimation,Oo as clamp,Jn as color,Vu as equirectUV,mo as fwidth,xo as max,fo as min,Mo as mix,Ml as outputStruct,To as step,jo as texture,Zn as tslFn,Ai as uniform,mr as uv,Ci as varying,ii as vec2,hi as vec4};
