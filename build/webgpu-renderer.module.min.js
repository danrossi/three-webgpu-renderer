/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{DynamicDrawUsage as e,Uint32BufferAttribute as t,Uint16BufferAttribute as s,Color as n,Vector2 as r,Vector3 as i,Vector4 as o,Matrix3 as a,Matrix4 as u,EventDispatcher as l,MathUtils as c,LinearSRGBColorSpace as d,SRGBColorSpace as h,StaticDrawUsage as p,InterleavedBuffer as m,InterleavedBufferAttribute as g,InstancedInterleavedBuffer as f,DepthTexture as x,NearestFilter as b,LessCompare as T,WebGPUCoordinateSystem as _,ShaderMaterial as y,NoColorSpace as N,Material as v,WebGLCubeRenderTarget as S,BoxGeometry as A,BackSide as R,NoBlending as C,Mesh as E,Scene as w,LinearMipmapLinearFilter as M,LinearFilter as O,CubeCamera as F,RenderTarget as B,sRGBEncoding as U,LinearEncoding as I,Float16BufferAttribute as L,REVISION as D,TangentSpaceNormalMap as P,ObjectSpaceNormalMap as G,NoToneMapping as k,LinearToneMapping as V,ReinhardToneMapping as z,CineonToneMapping as $,ACESFilmicToneMapping as H,FramebufferTexture as W,NearestMipmapNearestFilter as j,UnsignedIntType as q,DepthFormat as X,PointLight as Y,DirectionalLight as K,SpotLight as Q,AmbientLight as Z,HemisphereLight as J,Loader as ee,FileLoader as te,PointsMaterial as se,LineBasicMaterial as ne,LineDashedMaterial as re,MeshNormalMaterial as ie,MeshBasicMaterial as oe,MeshLambertMaterial as ae,MeshPhongMaterial as ue,MeshStandardMaterial as le,MeshPhysicalMaterial as ce,SpriteMaterial as de,MaterialLoader as he,ObjectLoader as pe,DepthStencilFormat as me,UnsignedInt248Type as ge,EquirectangularReflectionMapping as fe,EquirectangularRefractionMapping as xe,CubeReflectionMapping as be,CubeRefractionMapping as Te,SphereGeometry as _e,Frustum as ye,DoubleSide as Ne,FrontSide as ve,createCanvasElement as Se,AddEquation as Ae,SubtractEquation as Re,ReverseSubtractEquation as Ce,ZeroFactor as Ee,OneFactor as we,SrcColorFactor as Me,SrcAlphaFactor as Oe,SrcAlphaSaturateFactor as Fe,DstColorFactor as Be,DstAlphaFactor as Ue,OneMinusSrcColorFactor as Ie,OneMinusSrcAlphaFactor as Le,OneMinusDstColorFactor as De,OneMinusDstAlphaFactor as Pe,CullFaceNone as Ge,CullFaceBack as ke,CullFaceFront as Ve,CustomBlending as ze,MultiplyBlending as $e,SubtractiveBlending as He,AdditiveBlending as We,NormalBlending as je,NotEqualDepth as qe,GreaterDepth as Xe,GreaterEqualDepth as Ye,EqualDepth as Ke,LessEqualDepth as Qe,LessDepth as Ze,AlwaysDepth as Je,NeverDepth as et,UnsignedByteType as tt,UnsignedShort4444Type as st,UnsignedShort5551Type as nt,ByteType as rt,ShortType as it,UnsignedShortType as ot,IntType as at,FloatType as ut,HalfFloatType as lt,AlphaFormat as ct,RGBAFormat as dt,LuminanceFormat as ht,LuminanceAlphaFormat as pt,RedFormat as mt,RedIntegerFormat as gt,RGFormat as ft,RGIntegerFormat as xt,RGBAIntegerFormat as bt,RGB_S3TC_DXT1_Format as Tt,RGBA_S3TC_DXT1_Format as _t,RGBA_S3TC_DXT3_Format as yt,RGBA_S3TC_DXT5_Format as Nt,RGB_PVRTC_4BPPV1_Format as vt,RGB_PVRTC_2BPPV1_Format as St,RGBA_PVRTC_4BPPV1_Format as At,RGBA_PVRTC_2BPPV1_Format as Rt,RGB_ETC1_Format as Ct,RGB_ETC2_Format as Et,RGBA_ETC2_EAC_Format as wt,RGBA_ASTC_4x4_Format as Mt,RGBA_ASTC_5x4_Format as Ot,RGBA_ASTC_5x5_Format as Ft,RGBA_ASTC_6x5_Format as Bt,RGBA_ASTC_6x6_Format as Ut,RGBA_ASTC_8x5_Format as It,RGBA_ASTC_8x6_Format as Lt,RGBA_ASTC_8x8_Format as Dt,RGBA_ASTC_10x5_Format as Pt,RGBA_ASTC_10x6_Format as Gt,RGBA_ASTC_10x8_Format as kt,RGBA_ASTC_10x10_Format as Vt,RGBA_ASTC_12x10_Format as zt,RGBA_ASTC_12x12_Format as $t,RGBA_BPTC_Format as Ht,RED_RGTC1_Format as Wt,SIGNED_RED_RGTC1_Format as jt,RED_GREEN_RGTC2_Format as qt,SIGNED_RED_GREEN_RGTC2_Format as Xt,RepeatWrapping as Yt,ClampToEdgeWrapping as Kt,MirroredRepeatWrapping as Qt,NearestMipmapLinearFilter as Zt,LinearMipmapNearestFilter as Jt,NeverCompare as es,AlwaysCompare as ts,LessEqualCompare as ss,EqualCompare as ns,GreaterEqualCompare as rs,GreaterCompare as is,NotEqualCompare as os,WebGLCoordinateSystem as as,Texture as us,CubeTexture as ls,NotEqualStencilFunc as cs,GreaterStencilFunc as ds,GreaterEqualStencilFunc as hs,EqualStencilFunc as ps,LessEqualStencilFunc as ms,LessStencilFunc as gs,AlwaysStencilFunc as fs,NeverStencilFunc as xs,DecrementWrapStencilOp as bs,IncrementWrapStencilOp as Ts,DecrementStencilOp as _s,IncrementStencilOp as ys,InvertStencilOp as Ns,ReplaceStencilOp as vs,ZeroStencilOp as Ss,KeepStencilOp as As,MaxEquation as Rs,MinEquation as Cs}from"three";void 0===window.GPUShaderStage&&(window.GPUShaderStage={VERTEX:1,FRAGMENT:2,COMPUTE:4});let Es=!1;if(void 0!==navigator.gpu){null!==await navigator.gpu.requestAdapter()&&(Es=!0)}class ws{static isAvailable(){return Es}static getErrorMessage(){const e=document.createElement("div");return e.id="webgpumessage",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.maxWidth="400px",e.style.margin="5em auto 0",e.innerHTML='Your browser does not support <a href="https://gpuweb.github.io/gpuweb/" style="color:blue">WebGPU</a> yet',e}}class Ms{constructor(e,t){this.nodes=e,this.info=t,this.animationLoop=null,this.requestId=null,this._init()}_init(){const e=(t,s)=>{this.requestId=self.requestAnimationFrame(e),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this.animationLoop&&this.animationLoop(t,s)};e()}dispose(){self.cancelAnimationFrame(this.requestId)}setAnimationLoop(e){this.animationLoop=e}}class Os{constructor(){this.weakMap=new WeakMap}get(e){if(Array.isArray(e)){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return;return t.get(e[e.length-1])}return super.get(e)}set(e,t){if(Array.isArray(e)){let s=this.weakMap;for(let t=0;t<e.length;t++){const n=e[t];!1===s.has(n)&&s.set(n,new WeakMap),s=s.get(n)}return s.set(e[e.length-1],t)}return super.set(e,t)}delete(e){if(Array.isArray(e)){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return!1;return t.delete(e[e.length-1])}return super.delete(e)}dispose(){this.weakMap.clear()}}let Fs=0;class Bs{constructor(e,t,s,n,r,i,o,a,u){this._nodes=e,this._geometries=t,this.id=Fs++,this.renderer=s,this.object=n,this.material=r,this.scene=i,this.camera=o,this.lightsNode=a,this.context=u,this.geometry=n.geometry,this.version=r.version,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.initialNodesCacheKey=this.getNodesCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],n=new Set;for(const r of e){const e=r.node&&r.node.attribute?r.node.attribute:t.getAttribute(r.name);s.push(e);const i=e.isInterleavedBufferAttribute?e.data:e;n.add(i)}return this.attributes=s,this.vertexBuffers=Array.from(n.values()),s}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getMaterialCacheKey(){const e=this.material;let t=e.customProgramCacheKey();for(const s in e){if(/^(is[A-Z])|^(visible|version|uuid|name|opacity|userData)$/.test(s))continue;let n=e[s];if(null!==n){const e=typeof n;"number"===e?n=0!==n?"1":"0":"object"===e&&(n="{}")}t+=n+","}return t}get needsUpdate(){return this.initialNodesCacheKey!==this.getNodesCacheKey()}getNodesCacheKey(){return this._nodes.getCacheKey(this.scene,this.lightsNode)}getCacheKey(){return this.getMaterialCacheKey()+","+this.getNodesCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}class Us{constructor(e,t,s,n,r,i){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=n,this.bindings=r,this.info=i,this.chainMaps={}}get(e,t,s,n,r,i,o){const a=this.getChainMap(o),u=[e,t,i,r];let l=a.get(u);return void 0===l?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,n,r,i,o),a.set(u,l)):(l.version!==t.version||l.needsUpdate)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(e,t,s,n,r,i,o)):l.version=t.version),l}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Os)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,n,r,i,o,a,u,l){const c=this.getChainMap(l),d=new Bs(e,t,s,n,r,i,o,a,u);return d.onDispose=()=>{this.pipelines.delete(d),this.bindings.delete(d),this.nodes.delete(d),c.delete(d.getChainArray())},d}}class Is{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data.clear()}}const Ls=1,Ds=2,Ps=4,Gs=16;class ks extends Is{constructor(e){super(),this.backend=e}delete(e){void 0!==super.delete(e)&&this.backend.destroyAttribute(e)}update(t,s){const n=this.get(t);if(void 0===n.version)s===Ls?this.backend.createAttribute(t):s===Ds?this.backend.createIndexAttribute(t):s===Ps&&this.backend.createStorageAttribute(t),n.version=this._getBufferAttribute(t).version;else{const s=this._getBufferAttribute(t);(n.version<s.version||s.usage===e)&&(this.backend.updateAttribute(t),n.version=s.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function Vs(e){return null!==e.index?e.index.version:e.attributes.position.version}function zs(e){const n=[],r=e.index,i=e.attributes.position;if(null!==r){const e=r.array;for(let t=0,s=e.length;t<s;t+=3){const s=e[t+0],r=e[t+1],i=e[t+2];n.push(s,r,r,i,i,s)}}else{for(let e=0,t=i.array.length/3-1;e<t;e+=3){const t=e+0,s=e+1,r=e+2;n.push(t,s,s,r,r,t)}}const o=new(function(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}(n)?t:s)(n,1);return o.version=Vs(e),o}class $s extends Is{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const n=t.index,r=e.getAttributes();null!==n&&this.attributes.delete(n);for(const e of r)this.attributes.delete(e);const i=this.wireframes.get(t);void 0!==i&&this.attributes.delete(i),t.removeEventListener("dispose",s)};t.addEventListener("dispose",s)}updateAttributes(e){const t=e.getAttributes();for(const e of t)this.updateAttribute(e,Ls);const s=this.getIndex(e);null!==s&&this.updateAttribute(s,Ds)}updateAttribute(e,t){const s=this.info.render.calls;this.attributeCall.get(e)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e,s))}getIndex(e){const{geometry:t,material:s}=e;let n=t.index;if(!0===s.wireframe){const e=this.wireframes;let s=e.get(t);void 0===s?(s=zs(t),e.set(t,s)):s.version!==Vs(t)&&(this.attributes.delete(s),s=zs(t),e.set(t,s)),n=s}return n}}class Hs{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,drawCalls:0,triangles:0,points:0,lines:0},this.compute={calls:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine&&(this.render.lines+=s*(t-1))}reset(){this.render.drawCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.memory.geometries=0,this.memory.textures=0}}class Ws{constructor(e){this.cacheKey=e,this.usedTimes=0}}class js extends Ws{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class qs extends Ws{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let Xs=0;class Ys{constructor(e,t){this.id=Xs++,this.code=e,this.stage=t,this.usedTimes=0}}class Ks extends Is{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,n=this.get(e);if(this._needsComputeUpdate(e)){const r=n.pipeline;r&&(r.usedTimes--,r.computeProgram.usedTimes--);const i=this.nodes.getForCompute(e);let o=this.programs.compute.get(i.computeShader);void 0===o&&(r&&0===r.computeProgram.usedTimes&&this._releaseProgram(r.computeProgram),o=new Ys(i.computeShader,"compute"),this.programs.compute.set(i.computeShader,o),s.createProgram(o));const a=this._getComputeCacheKey(e,o);let u=this.caches.get(a);void 0===u&&(r&&0===r.usedTimes&&this._releasePipeline(e),u=this._getComputePipeline(e,o,a,t)),u.usedTimes++,o.usedTimes++,n.version=e.version,n.pipeline=u}return n.pipeline}getForRender(e){const{backend:t}=this,s=this.get(e);if(this._needsRenderUpdate(e)){const n=s.pipeline;n&&(n.usedTimes--,n.vertexProgram.usedTimes--,n.fragmentProgram.usedTimes--);const r=e.getNodeBuilderState();let i=this.programs.vertex.get(r.vertexShader);void 0===i&&(n&&0===n.vertexProgram.usedTimes&&this._releaseProgram(n.vertexProgram),i=new Ys(r.vertexShader,"vertex"),this.programs.vertex.set(r.vertexShader,i),t.createProgram(i));let o=this.programs.fragment.get(r.fragmentShader);void 0===o&&(n&&0===n.fragmentProgram.usedTimes&&this._releaseProgram(n.fragmentProgram),o=new Ys(r.fragmentShader,"fragment"),this.programs.fragment.set(r.fragmentShader,o),t.createProgram(o));const a=this._getRenderCacheKey(e,i,o);let u=this.caches.get(a);void 0===u?(n&&0===n.usedTimes&&this._releasePipeline(n),u=this._getRenderPipeline(e,i,o,a)):e.pipeline=u,u.usedTimes++,i.usedTimes++,o.usedTimes++,s.pipeline=u}return s.pipeline}delete(e){const t=this.get(e).pipeline;t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,n){s=s||this._getComputeCacheKey(e,t);let r=this.caches.get(s);return void 0===r&&(r=new qs(s,t),this.caches.set(s,r),this.backend.createComputePipeline(r,n)),r}_getRenderPipeline(e,t,s,n){n=n||this._getRenderCacheKey(e,t,s);let r=this.caches.get(n);return void 0===r&&(r=new js(n,t,s),this.caches.set(n,r),e.pipeline=r,this.backend.createRenderPipeline(e)),r}_getComputeCacheKey(e,t){return"compute"+e.id+t.id}_getRenderCacheKey(e,t,s){const{material:n}=e;return[t.id,s.id,n.transparent,n.blending,n.premultipliedAlpha,n.blendSrc,n.blendDst,n.blendEquation,n.blendSrcAlpha,n.blendDstAlpha,n.blendEquationAlpha,n.colorWrite,n.depthWrite,n.depthTest,n.depthFunc,n.stencilWrite,n.stencilFunc,n.stencilFail,n.stencilZFail,n.stencilZPass,n.stencilFuncMask,n.stencilWriteMask,n.side,this.backend.getCacheKey(e)].join()}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){const t=this.get(e),s=e.material;let n=this.backend.needsUpdate(e);return t.material===s&&t.materialVersion===s.version&&t.transparent===s.transparent&&t.blending===s.blending&&t.premultipliedAlpha===s.premultipliedAlpha&&t.blendSrc===s.blendSrc&&t.blendDst===s.blendDst&&t.blendEquation===s.blendEquation&&t.blendSrcAlpha===s.blendSrcAlpha&&t.blendDstAlpha===s.blendDstAlpha&&t.blendEquationAlpha===s.blendEquationAlpha&&t.colorWrite===s.colorWrite&&t.depthWrite===s.depthWrite&&t.depthTest===s.depthTest&&t.depthFunc===s.depthFunc&&t.stencilWrite===s.stencilWrite&&t.stencilFunc===s.stencilFunc&&t.stencilFail===s.stencilFail&&t.stencilZFail===s.stencilZFail&&t.stencilZPass===s.stencilZPass&&t.stencilFuncMask===s.stencilFuncMask&&t.stencilWriteMask===s.stencilWriteMask&&t.side===s.side&&t.alphaToCoverage===s.alphaToCoverage||(t.material=s,t.materialVersion=s.version,t.transparent=s.transparent,t.blending=s.blending,t.premultipliedAlpha=s.premultipliedAlpha,t.blendSrc=s.blendSrc,t.blendDst=s.blendDst,t.blendEquation=s.blendEquation,t.blendSrcAlpha=s.blendSrcAlpha,t.blendDstAlpha=s.blendDstAlpha,t.blendEquationAlpha=s.blendEquationAlpha,t.colorWrite=s.colorWrite,t.depthWrite=s.depthWrite,t.depthTest=s.depthTest,t.depthFunc=s.depthFunc,t.stencilWrite=s.stencilWrite,t.stencilFunc=s.stencilFunc,t.stencilFail=s.stencilFail,t.stencilZFail=s.stencilZFail,t.stencilZPass=s.stencilZPass,t.stencilFuncMask=s.stencilFuncMask,t.stencilWriteMask=s.stencilWriteMask,t.side=s.side,t.alphaToCoverage=s.alphaToCoverage,n=!0),n||void 0===t.pipeline}}class Qs extends Is{constructor(e,t,s,n,r,i){super(),this.backend=e,this.textures=s,this.pipelines=r,this.attributes=n,this.nodes=t,this.info=i,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings(),s=this.get(e);return s.bindings!==t&&(s.bindings=t,this._init(t),this.backend.createBindings(t)),s.bindings}getForCompute(e){const t=this.get(e);if(void 0===t.bindings){const s=this.nodes.getForCompute(e).bindings.compute;t.bindings=s,this._init(s),this.backend.createBindings(s)}return t.bindings}updateForCompute(e){this._update(e,this.getForCompute(e))}updateForRender(e){this._update(e,this.getForRender(e))}_init(e){for(const t of e)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute;this.attributes.update(e,Ps)}}_update(e,t){const{backend:s}=this;let n=!1;for(const e of t){if(e.isNodeUniformsGroup){if(!this.nodes.updateGroup(e))continue}if(e.isUniformBuffer){e.update()&&s.updateBinding(e)}else if(e.isSampledTexture){e.needsBindingsUpdate&&(n=!0);e.update()&&this.textures.updateTexture(e.texture)}}if(!0===n){const s=this.pipelines.getForRender(e);this.backend.updateBindings(t,s)}}}const Zs={VERTEX:"vertex",FRAGMENT:"fragment"},Js={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},en={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX3:"mat3",MATRIX4:"mat4"},tn=["fragment","vertex"],sn=["setup","analyze","generate"],nn=[...tn,"compute"],rn=["x","y","z","w"];function on(e){let t="{";!0===e.isNode&&(t+=e.id);for(const{property:s,childNode:n}of an(e))t+=","+s.slice(0,-4)+":"+n.getCacheKey();return t+="}",t}function*an(e,t=!1){for(const s in e){if(!0===s.startsWith("_"))continue;const n=e[s];if(!0===Array.isArray(n))for(let e=0;e<n.length;e++){const r=n[e];r&&(!0===r.isNode||t&&"function"==typeof r.toJSON)&&(yield{property:s,index:e,childNode:r})}else if(n&&!0===n.isNode)yield{property:s,childNode:n};else if("object"==typeof n)for(const e in n){const r=n[e];r&&(!0===r.isNode||t&&"function"==typeof r.toJSON)&&(yield{property:s,index:e,childNode:r})}}}function un(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function ln(e,...t){const s=e?e.slice(-4):void 0;return 1===t.length&&("vec2"===s?t=[t[0],t[0]]:"vec3"===s?t=[t[0],t[0],t[0]]:"vec4"===s&&(t=[t[0],t[0],t[0],t[0]])),"color"===e?new n(...t):"vec2"===s?new r(...t):"vec3"===s?new i(...t):"vec4"===s?new o(...t):"mat3"===s?new a(...t):"mat4"===s?new u(...t):"bool"===e?t[0]||!1:"float"===e||"int"===e||"uint"===e?t[0]||0:"string"===e?t[0]||"":"ArrayBuffer"===e?dn(t[0]):null}function cn(e){let t="";const s=new Uint8Array(e);for(let e=0;e<s.length;e++)t+=String.fromCharCode(s[e]);return btoa(t)}function dn(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0))).buffer}var hn=Object.freeze({__proto__:null,getCacheKey:on,getNodeChildren:an,getValueType:un,getValueFromType:ln,arrayBufferToBase64:cn,base64ToArrayBuffer:dn});const pn=new Map;let mn=0;class gn extends l{constructor(e=null){super(),this.nodeType=e,this.updateType=Js.NONE,this.updateBeforeType=Js.NONE,this.uuid=c.generateUUID(),this.isNode=!0,Object.defineProperty(this,"id",{value:mn++})}get type(){return this.constructor.type}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return!1}*getChildren(){for(const{childNode:e}of an(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(){return on(this)}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);for(const e of this.getChildren())t["_node"+e.id]=e;return null}construct(e){return this.setup(e)}analyze(e){const t=e.getDataFromNode(this);if(t.dependenciesCount=void 0===t.dependenciesCount?1:t.dependenciesCount+1,1===t.dependenciesCount){const t=e.getNodeProperties(this);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&!0===s.isNode)return s.build(e,t)}updateBefore(){}update(){}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);e.addNode(this),e.addChain(this);let n=null;const r=e.getBuildStage();if("setup"===r){const t=e.getNodeProperties(this);if(!0!==t.initialized||!1===e.context.tempRead){const s=e.stack.nodes.length;t.initialized=!0,t.outputNode=this.setup(e),null!==t.outputNode&&e.stack.nodes.length!==s&&(t.outputNode=e.stack);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}else if("analyze"===r)this.analyze(e);else if("generate"===r){if(1===this.generate.length){const s=this.getNodeType(e),r=e.getDataFromNode(this);n=r.snippet,void 0===n&&(n=this.generate(e)||"",r.snippet=n),n=e.format(n,s,t)}else n=this.generate(e,t)||""}return e.removeChain(this),n}getSerializeChildren(){return an(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:n,index:r,childNode:i}of t)void 0!==r?(void 0===s[n]&&(s[n]=Number.isInteger(r)?[]:{}),s[n][r]=i.toJSON(e.meta).uuid):s[n]=i.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const n=[];for(const r of e.inputNodes[s])n.push(t[r]);this[s]=n}else if("object"==typeof e.inputNodes[s]){const n={};for(const r in e.inputNodes[s]){const i=e.inputNodes[s][r];n[r]=t[i]}this[s]=n}else{const n=e.inputNodes[s];this[s]=t[n]}}}toJSON(e){const{uuid:t,type:s}=this,n=void 0===e||"string"==typeof e;n&&(e={textures:{},images:{},nodes:{}});let r=e.nodes[t];function i(e){const t=[];for(const s in e){const n=e[s];delete n.metadata,t.push(n)}return t}if(void 0===r&&(r={uuid:t,type:s,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==n&&(e.nodes[r.uuid]=r),this.serialize(r),delete r.meta),n){const t=i(e.textures),s=i(e.images),n=i(e.nodes);t.length>0&&(r.textures=t),s.length>0&&(r.images=s),n.length>0&&(r.nodes=n)}return r}}function fn(e,t){if("function"!=typeof t||!e)throw new Error(`Node class ${e} is not a class`);if(pn.has(e))throw new Error(`Redefinition of node class ${e}`);pn.set(e,t),t.type=e}function xn(e){const t=pn.get(e);if(void 0!==t)return new t}class bn extends gn{constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?un(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=un(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=cn(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?ln(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){}}fn("InputNode",bn);class Tn extends gn{constructor(e,t=!1){super("string"),this.name=e,this.version=0,this.shared=t,this.isUniformGroup=!0}set needsUpdate(e){!0===e&&this.version++}}const _n=e=>new Tn(e),yn=e=>new Tn(e,!0),Nn=yn("frame"),vn=yn("render"),Sn=_n("object");fn("UniformGroupNode",Tn);class An extends gn{constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getNodeType(e)}generate(e){return`${this.node.build(e)}[ ${this.indexNode.build(e,"uint")} ]`}}fn("ArrayElementNode",An);class Rn extends gn{constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const n of this.convertTo.split("|"))null!==s&&e.getTypeLength(t)!==e.getTypeLength(n)||(s=n);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,n=this.getNodeType(e),r=s.build(e,n);return e.format(r,n,t)}}fn("ConvertNode",Rn);class Cn extends gn{constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).dependenciesCount>1}build(e,t){if("generate"===e.getBuildStage()){const s=e.getVectorType(this.getNodeType(e,t)),n=e.getDataFromNode(this);if(!1!==e.context.tempRead&&void 0!==n.propertyName)return e.format(n.propertyName,s,t);if(!1!==e.context.tempWrite&&"void"!==s&&"void"!==t&&this.hasDependencies(e)){const r=super.build(e,s),i=e.getVarFromNode(this,null,s),o=e.getPropertyName(i);return e.addLineFlowCode(`${o} = ${r}`),n.snippet=r,n.propertyName=o,e.format(n.propertyName,s,t)}}return super.build(e,t)}}fn("TempNode",Cn);class En extends Cn{constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce(((t,s)=>t+e.getTypeLength(s.getNodeType(e))),0))}generate(e,t){const s=this.getNodeType(e),n=this.nodes,r=e.getPrimitiveType(s),i=[];for(const t of n){let s=t.build(e);const n=e.getPrimitiveType(t.getNodeType(e));n!==r&&(s=e.format(s,n,r)),i.push(s)}const o=`${e.getType(s)}( ${i.join(", ")} )`;return e.format(o,s,t)}}fn("JoinNode",En);const wn=rn.join("");class Mn extends gn{constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(rn.indexOf(t)+1,e);return e}getNodeType(e){return e.getTypeFromLength(this.components.length)}generate(e,t){const s=this.node,n=e.getTypeLength(s.getNodeType(e));let r=null;if(n>1){let i=null;this.getVectorLength()>=n&&(i=e.getTypeFromLength(this.getVectorLength()));const o=s.build(e,i);r=this.components.length===n&&this.components===wn.slice(0,this.components.length)?e.format(o,i,t):e.format(`${o}.${this.components}`,this.getNodeType(e),t)}else r=s.build(e,t);return r}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}fn("SplitNode",Mn);class On extends Cn{constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:n}=this,r=this.getNodeType(e),i=e.getTypeFromLength(s.length),o=n.build(e,i),a=t.build(e,r),u=e.getTypeLength(r),l=[];for(let e=0;e<u;e++){const t=rn[e];t===s[0]?(l.push(o),e+=s.length-1):l.push(a+"."+t)}return`${e.getType(r)}( ${l.join(", ")} )`}}fn("SetNode",On);class Fn extends bn{constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return e.format(this.generateConst(e),s,t)}}fn("ConstNode",Fn);let Bn=null;const Un=new Map;function In(e,t){if(Un.has(e))throw new Error(`Redefinition of node element ${e}`);if("function"!=typeof t)throw new Error(`Node element ${e} is not a function`);Un.set(e,t)}const Ln=e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Dn={setup(e,t){const s=t.shift();return e(ar(s),...t)},get(e,t,s){if("string"==typeof t&&void 0===e[t]){if(!0!==e.isStackNode&&"assign"===t)return(...e)=>Bn.assign(s,...e);if(Un.has(t)){const n=Un.get(t);return e.isStackNode?(...e)=>s.add(n(...e)):(...e)=>n(s,...e)}if("self"===t)return e;if(t.endsWith("Assign")&&Un.has(t.slice(0,t.length-6))){const n=Un.get(t.slice(0,t.length-6));return e.isStackNode?(...e)=>s.assign(e[0],n(...e)):(...e)=>s.assign(n(s,...e))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=Ln(t),or(new Mn(s,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=(t=Ln(t.slice(3).toLowerCase())).split("").sort().join(""),s=>or(new On(e,t,s));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),or(new Mn(e,t));if(!0===/^\d+$/.test(t))return or(new An(s,new Fn(Number(t),"uint")))}return Reflect.get(e,t,s)},set:(e,t,s,n)=>"string"!=typeof t||void 0!==e[t]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(t)&&"width"!==t&&"height"!==t&&"depth"!==t&&!0!==/^\d+$/.test(t)?Reflect.set(e,t,s,n):(n[t].assign(s),!0)},Pn=new WeakMap,Gn=new WeakMap,kn=function(e,t=null){for(const s in e)e[s]=or(e[s],t);return e},Vn=function(e,t=null){const s=e.length;for(let n=0;n<s;n++)e[n]=or(e[n],t);return e},zn=function(e,t=null,s=null,n=null){const r=e=>or(null!==n?Object.assign(e,n):e);return null===t?(...t)=>r(new e(...ur(t))):null!==s?(s=or(s),(...n)=>r(new e(t,...ur(n),s))):(...s)=>r(new e(t,...ur(s)))},$n=function(e,...t){return or(new e(...ur(t)))};class Hn extends gn{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){const{outputNode:t}=e.getNodeProperties(this);return t?t.getNodeType(e):super.getNodeType(e)}call(e){const{shaderNode:t,inputNodes:s}=this;if(t.layout){let n=Gn.get(e.constructor);void 0===n&&(n=new WeakMap,Gn.set(e.constructor,n));let r=n.get(t);return void 0===r&&(r=or(e.buildFunctionNode(t)),n.set(t,r)),or(r.call(s))}const n=t.jsFunc,r=null!==s?n(s,e.stack,e):n(e.stack,e);return or(r)}setup(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);return null===s?this.call(e).build(e,t):super.generate(e,t)}}class Wn extends gn{constructor(e){super(),this.jsFunc=e,this.layout=null}get isArrayInput(){return/^\(\s+?\[/.test(this.jsFunc.toString())}setLayout(e){return this.layout=e,this}call(e=null){return ar(e),or(new Hn(this,e))}setup(){return this.call()}}const jn=[!1,!0],qn=[0,1,2,3],Xn=[-1,-2],Yn=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],Kn=new Map;for(const e of jn)Kn.set(e,new Fn(e));const Qn=new Map;for(const e of qn)Qn.set(e,new Fn(e,"uint"));const Zn=new Map([...Qn].map((e=>new Fn(e.value,"int"))));for(const e of Xn)Zn.set(e,new Fn(e,"int"));const Jn=new Map([...Zn].map((e=>new Fn(e.value))));for(const e of Yn)Jn.set(e,new Fn(e));for(const e of Yn)Jn.set(-e,new Fn(-e));const er={bool:Kn,uint:Qn,ints:Zn,float:Jn},tr=new Map([...Kn,...Jn]),sr=(e,t)=>tr.has(e)?tr.get(e):!0===e.isNode?e:new Fn(e,t),nr=function(e,t=null){return(...s)=>{if((0===s.length||!["bool","float","int","uint"].includes(e)&&s.every((e=>"object"!=typeof e)))&&(s=[ln(e,...s)]),1===s.length&&null!==t&&t.has(s[0]))return or(t.get(s[0]));if(1===s.length){const t=sr(s[0],e);return(e=>{try{return e.getNodeType()}catch(e){return}})(t)===e?or(t):or(new Rn(t,e))}const n=s.map((e=>sr(e)));return or(new En(n,e))}},rr=e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null;function ir(e){return new Proxy(new Wn(e),Dn)}const or=(e,t=null)=>function(e,t=null){const s=un(e);if("node"===s){let t=Pn.get(e);return void 0===t&&(t=new Proxy(e,Dn),Pn.set(e,t),Pn.set(t,t)),t}return null===t&&("float"===s||"boolean"===s)||s&&"shader"!==s&&"string"!==s?or(sr(e,t)):"shader"===s?hr(e):e}(e,t),ar=(e,t=null)=>new kn(e,t),ur=(e,t=null)=>new Vn(e,t),lr=(...e)=>new zn(...e),cr=(...e)=>new $n(...e),dr=e=>new ir(e),hr=e=>{const t=new ir(e),s=(...e)=>{let s;return ar(e),s=e[0]&&e[0].isNode?[...e]:e[0],t.call(s)};return s.shaderNode=t,s.setLayout=e=>(t.setLayout(e),s),s};fn("ShaderNode",ir);const pr=e=>Bn=e,mr=()=>Bn,gr=(...e)=>Bn.if(...e);function fr(e){return Bn&&Bn.add(e),e}In("append",fr);const xr=new nr("color"),br=new nr("float",er.float),Tr=new nr("int",er.int),_r=new nr("uint",er.uint),yr=new nr("bool",er.bool),Nr=new nr("vec2"),vr=new nr("ivec2"),Sr=new nr("uvec2"),Ar=new nr("bvec2"),Rr=new nr("vec3"),Cr=new nr("ivec3"),Er=new nr("uvec3"),wr=new nr("bvec3"),Mr=new nr("vec4"),Or=new nr("ivec4"),Fr=new nr("uvec4"),Br=new nr("bvec4"),Ur=new nr("mat3"),Ir=new nr("imat3"),Lr=new nr("umat3"),Dr=new nr("bmat3"),Pr=new nr("mat4"),Gr=new nr("imat4"),kr=new nr("umat4"),Vr=new nr("bmat4"),zr=(e="")=>or(new Fn(e,"string")),$r=e=>or(new Fn(e,"ArrayBuffer"));In("color",xr),In("float",br),In("int",Tr),In("uint",_r),In("bool",yr),In("vec2",Nr),In("ivec2",vr),In("uvec2",Sr),In("bvec2",Ar),In("vec3",Rr),In("ivec3",Cr),In("uvec3",Er),In("bvec3",wr),In("vec4",Mr),In("ivec4",Or),In("uvec4",Fr),In("bvec4",Br),In("mat3",Ur),In("imat3",Ir),In("umat3",Lr),In("bmat3",Dr),In("mat4",Pr),In("imat4",Gr),In("umat4",kr),In("bmat4",Vr),In("string",zr),In("arrayBuffer",$r);const Hr=lr(An),Wr=(e,t)=>or(new Rn(or(e),t)),jr=(e,t)=>or(new Mn(or(e),t));In("element",Hr),In("convert",Wr);class qr extends bn{constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.groupNode=Sn}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}generate(e,t){const s=this.getNodeType(e),n=this.getUniformHash(e);let r=e.getNodeFromHash(n);void 0===r&&(e.setHashNode(this,n),r=this);const i=r.getInputType(e),o=e.getUniformFromNode(r,i,e.shaderStage,e.context.label),a=e.getPropertyName(o);return void 0!==e.context.label&&delete e.context.label,e.format(a,s,t)}}const Xr=(e,t)=>{const s=rr(t||e),n=e&&!0===e.isNode?e.node&&e.node.value||e.value:e;return or(new qr(n,s))};fn("UniformNode",qr);class Yr extends qr{constructor(e=[]){super(),this.isArrayUniformNode=!0,this.nodes=e}getNodeType(e){return this.nodes[0].getNodeType(e)}}fn("ArrayUniformNode",Yr);class Kr extends Cn{constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return"void"!==t?this.targetNode.getNodeType(e):"void"}generate(e,t){const s=this.targetNode,n=this.sourceNode,r=s.getNodeType(e),i=s.build(e),o=`${i} = ${n.build(e,r)}`;if("void"!==t){return"void"===n.getNodeType(e)?(e.addLineFlowCode(o),i):e.format(o,r,t)}e.addLineFlowCode(o)}}const Qr=lr(Kr);fn("AssignNode",Kr),In("assign",Qr);class Zr extends gn{constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{name:t,node:s}=this,n=this.getNodeType(e),r=e.getVaryingFromNode(this,n);r.needsInterpolation||(r.needsInterpolation="fragment"===e.shaderStage),null!==t&&(r.name=t);const i=e.getPropertyName(r,Zs.VERTEX);return e.flowNodeFromShaderStage(Zs.VERTEX,s,n,i),e.getPropertyName(r)}}const Jr=lr(Zr);In("varying",Jr),fn("VaryingNode",Zr);class ei extends gn{constructor(e,t=null){super(t),this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=super.getNodeType(e);if(null===t){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const n=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(n)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const n=e.geometry.getAttribute(t),r=e.getTypeFromAttribute(n),i=e.getAttribute(t,r);if("vertex"===e.shaderStage)return e.format(i.name,r,s);return Jr(this).build(e,s)}return e.generateConst(s)}}const ti=(e,t)=>or(new ei(e,t));fn("AttributeNode",ei);class si extends gn{constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t),this.outputNode.build(e)}}const ni=lr(si);In("bypass",ni),fn("BypassNode",si);let ri=0;class ii{constructor(){this.id=ri++,this.nodesData=new WeakMap}getNodeData(e){return this.nodesData.get(e)}setNodeData(e,t){this.nodesData.set(e,t)}}class oi extends gn{constructor(e,t=new ii){super(),this.isCacheNode=!0,this.node=e,this.cache=t}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const s=e.getCache();e.setCache(this.cache);const n=this.node.build(e,...t);return e.setCache(s),n}}const ai=lr(oi);In("cache",ai),fn("CacheNode",oi);class ui extends gn{constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.context=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.context});const s=this.node.build(e);return e.setContext(t),s}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.context});const n=this.node.build(e,t);return e.setContext(s),n}}const li=lr(ui),ci=(e,t)=>li(e,{label:t});In("context",li),In("label",ci),fn("ContextNode",ui);class di extends gn{constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let n,r;if(s===di.VERTEX)n=e.getVertexIndex();else{if(s!==di.INSTANCE)throw new Error("THREE.IndexNode: Unknown scope: "+s);n=e.getInstanceIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)r=n;else{r=Jr(this).build(e,t)}return r}}di.VERTEX="vertex",di.INSTANCE="instance";const hi=cr(di,di.VERTEX),pi=cr(di,di.INSTANCE);fn("IndexNode",di);class mi{start(){}finish(){}direct(){}indirectDiffuse(){}indirectSpecular(){}ambientOcclusion(){}}class gi extends gn{constructor(e,t=null){super(),this.node=e,this.name=t}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:s}=this,n=e.getVarFromNode(this,s,e.getVectorType(this.getNodeType(e))),r=e.getPropertyName(n),i=t.build(e,n.type);return e.addLineFlowCode(`${r} = ${i}`),r}}const fi=lr(gi);In("temp",fi),In("toVar",((...e)=>fi(...e).append())),fn("VarNode",gi);class xi{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class bi{constructor(e,t,s,n=void 0){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s.getSelf(),this.needsUpdate=n}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class Ti{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class _i extends Ti{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class yi{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}class Ni{constructor(){this.keywords=[],this.nodes=[],this.keywordsCallback={}}getNode(e){let t=this.nodes[e];return void 0===t&&void 0!==this.keywordsCallback[e]&&(t=this.keywordsCallback[e](e),this.nodes[e]=t),t}addKeyword(e,t){return this.keywords.push(e),this.keywordsCallback[e]=t,this}parse(e){const t=this.keywords,s=new RegExp(`\\b${t.join("\\b|\\b")}\\b`,"g"),n=e.match(s),r=[];if(null!==n)for(const e of n){const t=this.getNode(e);void 0!==t&&-1===r.indexOf(t)&&r.push(t)}return r}include(e,t){const s=this.parse(t);for(const t of s)t.build(e)}}class vi extends gn{constructor(e,t=null){super(e),this.name=t,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){return e.getPropertyName(e.getVarFromNode(this,this.name))}}const Si=(e,t)=>or(new vi(e,t)),Ai=cr(vi,"vec4","DiffuseColor"),Ri=cr(vi,"float","Roughness"),Ci=cr(vi,"float","Metalness"),Ei=cr(vi,"float","Clearcoat"),wi=cr(vi,"float","ClearcoatRoughness"),Mi=cr(vi,"vec3","Sheen"),Oi=cr(vi,"float","SheenRoughness"),Fi=cr(vi,"float","Iridescence"),Bi=cr(vi,"float","IridescenceIOR"),Ui=cr(vi,"float","IridescenceThickness"),Ii=cr(vi,"color","SpecularColor"),Li=cr(vi,"float","Shininess"),Di=cr(vi,"vec4","Output"),Pi=cr(vi,"float","dashSize"),Gi=cr(vi,"float","gapSize"),ki=cr(vi,"float","pointWidth");fn("PropertyNode",vi);class Vi extends vi{constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const zi=(e,t)=>or(new Vi(e,t));fn("ParameterNode",Vi);class $i extends ei{constructor(e=0){super(null,"vec2"),this.isUVNode=!0,this.index=e}getAttributeName(){const e=this.index;return"uv"+(e>0?e:"")}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const Hi=(...e)=>or(new $i(...e));fn("UVNode",$i);class Wi extends gn{constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),n=this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${n} )`,this.getNodeType(e),t)}}const ji=lr(Wi);In("textureSize",ji),fn("TextureSizeNode",Wi);class qi extends Cn{constructor(e,t,s,...n){if(super(),this.op=e,n.length>0){let t=s;for(let s=0;s<n.length;s++)t=new qi(e,t,n[s]);s=t}this.aNode=t,this.bNode=s}getNodeType(e,t){const s=this.op,n=this.aNode,r=this.bNode,i=n.getNodeType(e),o=r.getNodeType(e);if("void"===i||"void"===o)return"void";if("%"===s)return i;if("&"===s||"|"===s||"^"===s||">>"===s||"<<"===s)return e.getIntegerType(i);if("=="===s||"&&"===s||"||"===s||"^^"===s)return"bool";if("<"===s||">"===s||"<="===s||">="===s){const s=t?e.getTypeLength(t):Math.max(e.getTypeLength(i),e.getTypeLength(o));return s>1?`bvec${s}`:"bool"}return"float"===i&&e.isMatrix(o)?o:e.isMatrix(i)&&e.isVector(o)?e.getVectorFromMatrix(i):e.isVector(i)&&e.isMatrix(o)?e.getVectorFromMatrix(o):e.getTypeLength(o)>e.getTypeLength(i)?o:i}generate(e,t){const s=this.op,n=this.aNode,r=this.bNode,i=this.getNodeType(e,t);let o=null,a=null;"void"!==i?(o=n.getNodeType(e),a=r.getNodeType(e),"<"===s||">"===s||"<="===s||">="===s||"=="===s?e.isVector(o)?a=o:o=a="float":">>"===s||"<<"===s?(o=i,a=e.changeComponentType(a,"uint")):e.isMatrix(o)&&e.isVector(a)?a=e.getVectorFromMatrix(o):o=e.isVector(o)&&e.isMatrix(a)?e.getVectorFromMatrix(a):a=i):o=a=i;const u=n.build(e,o),l=r.build(e,a),c=e.getTypeLength(t);return"void"!==t?"<"===s&&c>1?e.format(`${e.getMethod("lessThan")}( ${u}, ${l} )`,i,t):"<="===s&&c>1?e.format(`${e.getMethod("lessThanEqual")}( ${u}, ${l} )`,i,t):">"===s&&c>1?e.format(`${e.getMethod("greaterThan")}( ${u}, ${l} )`,i,t):">="===s&&c>1?e.format(`${e.getMethod("greaterThanEqual")}( ${u}, ${l} )`,i,t):e.format(`( ${u} ${this.op} ${l} )`,i,t):"void"!==o?e.format(`${u} ${this.op} ${l}`,i,t):void 0}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Xi=lr(qi,"+"),Yi=lr(qi,"-"),Ki=lr(qi,"*"),Qi=lr(qi,"/"),Zi=lr(qi,"%"),Ji=lr(qi,"=="),eo=lr(qi,"!="),to=lr(qi,"<"),so=lr(qi,">"),no=lr(qi,"<="),ro=lr(qi,">="),io=lr(qi,"&&"),oo=lr(qi,"||"),ao=lr(qi,"^^"),uo=lr(qi,"&"),lo=lr(qi,"|"),co=lr(qi,"^"),ho=lr(qi,"<<"),po=lr(qi,">>");In("add",Xi),In("sub",Yi),In("mul",Ki),In("div",Qi),In("remainder",Zi),In("equal",Ji),In("notEqual",eo),In("lessThan",to),In("greaterThan",so),In("lessThanEqual",no),In("greaterThanEqual",ro),In("and",io),In("or",oo),In("xor",ao),In("bitAnd",uo),In("bitOr",lo),In("bitXor",co),In("shiftLeft",ho),In("shiftRight",po),fn("OperatorNode",qi);class mo extends Cn{constructor(e,t,s=null,n=null){super(),this.method=e,this.aNode=t,this.bNode=s,this.cNode=n}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,n=this.cNode?this.cNode.getNodeType(e):null,r=e.isMatrix(t)?0:e.getTypeLength(t),i=e.isMatrix(s)?0:e.getTypeLength(s),o=e.isMatrix(n)?0:e.getTypeLength(n);return r>i&&r>o?t:i>o?s:o>r?n:t}getNodeType(e){const t=this.method;return t===mo.LENGTH||t===mo.DISTANCE||t===mo.DOT?"float":t===mo.CROSS?"vec3":this.getInputType(e)}generate(e,t){const s=this.method,n=this.getNodeType(e),r=this.getInputType(e),i=this.aNode,o=this.bNode,a=this.cNode,u=!0===e.renderer.isWebGLRenderer;if(s===mo.TRANSFORM_DIRECTION){let s=i,n=o;e.isMatrix(s.getNodeType(e))?n=Mr(Rr(n),0):s=Mr(Rr(s),0);const r=Ki(s,n).xyz;return Co(r).build(e,t)}if(s===mo.NEGATE)return e.format("( - "+i.build(e,r)+" )",n,t);if(s===mo.ONE_MINUS)return Yi(1,i).build(e,t);if(s===mo.RECIPROCAL)return Qi(1,i).build(e,t);if(s===mo.DIFFERENCE)return Io(Yi(i,o)).build(e,t);{const l=[];return s===mo.CROSS?l.push(i.build(e,n),o.build(e,n)):s===mo.STEP?l.push(i.build(e,1===e.getTypeLength(i.getNodeType(e))?"float":r),o.build(e,r)):u&&(s===mo.MIN||s===mo.MAX)||s===mo.MOD?l.push(i.build(e,r),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":r)):s===mo.REFRACT?l.push(i.build(e,r),o.build(e,r),a.build(e,"float")):s===mo.MIX?l.push(i.build(e,r),o.build(e,r),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":r)):(l.push(i.build(e,r)),null!==o&&l.push(o.build(e,r)),null!==a&&l.push(a.build(e,r))),e.format(`${e.getMethod(s)}( ${l.join(", ")} )`,n,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}mo.RADIANS="radians",mo.DEGREES="degrees",mo.EXP="exp",mo.EXP2="exp2",mo.LOG="log",mo.LOG2="log2",mo.SQRT="sqrt",mo.INVERSE_SQRT="inversesqrt",mo.FLOOR="floor",mo.CEIL="ceil",mo.NORMALIZE="normalize",mo.FRACT="fract",mo.SIN="sin",mo.COS="cos",mo.TAN="tan",mo.ASIN="asin",mo.ACOS="acos",mo.ATAN="atan",mo.ABS="abs",mo.SIGN="sign",mo.LENGTH="length",mo.NEGATE="negate",mo.ONE_MINUS="oneMinus",mo.DFDX="dFdx",mo.DFDY="dFdy",mo.ROUND="round",mo.RECIPROCAL="reciprocal",mo.TRUNC="trunc",mo.FWIDTH="fwidth",mo.ATAN2="atan2",mo.MIN="min",mo.MAX="max",mo.MOD="mod",mo.STEP="step",mo.REFLECT="reflect",mo.DISTANCE="distance",mo.DIFFERENCE="difference",mo.DOT="dot",mo.CROSS="cross",mo.POW="pow",mo.TRANSFORM_DIRECTION="transformDirection",mo.MIX="mix",mo.CLAMP="clamp",mo.REFRACT="refract",mo.SMOOTHSTEP="smoothstep",mo.FACEFORWARD="faceforward";const go=br(1e-6),fo=br(1e6),xo=lr(mo,mo.RADIANS),bo=lr(mo,mo.DEGREES),To=lr(mo,mo.EXP),_o=lr(mo,mo.EXP2),yo=lr(mo,mo.LOG),No=lr(mo,mo.LOG2),vo=lr(mo,mo.SQRT),So=lr(mo,mo.INVERSE_SQRT),Ao=lr(mo,mo.FLOOR),Ro=lr(mo,mo.CEIL),Co=lr(mo,mo.NORMALIZE),Eo=lr(mo,mo.FRACT),wo=lr(mo,mo.SIN),Mo=lr(mo,mo.COS),Oo=lr(mo,mo.TAN),Fo=lr(mo,mo.ASIN),Bo=lr(mo,mo.ACOS),Uo=lr(mo,mo.ATAN),Io=lr(mo,mo.ABS),Lo=lr(mo,mo.SIGN),Do=lr(mo,mo.LENGTH),Po=lr(mo,mo.NEGATE),Go=lr(mo,mo.ONE_MINUS),ko=lr(mo,mo.DFDX),Vo=lr(mo,mo.DFDY),zo=lr(mo,mo.ROUND),$o=lr(mo,mo.RECIPROCAL),Ho=lr(mo,mo.TRUNC),Wo=lr(mo,mo.FWIDTH),jo=lr(mo,mo.ATAN2),qo=lr(mo,mo.MIN),Xo=lr(mo,mo.MAX),Yo=lr(mo,mo.MOD),Ko=lr(mo,mo.STEP),Qo=lr(mo,mo.REFLECT),Zo=lr(mo,mo.DISTANCE),Jo=lr(mo,mo.DIFFERENCE),ea=lr(mo,mo.DOT),ta=lr(mo,mo.CROSS),sa=lr(mo,mo.POW),na=lr(mo,mo.POW,2),ra=lr(mo,mo.POW,3),ia=lr(mo,mo.POW,4),oa=lr(mo,mo.TRANSFORM_DIRECTION),aa=lr(mo,mo.MIX),ua=(e,t=0,s=1)=>or(new mo(mo.CLAMP,or(e),or(t),or(s))),la=e=>ua(e),ca=lr(mo,mo.REFRACT),da=lr(mo,mo.SMOOTHSTEP),ha=lr(mo,mo.FACEFORWARD);In("radians",xo),In("degrees",bo),In("exp",To),In("exp2",_o),In("log",yo),In("log2",No),In("sqrt",vo),In("inverseSqrt",So),In("floor",Ao),In("ceil",Ro),In("normalize",Co),In("fract",Eo),In("sin",wo),In("cos",Mo),In("tan",Oo),In("asin",Fo),In("acos",Bo),In("atan",Uo),In("abs",Io),In("sign",Lo),In("length",Do),In("negate",Po),In("oneMinus",Go),In("dFdx",ko),In("dFdy",Vo),In("round",zo),In("reciprocal",$o),In("trunc",Ho),In("fwidth",Wo),In("atan2",jo),In("min",qo),In("max",Xo),In("mod",Yo),In("step",Ko),In("reflect",Qo),In("distance",Zo),In("dot",ea),In("cross",ta),In("pow",sa),In("pow2",na),In("pow3",ra),In("pow4",ia),In("transformDirection",oa),In("mix",((e,t,s)=>aa(t,s,e))),In("clamp",ua),In("refract",ca),In("smoothstep",((e,t,s)=>da(t,s,e))),In("faceForward",ha),In("difference",Jo),In("saturate",la),fn("MathNode",mo);const pa=hr((e=>{const{value:t}=e,{rgb:s}=t,n=s.mul(.9478672986).add(.0521327014).pow(2.4),r=s.mul(.0773993808),i=s.lessThanEqual(.04045),o=aa(n,r,i);return Mr(o,t.a)})),ma=hr((e=>{const{value:t}=e,{rgb:s}=t,n=s.pow(.41666).mul(1.055).sub(.055),r=s.mul(12.92),i=s.lessThanEqual(.0031308),o=aa(n,r,i);return Mr(o,t.a)})),ga=e=>{let t=null;return e===d?t="Linear":e===h&&(t="sRGB"),t},fa=(e,t)=>ga(e)+"To"+ga(t);class xa extends Cn{constructor(e,t){super("vec4"),this.method=e,this.node=t}setup(){const{method:e,node:t}=this;return e===xa.LINEAR_TO_LINEAR?t:ba[e]({value:t})}}xa.LINEAR_TO_LINEAR="LinearToLinear",xa.LINEAR_TO_sRGB="LinearTosRGB",xa.sRGB_TO_LINEAR="sRGBToLinear";const ba={[xa.LINEAR_TO_sRGB]:ma,[xa.sRGB_TO_LINEAR]:pa},Ta=(e,t)=>or(new xa(fa(d,t),or(e))),_a=(e,t)=>or(new xa(fa(t,d),or(e))),ya=lr(xa,xa.LINEAR_TO_sRGB),Na=lr(xa,xa.sRGB_TO_LINEAR);In("linearTosRGB",ya),In("sRGBToLinear",Na),In("linearToColorSpace",Ta),In("colorSpaceToLinear",_a),fn("ColorSpaceNode",xa);class va extends gn{constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),n=this.snippet;if("void"!==s)return e.format(`( ${n} )`,s,t);e.addLineFlowCode(n)}}const Sa=lr(va);fn("ExpressionNode",va);class Aa extends qr{constructor(e){super(0),this.textureNode=e,this.updateType=Js.FRAME}get texture(){return this.textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&void 0!==s.width){const{width:e,height:t}=s;this.value=Math.log2(Math.max(e,t))}}}const Ra=lr(Aa);fn("MaxMipLevelNode",Aa);class Ca extends qr{constructor(e,t=null,s=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.compareNode=null,this.depthNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=Js.NONE,this.setUpdateMatrix(null===t)}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":"vec4"}getInputType(){return"texture"}getDefaultUV(){return Hi(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){const t=this.value;return Xr(t.matrix).mul(Rr(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?Js.FRAME:Js.NONE,this}setup(e){const t=e.getNodeProperties(this);let s=this.uvNode;null!==s&&!0!==e.context.forceUVContext||!e.context.getUV||(s=e.context.getUV(this)),s||(s=this.getDefaultUV()),!0===this.updateMatrix&&(s=this.getTransformedUV(s));let n=this.levelNode;null===n&&e.context.getTextureLevel&&(n=e.context.getTextureLevel(this)),null!==n&&void 0!==e.context.getTextureLevelAlgorithm&&(n=e.context.getTextureLevelAlgorithm(this,n)),t.uvNode=s,t.levelNode=n,t.compareNode=this.compareNode,t.depthNode=this.depthNode}generateSnippet(e,t,s,n,r,i){const o=this.value;let a;return a=n?e.generateTextureLevel(o,t,s,n,r):i?e.generateTextureCompare(o,t,s,i,r):!1===this.sampler?e.generateTextureLoad(o,t,s,r):e.generateTexture(o,t,s,r),a}generateUV(e,t){const s=this.value;return!e.isFlipY()||!0!==s.isFramebufferTexture&&!0!==s.isDepthTexture||(t=t.setY(t.y.fract().oneMinus())),t.build(e,!0===this.sampler?"vec2":"uvec2")}generate(e,t){const s=e.getNodeProperties(this),n=this.value;if(!n||!0!==n.isTexture)throw new Error("TextureNode: Need a three.js texture.");const r=super.generate(e,"property");if("sampler"===t)return r+"_sampler";if(e.isReference(t))return r;{const i=e.getDataFromNode(this);let o=i.propertyName;if(void 0===o){const{uvNode:t,levelNode:n,compareNode:a,depthNode:u}=s,l=this.generateUV(e,t),c=n?n.build(e,"float"):null,d=u?u.build(e,"uint"):null,h=a?a.build(e,"float"):null,p=e.getVarFromNode(this);o=e.getPropertyName(p);const m=this.generateSnippet(e,r,l,c,d,h);e.addLineFlowCode(`${o} = ${m}`),!1!==e.context.tempWrite&&(i.snippet=m,i.propertyName=o)}let a=o;const u=this.getNodeType(e);return e.needsColorSpaceToLinear(n)&&(a=_a(Sa(a,u),n.colorSpace).setup(e).build(e,u)),e.format(a,u,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=e,or(t)}blur(e){const t=this.clone();return t.levelNode=e.mul(Ra(t)),or(t)}level(e){const t=this.clone();return t.levelNode=e,t}size(e){return ji(this,e)}compare(e){const t=this.clone();return t.compareNode=or(e),or(t)}depth(e){const t=this.clone();return t.depthNode=or(e),or(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value]}update(){const e=this.value;!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){return new this.constructor(this.value,this.uvNode,this.levelNode)}}const Ea=lr(Ca),wa=e=>(!0===e.isNode?e:Ea(e)).convert("sampler");In("texture",Ea),fn("TextureNode",Ca);class Ma extends gn{constructor(e,t,s=null){super(),this.property=e,this.uniformType=t,this.object=s,this.reference=null,this.node=null,this.updateType=Js.OBJECT,this.setNodeType(t)}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setNodeType(e){let t=null;t="texture"===e?Ea(null):Xr(e),this.node=t}getNodeType(e){return this.node.getNodeType(e)}update(){this.node.value=this.reference[this.property]}setup(){return this.node}}const Oa=(e,t,s)=>or(new Ma(e,t,s));fn("ReferenceNode",Ma);class Fa extends Ma{constructor(e,t,s=null){super(e,t,s),this.material=s}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}setup(e){const t=null!==this.material?this.material:e.material;return this.node.value=t[this.property],super.setup(e)}}const Ba=(e,t,s)=>or(new Fa(e,t,s));fn("MaterialReferenceNode",Fa);class Ua extends gn{constructor(e=Ua.VIEW_MATRIX,t=null){super(),this.scope=e,this.object3d=t,this.updateType=Js.OBJECT,this._uniformNode=new qr(null)}getNodeType(){const e=this.scope;return e===Ua.WORLD_MATRIX||e===Ua.VIEW_MATRIX?"mat4":e===Ua.NORMAL_MATRIX?"mat3":e===Ua.POSITION||e===Ua.VIEW_POSITION||e===Ua.DIRECTION||e===Ua.SCALE?"vec3":void 0}update(e){const t=this.object3d,s=this._uniformNode,n=this.scope;if(n===Ua.VIEW_MATRIX)s.value=t.modelViewMatrix;else if(n===Ua.NORMAL_MATRIX)s.value=t.normalMatrix;else if(n===Ua.WORLD_MATRIX)s.value=t.matrixWorld;else if(n===Ua.POSITION)s.value=s.value||new i,s.value.setFromMatrixPosition(t.matrixWorld);else if(n===Ua.SCALE)s.value=s.value||new i,s.value.setFromMatrixScale(t.matrixWorld);else if(n===Ua.DIRECTION)s.value=s.value||new i,t.getWorldDirection(s.value);else if(n===Ua.VIEW_POSITION){const n=e.camera;s.value=s.value||new i,s.value.setFromMatrixPosition(t.matrixWorld),s.value.applyMatrix4(n.matrixWorldInverse)}}generate(e){const t=this.scope;return t===Ua.WORLD_MATRIX||t===Ua.VIEW_MATRIX?this._uniformNode.nodeType="mat4":t===Ua.NORMAL_MATRIX?this._uniformNode.nodeType="mat3":t!==Ua.POSITION&&t!==Ua.VIEW_POSITION&&t!==Ua.DIRECTION&&t!==Ua.SCALE||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Ua.VIEW_MATRIX="viewMatrix",Ua.NORMAL_MATRIX="normalMatrix",Ua.WORLD_MATRIX="worldMatrix",Ua.POSITION="position",Ua.SCALE="scale",Ua.VIEW_POSITION="viewPosition",Ua.DIRECTION="direction";const Ia=lr(Ua,Ua.DIRECTION),La=lr(Ua,Ua.VIEW_MATRIX),Da=lr(Ua,Ua.NORMAL_MATRIX),Pa=lr(Ua,Ua.WORLD_MATRIX),Ga=lr(Ua,Ua.POSITION),ka=lr(Ua,Ua.SCALE),Va=lr(Ua,Ua.VIEW_POSITION);fn("Object3DNode",Ua);class za extends Ua{constructor(e=za.POSITION){super(e),this.updateType=Js.RENDER}getNodeType(e){const t=this.scope;return t===za.PROJECTION_MATRIX?"mat4":t===za.NEAR||t===za.FAR?"float":super.getNodeType(e)}update(e){const t=e.camera,s=this._uniformNode,n=this.scope;n===za.VIEW_MATRIX?s.value=t.matrixWorldInverse:n===za.PROJECTION_MATRIX?s.value=t.projectionMatrix:n===za.NEAR?s.value=t.near:n===za.FAR?s.value=t.far:(this.object3d=t,super.update(e))}generate(e){const t=this.scope;return t===za.PROJECTION_MATRIX?this._uniformNode.nodeType="mat4":t!==za.NEAR&&t!==za.FAR||(this._uniformNode.nodeType="float"),super.generate(e)}}za.PROJECTION_MATRIX="projectionMatrix",za.NEAR="near",za.FAR="far";const $a=ci(cr(za,za.PROJECTION_MATRIX),"projectionMatrix"),Ha=cr(za,za.NEAR),Wa=cr(za,za.FAR),ja=cr(za,za.VIEW_MATRIX),qa=cr(za,za.NORMAL_MATRIX),Xa=cr(za,za.WORLD_MATRIX),Ya=cr(za,za.POSITION);fn("CameraNode",za);class Ka extends Ua{constructor(e=Ka.VIEW_MATRIX){super(e)}update(e){this.object3d=e.object,super.update(e)}}const Qa=cr(Ka,Ka.DIRECTION),Za=cr(Ka,Ka.VIEW_MATRIX).label("modelViewMatrix").temp("ModelViewMatrix"),Ja=cr(Ka,Ka.NORMAL_MATRIX),eu=cr(Ka,Ka.WORLD_MATRIX),tu=cr(Ka,Ka.POSITION),su=cr(Ka,Ka.SCALE),nu=cr(Ka,Ka.VIEW_POSITION);fn("ModelNode",Ka);class ru extends gn{constructor(e=ru.LOCAL){super("vec3"),this.scope=e}isGlobal(){return!0}getHash(){return`normal-${this.scope}`}generate(e){const t=this.scope;let s=null;if(t===ru.GEOMETRY)s=ti("normal","vec3");else if(t===ru.LOCAL)s=Jr(iu);else if(t===ru.VIEW){const e=Ja.mul(ou);s=Co(Jr(e))}else if(t===ru.WORLD){const e=au.transformDirection(ja);s=Co(Jr(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}ru.GEOMETRY="geometry",ru.LOCAL="local",ru.VIEW="view",ru.WORLD="world";const iu=cr(ru,ru.GEOMETRY),ou=cr(ru,ru.LOCAL).temp("Normal"),au=cr(ru,ru.VIEW),uu=cr(ru,ru.WORLD),lu=Si("vec3","TransformedNormalView"),cu=lu.transformDirection(ja).normalize(),du=Si("vec3","TransformedClearcoatNormalView");fn("NormalNode",ru);const hu=new Map;class pu extends gn{constructor(e){super(),this.scope=e}getCache(e,t){let s=hu.get(e);return void 0===s&&(s=Ba(e,t),hu.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache("map"===e?"map":e+"Map","texture")}setup(e){const t=e.context.material,s=this.scope;let n=null;if(s===pu.COLOR){const e=this.getColor(s);n=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(s===pu.OPACITY){const e=this.getFloat(s);n=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alpha")):e}else if(s===pu.SPECULAR_STRENGTH)n=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture(s).r:br(1);else if(s===pu.ROUGHNESS){const e=this.getFloat(s);n=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture(s).g):e}else if(s===pu.METALNESS){const e=this.getFloat(s);n=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture(s).b):e}else if(s===pu.EMISSIVE){const e=this.getColor(s);n=t.emissiveMap&&!0===t.emissiveMap.isTexture?e.mul(this.getTexture(s)):e}else if(s===pu.NORMAL)n=t.normalMap?this.getTexture("normal").normalMap(this.getCache("normalScale","vec2")):t.bumpMap?this.getTexture("bump").r.bumpMap(this.getFloat("bumpScale")):au;else if(s===pu.CLEARCOAT){const e=this.getFloat(s);n=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===pu.CLEARCOAT_ROUGHNESS){const e=this.getFloat(s);n=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===pu.CLEARCOAT_NORMAL)n=t.clearcoatNormalMap?this.getTexture(s).normalMap(this.getCache(s+"Scale","vec2")):au;else if(s===pu.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));n=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColor").rgb):e}else if(s===pu.SHEEN_ROUGHNESS){const e=this.getFloat(s);n=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture(s).a):e,n=n.clamp(.07,1)}else if(s===pu.IRIDESCENCE_THICKNESS){const e=Oa(1,"float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const r=Oa(0,"float",t.iridescenceThicknessRange);n=e.sub(r).mul(this.getTexture(s).g).add(r)}else n=e}else{const t=this.getNodeType(e);n=this.getCache(s,t)}return n}}pu.ALPHA_TEST="alphaTest",pu.COLOR="color",pu.OPACITY="opacity",pu.SHININESS="shininess",pu.SPECULAR_COLOR="specular",pu.SPECULAR_STRENGTH="specularStrength",pu.REFLECTIVITY="reflectivity",pu.ROUGHNESS="roughness",pu.METALNESS="metalness",pu.NORMAL="normal",pu.CLEARCOAT="clearcoat",pu.CLEARCOAT_ROUGHNESS="clearcoatRoughness",pu.CLEARCOAT_NORMAL="clearcoatNormal",pu.EMISSIVE="emissive",pu.ROTATION="rotation",pu.SHEEN="sheen",pu.SHEEN_ROUGHNESS="sheenRoughness",pu.IRIDESCENCE="iridescence",pu.IRIDESCENCE_IOR="iridescenceIOR",pu.IRIDESCENCE_THICKNESS="iridescenceThickness",pu.LINE_SCALE="scale",pu.LINE_DASH_SIZE="dashSize",pu.LINE_GAP_SIZE="gapSize",pu.LINE_WIDTH="linewidth",pu.LINE_DASH_OFFSET="dashOffset",pu.POINT_WIDTH="pointWidth";const mu=cr(pu,pu.ALPHA_TEST),gu=cr(pu,pu.COLOR),fu=cr(pu,pu.SHININESS),xu=cr(pu,pu.EMISSIVE),bu=cr(pu,pu.OPACITY),Tu=cr(pu,pu.SPECULAR_COLOR),_u=cr(pu,pu.SPECULAR_STRENGTH),yu=cr(pu,pu.REFLECTIVITY),Nu=cr(pu,pu.ROUGHNESS),vu=cr(pu,pu.METALNESS),Su=cr(pu,pu.NORMAL),Au=cr(pu,pu.CLEARCOAT),Ru=cr(pu,pu.CLEARCOAT_ROUGHNESS),Cu=cr(pu,pu.CLEARCOAT_NORMAL),Eu=cr(pu,pu.ROTATION),wu=cr(pu,pu.SHEEN),Mu=cr(pu,pu.SHEEN_ROUGHNESS),Ou=cr(pu,pu.IRIDESCENCE),Fu=cr(pu,pu.IRIDESCENCE_IOR),Bu=cr(pu,pu.IRIDESCENCE_THICKNESS),Uu=cr(pu,pu.LINE_SCALE),Iu=cr(pu,pu.LINE_DASH_SIZE),Lu=cr(pu,pu.LINE_GAP_SIZE),Du=cr(pu,pu.LINE_WIDTH),Pu=cr(pu,pu.LINE_DASH_OFFSET),Gu=cr(pu,pu.POINT_WIDTH);fn("MaterialNode",pu);class ku extends gn{constructor(e=ku.LOCAL){super("vec3"),this.scope=e}isGlobal(){return!0}getHash(){return`position-${this.scope}`}generate(e){const t=this.scope;let s=null;if(t===ku.GEOMETRY)s=ti("position","vec3");else if(t===ku.LOCAL)s=Jr(Vu);else if(t===ku.WORLD){const e=eu.mul(zu);s=Jr(e)}else if(t===ku.VIEW){const e=Za.mul(zu);s=Jr(e)}else if(t===ku.VIEW_DIRECTION){const e=Wu.negate();s=Co(Jr(e))}else if(t===ku.WORLD_DIRECTION){const e=zu.transformDirection(eu);s=Co(Jr(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}ku.GEOMETRY="geometry",ku.LOCAL="local",ku.WORLD="world",ku.WORLD_DIRECTION="worldDirection",ku.VIEW="view",ku.VIEW_DIRECTION="viewDirection";const Vu=cr(ku,ku.GEOMETRY),zu=cr(ku,ku.LOCAL).temp("Position"),$u=cr(ku,ku.WORLD),Hu=cr(ku,ku.WORLD_DIRECTION),Wu=cr(ku,ku.VIEW),ju=cr(ku,ku.VIEW_DIRECTION);fn("PositionNode",ku);class qu extends Cn{constructor(e=zu){super("vec4"),this.positionNode=e}setup(){return $a.mul(Za).mul(this.positionNode)}}const Xu=lr(qu);fn("ModelViewProjectionNode",qu);class Yu extends bn{constructor(e,t=null,s=0,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=n,this.usage=p,this.instanced=!1,this.attribute=null,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),s=this.value,n=e.getTypeLength(t),r=this.bufferStride||n,i=this.bufferOffset,o=!0===s.isInterleavedBuffer?s:new m(s,r),a=new g(o,n,i);o.setUsage(this.usage),this.attribute=a,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),n=e.getPropertyName(s);let r=null;if("vertex"===e.shaderStage)r=n;else{r=Jr(this).build(e,t)}return r}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this}setInstanced(e){return this.instanced=e,this}}const Ku=(e,t,s,n)=>or(new Yu(e,t,s,n)),Qu=(t,s,n,r)=>Ku(t,s,n,r).setUsage(e),Zu=(e,t,s,n)=>Ku(e,t,s,n).setInstanced(!0),Ju=(e,t,s,n)=>Qu(e,t,s,n).setInstanced(!0);In("toAttribute",(e=>Ku(e.value))),fn("BufferAttributeNode",Yu);class el extends gn{constructor(e){super("void"),this.instanceMesh=e,this.instanceMatrixNode=null}setup(){let t=this.instanceMatrixNode;if(null===t){const s=this.instanceMesh.instanceMatrix,n=new f(s.array,16,1),r=s.usage===e?Ju:Zu,i=[r(n,"vec4",16,0),r(n,"vec4",16,4),r(n,"vec4",16,8),r(n,"vec4",16,12)];t=Pr(...i),this.instanceMatrixNode=t}const s=t.mul(zu).xyz,n=Ur(t[0].xyz,t[1].xyz,t[2].xyz),r=ou.div(Rr(n[0].dot(n[0]),n[1].dot(n[1]),n[2].dot(n[2]))),i=n.mul(r).xyz;zu.assign(s),ou.assign(i)}}const tl=lr(el);fn("InstanceNode",el);class sl extends qr{constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getInputType(){return"buffer"}}const nl=(e,t,s)=>or(new sl(e,t,s));fn("BufferNode",sl);class rl extends gn{constructor(e=rl.LOCAL){super(),this.scope=e}getHash(){return`tangent-${this.scope}`}getNodeType(){return this.scope===rl.GEOMETRY?"vec4":"vec3"}generate(e){const t=this.scope;let s=null;if(t===rl.GEOMETRY)s=ti("tangent","vec4");else if(t===rl.LOCAL)s=Jr(il.xyz);else if(t===rl.VIEW){const e=Za.mul(ol).xyz;s=Co(Jr(e))}else if(t===rl.WORLD){const e=al.transformDirection(ja);s=Co(Jr(e))}return s.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}rl.GEOMETRY="geometry",rl.LOCAL="local",rl.VIEW="view",rl.WORLD="world";const il=cr(rl,rl.GEOMETRY),ol=cr(rl,rl.LOCAL),al=cr(rl,rl.VIEW),ul=cr(rl,rl.WORLD),ll=fi(al,"TransformedTangentView"),cl=Co(ll.transformDirection(ja));fn("TangentNode",rl);class dl extends gn{constructor(e){super("void"),this.skinnedMesh=e,this.updateType=Js.OBJECT,this.skinIndexNode=ti("skinIndex","uvec4"),this.skinWeightNode=ti("skinWeight","vec4"),this.bindMatrixNode=Xr(e.bindMatrix,"mat4"),this.bindMatrixInverseNode=Xr(e.bindMatrixInverse,"mat4"),this.boneMatricesNode=nl(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)}setup(e){const{skinIndexNode:t,skinWeightNode:s,bindMatrixNode:n,bindMatrixInverseNode:r,boneMatricesNode:i}=this,o=i.element(t.x),a=i.element(t.y),u=i.element(t.z),l=i.element(t.w),c=n.mul(zu),d=Xi(o.mul(s.x).mul(c),a.mul(s.y).mul(c),u.mul(s.z).mul(c),l.mul(s.w).mul(c)),h=r.mul(d).xyz;let p=Xi(s.x.mul(o),s.y.mul(a),s.z.mul(u),s.w.mul(l));p=r.mul(p).mul(n);const m=p.transformDirection(ou).xyz;zu.assign(h),ou.assign(m),e.hasGeometryAttribute("tangent")&&ol.assign(m)}generate(e,t){if("void"!==t)return zu.build(e,t)}update(){this.skinnedMesh.skeleton.update()}}const hl=lr(dl);fn("SkinningNode",dl);class pl extends gn{constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=Xr(1),this.updateType=Js.OBJECT}setupAttribute(e,t=zu){const s=this.mesh,n=s.geometry.morphAttributes[e];t.mulAssign(this.morphBaseInfluence);for(let e=0;e<n.length;e++){const r=n[e],i=Ku(r.array,"vec3"),o=Oa(e,"float",s.morphTargetInfluences);t.addAssign(i.mul(o))}}setup(){this.setupAttribute("position")}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce(((e,t)=>e+t),0)}}const ml=lr(pl);fn("MorphNode",pl);class gl extends gn{constructor(){super("vec3")}getHash(){return"reflectVector"}setup(){return ju.negate().reflect(lu).transformDirection(ja)}}const fl=cr(gl);fn("ReflectVectorNode",gl);class xl extends Ca{constructor(e,t=null,s=null){super(e,t,s),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){return fl}setUpdateMatrix(){}generateUV(e,t){return Rr(t.x.negate(),t.yz).build(e,"vec3")}}const bl=lr(xl);In("cubeTexture",bl),fn("CubeTextureNode",xl);class Tl extends gn{constructor(){super("vec3")}generate(){}}fn("LightingNode",Tl);let _l=null;class yl extends Tl{constructor(e=null){super(),this.updateType=Js.FRAME,this.light=e,this.rtt=null,this.shadowNode=null,this.color=new n,this._defaultColorNode=Xr(this.color),this.colorNode=this._defaultColorNode,this.isAnalyticLightNode=!0}getCacheKey(){return super.getCacheKey()+"-"+this.light.id+"-"+(this.light.castShadow?"1":"0")}getHash(){return this.light.uuid}setupShadow(e){let t=this.shadowNode;if(null===t){null===_l&&(_l=e.createNodeMaterial("MeshBasicNodeMaterial"));const s=this.light.shadow,n=e.getRenderTarget(s.mapSize.width,s.mapSize.height),r=new x;r.minFilter=b,r.magFilter=b,r.image.width=s.mapSize.width,r.image.height=s.mapSize.height,r.compareFunction=T,n.depthTexture=r,s.camera.updateProjectionMatrix();const i=Oa("bias","float",s),o=Oa("normalBias","float",s);let a=Xr(s.matrix).mul($u.add(uu.mul(o)));a=a.xyz.div(a.w);const u=a.x.greaterThanEqual(0).and(a.x.lessThanEqual(1)).and(a.y.greaterThanEqual(0)).and(a.y.lessThanEqual(1)).and(a.z.lessThanEqual(1));let l=a.z.add(i);e.renderer.coordinateSystem===_&&(l=l.mul(2).sub(1)),a=Rr(a.x,a.y.oneMinus(),l);const c=(e,t,s)=>Ea(e,t).compare(s);t=c(r,a.xy,a.z),this.rtt=n,this.colorNode=this.colorNode.mul(u.mix(1,t)),this.shadowNode=t,this.updateBeforeType=Js.RENDER}}setup(e){this.light.castShadow?this.setupShadow(e):null!==this.shadowNode&&this.disposeShadow()}updateShadow(e){const{rtt:t,light:s}=this,{renderer:n,scene:r}=e,i=r.overrideMaterial;r.overrideMaterial=_l,t.setSize(s.shadow.mapSize.width,s.shadow.mapSize.height),s.shadow.updateMatrices(s);const o=n.getRenderTarget(),a=n.getRenderObjectFunction();n.setRenderObjectFunction(((e,...t)=>{!0===e.castShadow&&n.renderObject(e,...t)})),n.setRenderTarget(t),n.render(r,s.shadow.camera),n.setRenderTarget(o),n.setRenderObjectFunction(a),r.overrideMaterial=i}disposeShadow(){this.rtt.dispose(),this.shadowNode=null,this.rtt=null,this.colorNode=this._defaultColorNode}updateBefore(e){const{light:t}=this;t.castShadow&&this.updateShadow(e)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}fn("AnalyticLightNode",yl);const Nl=new WeakMap;class vl extends gn{constructor(e=[]){super("vec3"),this.totalDiffuseNode=Rr().temp("totalDiffuse"),this.totalSpecularNode=Rr().temp("totalSpecular"),this.outgoingLightNode=Rr().temp("outgoingLight"),this.lightNodes=e,this._hash=null}get hasLight(){return this.lightNodes.length>0}getHash(){if(null===this._hash){const e=[];for(const t of this.lightNodes)e.push(t.getHash());this._hash="lights-"+e.join(",")}return this._hash}setup(e){const t=e.context,s=t.lightingModel;let n=this.outgoingLightNode;if(s){const{lightNodes:r,totalDiffuseNode:i,totalSpecularNode:o}=this;t.outgoingLight=n;const a=e.addStack();s.start(t,a,e);for(const t of r)t.build(e);s.indirectDiffuse(t,a,e),s.indirectSpecular(t,a,e),s.ambientOcclusion(t,a,e);const{backdrop:u,backdropAlpha:l}=t,{directDiffuse:c,directSpecular:d,indirectDiffuse:h,indirectSpecular:p}=t.reflectedLight;let m=c.add(h);null!==u&&(m=Rr(null!==l?l.mix(m,u):u)),i.assign(m),o.assign(d.add(p)),n.assign(i.add(o)),s.finish(t,a,e),n=n.bypass(e.removeStack())}return n}_getLightNodeById(e){for(const t of this.lightNodes)if(t.isAnalyticLightNode&&t.light.id===e)return t;return null}fromLights(e=[]){const t=[];e=(e=>e.sort(((e,t)=>e.id-t.id)))(e);for(const s of e){let e=this._getLightNodeById(s.id);if(null===e){const t=s.constructor,n=Nl.has(t)?Nl.get(t):yl;e=or(new n(s))}t.push(e)}return this.lightNodes=t,this._hash=null,this}}const Sl=e=>or((new vl).fromLights(e)),Al=lr(vl);function Rl(e,t){if(Nl.has(e))throw new Error(`Redefinition of light node ${t.type}`);if("function"!=typeof e)throw new Error(`Light ${e.name} is not a class`);if("function"!=typeof t||!t.type)throw new Error(`Light node ${t.type} is not a class`);Nl.set(e,t)}class Cl extends Tl{constructor(e=null){super(),this.aoNode=e}setup(e){const t=this.aoNode.x.sub(1).mul(1).add(1);e.context.ambientOcclusion.mulAssign(t)}}fn("AONode",Cl);class El extends ui{constructor(e,t=null,s=null,n=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=n,this._context=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s={directDiffuse:Rr().temp("directDiffuse"),directSpecular:Rr().temp("directSpecular"),indirectDiffuse:Rr().temp("indirectDiffuse"),indirectSpecular:Rr().temp("indirectSpecular")};return{radiance:Rr().temp("radiance"),irradiance:Rr().temp("irradiance"),iblIrradiance:Rr().temp("iblIrradiance"),ambientOcclusion:br(1).temp("ambientOcclusion"),reflectedLight:s,backdrop:e,backdropAlpha:t}}setup(e){return this.context=this._context||(this._context=this.getContext()),this.context.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const wl=lr(El);In("lightingContext",wl),fn("LightingContextNode",El);class Ml extends Cn{constructor(e=Hu){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(2*Math.PI)).add(.5),s=e.y.negate().clamp(-1,1).asin().mul(1/Math.PI).add(.5);return Nr(t,s)}}const Ol=lr(Ml);fn("EquirectUVNode",Ml);class Fl extends gn{constructor(e,t=null){super("float"),this.textureNode=e,this.roughnessNode=t}setup(){const{textureNode:e,roughnessNode:t}=this,s=Ra(e),n=t.mul(t).mul(Math.PI).div(t.add(1));return s.add(n.log2()).clamp(0,s)}}const Bl=lr(Fl);fn("SpecularMIPLevelNode",Fl);const Ul=new WeakMap;class Il extends Tl{constructor(e=null){super(),this.envNode=e}setup(e){let t=this.envNode;if(t.isTextureNode&&!0!==t.value.isCubeTexture){let s=Ul.get(t.value);if(void 0===s){const n=t.value,r=e.renderer,i=e.getCubeRenderTarget(512).fromEquirectangularTexture(r,n);s=bl(i.texture),Ul.set(t.value,s)}t=s}const s=Oa("envMapIntensity","float",e.material),n=li(t,Ll(Ri,lu)).mul(s),r=li(t,Dl(cu)).mul(Math.PI).mul(s),i=ai(n);e.context.radiance.addAssign(i),e.context.iblIrradiance.addAssign(r);const o=e.context.lightingModel.clearcoatRadiance;if(o){const e=li(t,Ll(wi,du)).mul(s),n=ai(e);o.addAssign(n)}}}const Ll=(e,t)=>{let s=null,n=null;return{getUV:r=>{let i=null;return null===s&&(s=ju.negate().reflect(t),s=e.mul(e).mix(s,t).normalize(),s=s.transformDirection(ja)),r.isCubeTextureNode?i=s:r.isTextureNode&&(null===n&&(n=Ol(s)),i=n),i},getTextureLevel:()=>e,getTextureLevelAlgorithm:(e,t)=>Bl(e,t)}},Dl=e=>{let t=null;return{getUV:s=>{let n=null;return s.isCubeTextureNode?n=e:s.isTextureNode&&(null===t&&(t=Ol(e),t=Nr(t.x,t.y.oneMinus())),n=t),n},getTextureLevel:e=>Ra(e)}};fn("EnvironmentNode",Il);const Pl=new Map;class Gl extends y{constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.unlit=this.constructor===Gl.prototype.constructor,this.fog=!0,this.lights=!0,this.normals=!0,this.colorSpace=!0,this.lightsNode=null,this.envNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.outputNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+on(this)}build(e){this.setup(e)}setup(e){let t;if(e.addStack(),e.stack.outputNode=this.setupPosition(e),e.addFlow("vertex",e.removeStack()),e.addStack(),!1===this.unlit){!0===this.normals&&this.setupNormal(e),this.setupDiffuseColor(e),this.setupVariants(e);const s=this.setupLighting(e);t=this.setupOutput(e,Mr(s,Ai.a)),Di.assign(t),null!==this.outputNode&&(t=this.outputNode)}else t=this.setupOutput(e,this.outputNode||Mr(0,0,0,1));e.stack.outputNode=t,e.addFlow("fragment",e.removeStack())}setupPosition(e){const t=e.object,s=t.geometry;return e.addStack(),(s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&ml(t).append(),!0===t.isSkinnedMesh&&hl(t).append(),t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&!0===e.isAvailable("instance")&&tl(t).append(),null!==this.positionNode&&zu.assign(this.positionNode),e.context.vertex=e.removeStack(),this.vertexNode||Xu()}setupDiffuseColor({geometry:e}){let t=this.colorNode?Mr(this.colorNode):gu;!0===this.vertexColors&&e.hasAttribute("color")&&(t=Mr(t.xyz.mul(ti("color")),t.a)),Ai.assign(t);const s=this.opacityNode?br(this.opacityNode):bu;if(Ai.a.assign(Ai.a.mul(s)),null!==this.alphaTestNode||this.alphaTest>0){const e=null!==this.alphaTestNode?br(this.alphaTestNode):mu;Ai.a.lessThanEqual(e).discard()}}setupVariants(){}setupNormal(){if(!0===this.flatShading){const e=Wu.dFdx().cross(Wu.dFdy()).normalize();lu.assign(e)}else{const e=this.normalNode?Rr(this.normalNode):Su;lu.assign(e)}}getEnvNode(e){let t=null;return this.envNode?t=this.envNode:this.envMap?t=this.envMap.isCubeTexture?bl(this.envMap):Ea(this.envMap):e.environmentNode&&(t=e.environmentNode),t}setupLights(e){const t=this.getEnvNode(e),s=[];t&&s.push(new Il(t)),e.material.aoMap&&s.push(new Cl(Ea(e.material.aoMap)));let n=this.lightsNode||e.lightsNode;return s.length>0&&(n=Al([...n.lightNodes,...s])),n}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:n,emissiveNode:r}=this,i=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let o=Ai.rgb;if(i&&!1!==i.hasLight){const t=this.setupLightingModel(e);o=wl(i,t,s,n)}else null!==s&&(o=Rr(null!==n?aa(o,s,n):s));return(r&&!0===r.isNode||t.emissive&&!0===t.emissive.isColor)&&(o=o.add(Rr(r||xu))),o}setupOutput(e,t){const s=e.renderer,n=e.toneMappingNode;if(n&&(t=Mr(n.context({color:t.rgb}),t.a)),!0===this.fog){const s=e.fogNode;s&&(t=Mr(s.mixAssign(t.rgb),t.a))}if(!0===this.colorSpace){const e=s.getRenderTarget();let n;n=null!==e?Array.isArray(e.texture)?e.texture[0].colorSpace:e.texture.colorSpace:s.outputColorSpace,n!==d&&n!==N&&(t=t.linearToColorSpace(n))}return t}setDefaultValues(e){for(const t in e){const s=e[t];void 0===this[t]&&(this[t]=s,s&&s.clone&&(this[t]=s.clone()))}Object.assign(this.defines,e.defines);const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const e in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,e)&&void 0!==t[e].get&&Object.defineProperty(this.constructor.prototype,e,t[e])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const s=v.prototype.toJSON.call(this,e),n=an(this);s.inputNodes={};for(const{property:t,childNode:r}of n)s.inputNodes[t]=r.toJSON(e).uuid;function r(e){const t=[];for(const s in e){const n=e[s];delete n.metadata,t.push(n)}return t}if(t){const t=r(e.textures),n=r(e.images),i=r(e.nodes);t.length>0&&(s.textures=t),n.length>0&&(s.images=n),i.length>0&&(s.nodes=i)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.outputNode=e.outputNode,this.vertexNode=e.vertexNode,super.copy(e)}static fromMaterial(e){if(!0===e.isNodeMaterial)return e;const t=Vl(e.type.replace("Material","NodeMaterial"));if(void 0===t)throw new Error(`NodeMaterial: Material "${e.type}" is not compatible.`);for(const s in e)t[s]=e[s];return t}}function kl(e,t){if("function"!=typeof t||!e)throw new Error(`Node material ${e} is not a class`);if(Pl.has(e))throw new Error(`Redefinition of node material ${e}`);Pl.set(e,t),t.type=e}function Vl(e){const t=Pl.get(e);if(void 0!==t)return new t}kl("NodeMaterial",Gl);class zl{constructor(e,t=null){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class $l extends zl{constructor(e,t=0){super(e,t),this.isFloatUniform=!0,this.boundary=4,this.itemSize=1}}class Hl extends zl{constructor(e,t=new r){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class Wl extends zl{constructor(e,t=new i){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class jl extends zl{constructor(e,t=new o){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class ql extends zl{constructor(e,t=new n){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class Xl extends zl{constructor(e,t=new a){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class Yl extends zl{constructor(e,t=new u){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class Kl extends $l{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Ql extends Hl{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Zl extends Wl{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Jl extends jl{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class ec extends ql{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class tc extends Xl{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class sc extends Yl{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class nc extends gn{constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const t=this.ifNode.getNodeType(e);if(null!==this.elseNode){const s=this.elseNode.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(t))return s}return t}generate(e){const t=this.getNodeType(e),s={tempWrite:!1},{ifNode:n,elseNode:r}=this,i="void"!==n.getNodeType(e)||r&&"void"!==r.getNodeType(e),o=i?Si(t).build(e):"",a=li(this.condNode).build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${a} ) {\n\n`).addFlowTab();let u=li(this.ifNode,s).build(e,t);if(u=i?o+" = "+u+";":u,e.removeFlowTab().addFlowCode(e.tab+"\t"+u+"\n\n"+e.tab+"}"),null!==r){e.addFlowCode(" else {\n\n").addFlowTab();let n=li(r,s).build(e,t);n=o?o+" = "+n+";":n,e.removeFlowTab().addFlowCode(e.tab+"\t"+n+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return o}}const rc=lr(nc);In("cond",rc),fn("CondNode",nc);class ic extends gn{constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}if(e,t){const s=new ir(t);return this._currentCond=rc(e,s),this.add(this._currentCond)}elseif(e,t){const s=new ir(t),n=rc(e,s);return this._currentCond.elseNode=n,this._currentCond=n,this}else(e){return this._currentCond.elseNode=new ir(e),this}build(e,...t){const s=mr();pr(this);for(const t of this.nodes)t.build(e,"void");return pr(s),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}}const oc=lr(ic);fn("StackNode",ic);class ac extends S{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,n=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r=new A(5,5,5),i=Ol(Hu),o=Vl("MeshBasicNodeMaterial");o.colorNode=Ea(t,i,0),o.side=R,o.blending=C;const a=new E(r,o),u=new w;u.add(a),t.minFilter===M&&(t.minFilter=O);return new F(1,10,this).update(e,u),t.minFilter=s,t.currentGenerateMipmaps=n,a.geometry.dispose(),a.material.dispose(),this}}const uc=new Os,lc=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),cc=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),dc=new Set([Int32Array,Uint32Array,Float32Array]),hc=e=>(e=Number(e))+(e%1?"":".0");class pc{constructor(e,t,s,n=null,r=null){this.object=e,this.material=r||e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=n,this.nodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.hashNodes={},this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.toneMappingNode=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:[]},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:[],fragment:[],compute:[]},this.bindingsOffset={vertex:0,fragment:0,compute:0},this.bindingsArray=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=oc(),this.stacks=[],this.tab="\t",this.context={keywords:new Ni,material:this.material},this.cache=new ii,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null}getRenderTarget(e,t,s){return new B(e,t,s)}getCubeRenderTarget(e,t){return new ac(e,t)}includes(e){return this.nodes.includes(e)}_getSharedBindings(e){const t=[];for(const s of e)if(!0===s.shared){const e=s.getNodes();let n=uc.get(e);void 0===n&&(uc.set(e,s),n=s),t.push(n)}else t.push(s);return t}getBindings(){let e=this.bindingsArray;if(null===e){const t=this.bindings;this.bindingsArray=e=this._getSharedBindings(null!==this.material?[...t.vertex,...t.fragment]:t.compute)}return e}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}buildUpdateNodes(){for(const e of this.nodes){const t=e.getUpdateType(),s=e.getUpdateBeforeType();t!==Js.NONE&&this.updateNodes.push(e.getSelf()),s!==Js.NONE&&this.updateBeforeNodes.push(e)}}get currentNode(){return this.chaining[this.chaining.length-1]}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}setCache(e){this.cache=e}getCache(){return this.cache}isAvailable(){return!1}getVertexIndex(){}getInstanceIndex(){}getFrontFacing(){}getFragCoord(){}isFlipY(){return!1}generateTexture(){}generateTextureLod(){}generateConst(e,t=null){if(null===t&&("float"===e||"int"===e||"uint"===e?t=0:"bool"===e?t=!1:"color"===e?t=new n:"vec2"===e?t=new r:"vec3"===e?t=new i:"vec4"===e&&(t=new o)),"float"===e)return hc(t);if("int"===e)return`${Math.round(t)}`;if("uint"===e)return t>=0?`${Math.round(t)}u`:"0u";if("bool"===e)return t?"true":"false";if("color"===e)return`${this.getType("vec3")}( ${hc(t.r)}, ${hc(t.g)}, ${hc(t.b)} )`;const s=this.getTypeLength(e),a=this.getComponentType(e),u=e=>this.generateConst(a,e);if(2===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)} )`;if(3===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)}, ${u(t.z)} )`;if(4===s)return`${this.getType(e)}( ${u(t.x)}, ${u(t.y)}, ${u(t.z)}, ${u(t.w)} )`;if(s>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(u).join(", ")} )`;if(s>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}generateMethod(e){return e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const s=this.attributes;for(const t of s)if(t.name===e)return t;const n=new xi(e,t);return s.push(n),n}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"texture"===e||"cubeTexture"===e}needsColorSpaceToLinear(){return!1}getTextureEncodingFromMap(e){return this.getTextureColorSpaceFromMap(e)===h?U:I}getTextureColorSpaceFromMap(e){let t;return t=e&&e.isTexture?e.colorSpace:e&&e.isWebGLRenderTarget?e.texture.colorSpace:N,t}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;const s=lc.get(e);return("float"===t?"":t[0])+s}getTypeFromArray(e){return cc.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,n=dc.has(s.constructor)?e.itemSize:t.stride||e.itemSize,r=e.normalized;let i;return e instanceof L||!0===r||(i=this.getTypeFromArray(s)),this.getTypeFromLength(n,i)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return null!==s?Number(s[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){return this.stack=oc(this.stack),this.stacks.push(mr()||this.stack),pr(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,pr(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage){const s=e.isGlobal(this)?this.globalCache:this.cache;let n=s.getNodeData(e);return void 0===n&&(n={},s.setNodeData(e,n)),void 0===n[t]&&(n[t]={}),n[t]}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let n=s.bufferAttribute;if(void 0===n){const r=this.uniforms.index++;n=new xi("nodeAttribute"+r,t,e),this.bufferAttributes.push(n),s.bufferAttribute=n}return n}getStructTypeFromNode(e,t=this.shaderStage){const s=this.getDataFromNode(e,t);if(void 0===s.structType){const n=this.structs.index++;e.name=`StructType${n}`,this.structs[t].push(e),s.structType=e}return e}getUniformFromNode(e,t,s=this.shaderStage,n=null){const r=this.getDataFromNode(e,s);let i=r.uniform;if(void 0===i){const o=this.uniforms.index++;i=new bi(n||"nodeUniform"+o,t,e),this.uniforms[s].push(i),r.uniform=i}return i}getVarFromNode(e,t=null,s=e.getNodeType(this),n=this.shaderStage){const r=this.getDataFromNode(e,n);let i=r.variable;if(void 0===i){const e=this.vars[n]||(this.vars[n]=[]);null===t&&(t="nodeVar"+e.length),i=new Ti(t,s),e.push(i),r.variable=i}return i}getVaryingFromNode(e,t){const s=this.getDataFromNode(e,"any");let n=s.varying;if(void 0===n){const e=this.varyings,r=e.length;n=new _i("nodeVarying"+r,t),e.push(n),s.varying=n}return n}getCodeFromNode(e,t,s=this.shaderStage){const n=this.getDataFromNode(e);let r=n.code;if(void 0===r){const e=this.codes[s]||(this.codes[s]=[]),i=e.length;r=new yi("nodeCode"+i,t),e.push(r),n.code=r}return r}addLineFlowCode(e){return""===e||(e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}flowShaderNode(e){const t=e.layout;let s;if(e.isArrayInput){s=[];for(const e of t.inputs)s.push(new Vi(e.type,e.name))}else{s={};for(const e of t.inputs)s[e.name]=new Vi(e.type,e.name)}e.layout=null;const n=e.call(s),r=this.flowStagesNode(n,t.type);return e.layout=t,r}flowStagesNode(e,t=null){const s=this.flow,n=this.vars,r=this.buildStage,i={code:""};this.flow=i,this.vars={};for(const s of sn)this.setBuildStage(s),i.result=e.build(this,t);return i.vars=this.getVars(this.shaderStage),this.flow=s,this.vars=n,this.setBuildStage(r),i}flowChildNode(e,t=null){const s=this.flow,n={code:""};return this.flow=n,n.result=e.build(this,t),this.flow=s,n}flowNodeFromShaderStage(e,t,s=null,n=null){const r=this.shaderStage;this.setShaderStage(e);const i=this.flowChildNode(t,s);return null!==n&&(i.code+=`${this.tab+n} = ${i.result};\n`),this.flowCode[e]=this.flowCode[e]+i.code,this.setShaderStage(r),i}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){}getVaryings(){}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];if(void 0!==s)for(const e of s)t+=`${this.getVar(e.type,e.name)}; `;return t}getUniforms(){}getCodes(e){const t=this.codes[e];let s="";if(void 0!==t)for(const e of t)s+=e.code+"\n";return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){}build(){for(const e of sn){this.setBuildStage(e),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const t of nn){this.setShaderStage(t);const s=this.flowNodes[t];for(const t of s)"generate"===e?this.flowNode(t):t.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t)return new Kl(e);if("vec2"===t)return new Ql(e);if("vec3"===t)return new Zl(e);if("vec4"===t)return new Jl(e);if("color"===t)return new ec(e);if("mat3"===t)return new tc(e);if("mat4"===t)return new sc(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e){return Vl(e)}getPrimitiveType(e){let t;return t="i"===e[0]?"int":"u"===e[0]?"uint":"float",t}format(e,t,s){if((t=this.getVectorType(t))===(s=this.getVectorType(s))||null===s||this.isReference(s))return e;const n=this.getTypeLength(t),r=this.getTypeLength(s);return n>4||r>4||0===r?e:n===r?`${this.getType(s)}( ${e} )`:n>r?this.format(`${e}.${"xyz".slice(0,r)}`,this.getTypeFromLength(r,this.getComponentType(t)),s):4===r&&n>1?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===n?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:(1===n&&r>1&&t[0]!==s[0]&&(e=`${this.getType(this.getPrimitiveType(s))}( ${e} )`),`${this.getType(s)}( ${e} )`)}getSignature(){return`// Three.js r${D} - NodeMaterial System\n`}}class mc{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return void 0===s&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this);if(t===Js.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(e)!==this.frameId&&(t.set(e,this.frameId),e.updateBefore(this))}else if(t===Js.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(e)!==this.renderId&&(t.set(e,this.renderId),e.updateBefore(this))}else t===Js.OBJECT&&e.updateBefore(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this);if(t===Js.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,s);t.get(e)!==this.frameId&&(t.set(e,this.frameId),e.update(this))}else if(t===Js.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,s);t.get(e)!==this.renderId&&(t.set(e,this.renderId),e.update(this))}else t===Js.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class gc{constructor(e,t,s=null,n="",r=!1){this.type=e,this.name=t,this.count=s,this.qualifier=n,this.isConst=r}}gc.isNodeFunctionInput=!0;class fc extends gn{constructor(e){super(),this.types=e,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}fn("StructTypeNode",fc);class xc extends gn{constructor(...e){super(),this.isOutputStructNode=!0,this.members=e}setup(e){super.setup(e);const t=this.members,s=[];for(let n=0;n<t.length;n++)s.push(t[n].getNodeType(e));this.nodeType=e.getStructTypeFromNode(new fc(s)).name}generate(e,t){const s=e.getVarFromNode(this);s.isOutputStructVar=!0;const n=e.getPropertyName(s),r=this.members,i=""!==n?n+".":"";for(let s=0;s<r.length;s++){const n=r[s].build(e,t);e.addLineFlowCode(`${i}m${s} = ${n}`)}return n}}const bc=lr(xc);fn("OutputStructNode",xc);class Tc extends gn{constructor(e){super(),this.seedNode=e}setup(){const e=this.seedNode.uint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).float().mul(1/2**32)}}const _c=lr(Tc);let yc;In("hash",_c),fn("HashNode",Tc);class Nc extends nc{constructor(e){yc=yc||Sa("discard"),super(e,yc)}}const vc=lr(Nc),Sc=e=>vc(e).append();In("discard",Sc),fn("DiscardNode",Nc);class Ac extends gn{constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt()+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const s={};for(let e=0,t=this.params.length-1;e<t;e++){const t=this.params[e],n=!0!==t.isNode&&t.name||this.getVarName(e),r=!0!==t.isNode&&t.type||"int";s[n]=Sa(n,r)}return t.returnsNode=this.params[this.params.length-1](s,e.addStack(),e),t.stackNode=e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,n=t.stackNode;for(let t=0,n=s.length-1;t<n;t++){const n=s[t];let r=null,i=null,o=null,a=null,u=null,l=null;n.isNode?(a="int",o=this.getVarName(t),r="0",i=n.build(e,a),u="<"):(a=n.type||"int",o=n.name||this.getVarName(t),r=n.start,i=n.end,u=n.condition,l=n.update,"number"==typeof r?r=r.toString():r&&r.isNode&&(r=r.build(e,a)),"number"==typeof i?i=i.toString():i&&i.isNode&&(i=i.build(e,a)),void 0!==r&&void 0===i?(r+=" - 1",i="0",u=">="):void 0!==i&&void 0===r&&(r="0",u="<"),void 0===u&&(u=Number(r)>Number(i)?">=":"<"));const c={start:r,end:i,condition:u},d=c.start,h=c.end;let p="",m="",g="";l||(l="int"===a?u.includes("<")?"++":"--":u.includes("<")?"+= 1":"-= 1"),p+=e.getVar(a,o)+" = "+d,m+=o+" "+u+" "+h,g+=o+" "+l;const f=`for ( ${p}; ${m}; ${g} )`;e.addFlowCode((0===t?"\n":"")+e.tab+f+" {\n\n").addFlowTab()}const r=li(n,{tempWrite:!1}).build(e,"void"),i=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+r);for(let t=0,s=this.params.length-1;t<s;t++)e.addFlowCode((0===t?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),i}}const Rc=(...e)=>or(new Ac(ur(e,"int"))).append();In("loop",((e,...t)=>ni(e,Rc(...t)))),fn("LoopNode",Ac);class Cc extends Cn{constructor(){super("vec2")}setup(){const e=Rr(ju.z,0,ju.x.negate()).normalize(),t=ju.cross(e);return Nr(e.dot(lu),t.dot(lu)).mul(.495).add(.5)}}const Ec=cr(Cc);fn("MatcapUVNode",Cc);class wc extends qr{constructor(e=wc.LOCAL,t=1,s=0){super(s),this.scope=e,this.scale=t,this.updateType=Js.FRAME}update(e){const t=this.scope,s=this.scale;t===wc.LOCAL?this.value+=e.deltaTime*s:t===wc.DELTA?this.value=e.deltaTime*s:t===wc.FRAME?this.value=e.frameId:this.value=e.time*s}serialize(e){super.serialize(e),e.scope=this.scope,e.scale=this.scale}deserialize(e){super.deserialize(e),this.scope=e.scope,this.scale=e.scale}}wc.LOCAL="local",wc.GLOBAL="global",wc.DELTA="delta",wc.FRAME="frame";const Mc=(e,t=0)=>or(new wc(wc.LOCAL,e,t)),Oc=(e,t=0)=>or(new wc(wc.GLOBAL,e,t)),Fc=(e,t=0)=>or(new wc(wc.DELTA,e,t)),Bc=cr(wc,wc.FRAME).uint();fn("TimerNode",wc);class Uc extends gn{constructor(e=Uc.SINE,t=Mc()){super(),this.method=e,this.timeNode=t}getNodeType(e){return this.timeNode.getNodeType(e)}setup(){const e=this.method,t=or(this.timeNode);let s=null;return e===Uc.SINE?s=t.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5):e===Uc.SQUARE?s=t.fract().round():e===Uc.TRIANGLE?s=t.add(.5).fract().mul(2).sub(1).abs():e===Uc.SAWTOOTH&&(s=t.fract()),s}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Uc.SINE="sine",Uc.SQUARE="square",Uc.TRIANGLE="triangle",Uc.SAWTOOTH="sawtooth";const Ic=lr(Uc,Uc.SINE),Lc=lr(Uc,Uc.SQUARE),Dc=lr(Uc,Uc.TRIANGLE),Pc=lr(Uc,Uc.SAWTOOTH);fn("OscNode",Uc);class Gc extends Cn{constructor(e,t){super(),this.scope=e,this.node=t}getNodeType(e){return this.node.getNodeType(e)}setup(){const{scope:e,node:t}=this;let s=null;return e===Gc.DIRECTION_TO_COLOR?s=t.mul(.5).add(.5):e===Gc.COLOR_TO_DIRECTION&&(s=t.mul(2).sub(1)),s}}Gc.DIRECTION_TO_COLOR="directionToColor",Gc.COLOR_TO_DIRECTION="colorToDirection";const kc=lr(Gc,Gc.DIRECTION_TO_COLOR),Vc=lr(Gc,Gc.COLOR_TO_DIRECTION);In("directionToColor",kc),In("colorToDirection",Vc),fn("PackingNode",Gc);class zc extends gn{constructor(e,t,s,n,r){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=n,this.outHighNode=r,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:n,outHighNode:r,doClamp:i}=this;let o=e.sub(t).div(s.sub(t));return!0===i&&(o=o.clamp()),o.mul(r.sub(n)).add(n)}}const $c=lr(zc,null,null,{doClamp:!1}),Hc=lr(zc);In("remap",$c),In("remapClamp",Hc),fn("RemapNode",zc);class Wc extends Cn{constructor(e,t,s=Nr(.5)){super("vec2"),this.uvNode=e,this.rotationNode=t,this.centerNode=s}setup(){const{uvNode:e,rotationNode:t,centerNode:s}=this,n=t.cos(),r=t.sin(),i=e.sub(s);return Nr(Nr(n,r).dot(i),Nr(r.negate(),n).dot(i)).add(s)}}const jc=lr(Wc);In("rotateUV",jc),fn("RotateUVNode",Wc);class qc extends gn{constructor(e,t=Hi(),s=br(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:n,height:r}=s,i=e.mod(n.mul(r)).floor(),o=i.mod(n),a=r.sub(i.add(1).div(n).ceil()),u=s.reciprocal(),l=Nr(o,a);return t.add(l).mul(u)}}const Xc=lr(qc);fn("SpriteSheetUVNode",qc);class Yc extends gn{constructor(e,t=null,s=null,n=br(1),r=$u,i=uu){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=s,this.scaleNode=n,this.positionNode=r,this.normalNode=i}setup(){const{textureXNode:e,textureYNode:t,textureZNode:s,scaleNode:n,positionNode:r,normalNode:i}=this;let o=i.abs().normalize();o=o.div(o.dot(Rr(1)));const a=r.yz.mul(n),u=r.zx.mul(n),l=r.xy.mul(n),c=e.value,d=null!==t?t.value:c,h=null!==s?s.value:c,p=Ea(c,a).mul(o.x),m=Ea(d,u).mul(o.y),g=Ea(h,l).mul(o.z);return Xi(p,m,g)}}const Kc=lr(Yc),Qc=(...e)=>Kc(...e);In("triplanarTexture",Qc),fn("TriplanarTexturesNode",Yc);class Zc extends gn{constructor(e=Zc.LOCAL){super("vec3"),this.scope=e}getHash(){return`bitangent-${this.scope}`}generate(e){const t=this.scope;let s;t===Zc.GEOMETRY?s=iu.cross(il):t===Zc.LOCAL?s=ou.cross(ol):t===Zc.VIEW?s=au.cross(al):t===Zc.WORLD&&(s=uu.cross(ul));const n=s.mul(il.w).xyz;return Co(Jr(n)).build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Zc.GEOMETRY="geometry",Zc.LOCAL="local",Zc.VIEW="view",Zc.WORLD="world";const Jc=cr(Zc,Zc.GEOMETRY),ed=cr(Zc,Zc.LOCAL),td=cr(Zc,Zc.VIEW),sd=cr(Zc,Zc.WORLD),nd=Co(lu.cross(ll).mul(il.w)),rd=Co(nd.transformDirection(ja));fn("BitangentNode",Zc);const id=1/6,od=e=>Ki(id,Ki(e,Ki(e,e.negate().add(3)).sub(3)).add(1)),ad=e=>Ki(id,Ki(e,Ki(e,Ki(3,e).sub(6))).add(4)),ud=e=>Ki(id,Ki(e,Ki(e,Ki(-3,e).add(3)).add(3)).add(1)),ld=e=>Ki(id,sa(e,3)),cd=e=>od(e).add(ad(e)),dd=e=>ud(e).add(ld(e)),hd=e=>Xi(-1,ad(e).div(od(e).add(ad(e)))),pd=e=>Xi(1,ld(e).div(ud(e).add(ld(e)))),md=(e,t,s)=>{const n=e.uvNode,r=Ki(n,t.zw).add(.5),i=Ao(r),o=Eo(r),a=cd(o.x),u=dd(o.x),l=hd(o.x),c=pd(o.x),d=hd(o.y),h=pd(o.y),p=Nr(i.x.add(l),i.y.add(d)).sub(.5).mul(t.xy),m=Nr(i.x.add(c),i.y.add(d)).sub(.5).mul(t.xy),g=Nr(i.x.add(l),i.y.add(h)).sub(.5).mul(t.xy),f=Nr(i.x.add(c),i.y.add(h)).sub(.5).mul(t.xy),x=cd(o.y).mul(Xi(a.mul(e.uv(p).level(s)),u.mul(e.uv(m).level(s)))),b=dd(o.y).mul(Xi(a.mul(e.uv(g).level(s)),u.mul(e.uv(f).level(s))));return x.add(b)};class gd extends Cn{constructor(e,t=br(3)){super("vec4"),this.textureNode=e,this.blurNode=t}setup(){return((e,t)=>{const s=Nr(e.size(Tr(t))),n=Nr(e.size(Tr(t.add(1)))),r=Qi(1,s),i=Qi(1,n),o=md(e,Mr(r,s),Ao(t)),a=md(e,Mr(i,n),Ro(t));return Eo(t).mix(o,a)})(this.textureNode,this.blurNode)}}const fd=lr(gd);In("bicubic",fd),fn("TextureBicubicNode",gd);class xd extends gn{constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const bd=cr(xd);fn("PointUVNode",xd);class Td extends gn{constructor(e=Td.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=null!==this.scene?this.scene:e.scene;let n;return t===Td.BACKGROUND_BLURRINESS?n=Oa("backgroundBlurriness","float",s):t===Td.BACKGROUND_INTENSITY&&(n=Oa("backgroundIntensity","float",s)),n}}Td.BACKGROUND_BLURRINESS="backgroundBlurriness",Td.BACKGROUND_INTENSITY="backgroundIntensity";const _d=cr(Td,Td.BACKGROUND_BLURRINESS),yd=cr(Td,Td.BACKGROUND_INTENSITY);fn("SceneNode",Td);class Nd extends sl{constructor(e,t,s=0){super(e,t,s),this.isStorageBufferNode=!0}getInputType(){return"storageBuffer"}}const vd=(e,t,s)=>or(new Nd(e,t,s));fn("StorageBufferNode",Nd);class Sd extends Ca{constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStoreTextureNode=!0}getNodeType(){return"void"}}const Ad=lr(Sd);fn("TextureStoreNode",Sd);class Rd extends Ma{constructor(e,t,s=null){super(e,t,s),this.userData=s}update(e){this.reference=null!==this.userData?this.userData:e.object.userData,super.update(e)}}const Cd=(e,t,s)=>or(new Rd(e,t,s));fn("UserDataNode",Rd);const Ed=hr((({base:e,blend:t})=>{const s=s=>t[s].lessThan(go).cond(t[s],e[s].oneMinus().div(t[s]).oneMinus().max(0));return Rr(s("x"),s("y"),s("z"))})),wd=hr((({base:e,blend:t})=>{const s=s=>t[s].equal(1).cond(t[s],e[s].div(t[s].oneMinus()).max(0));return Rr(s("x"),s("y"),s("z"))})),Md=hr((({base:e,blend:t})=>{const s=s=>e[s].oneMinus().mul(t[s].oneMinus()).oneMinus();return Rr(s("x"),s("y"),s("z"))})),Od=hr((({base:e,blend:t})=>{const s=s=>e[s].lessThan(.5).cond(e[s].mul(t[s],2),e[s].oneMinus().mul(t[s].oneMinus()).oneMinus());return Rr(s("x"),s("y"),s("z"))}));class Fd extends Cn{constructor(e,t,s){super(),this.blendMode=e,this.baseNode=t,this.blendNode=s}setup(){const{blendMode:e,baseNode:t,blendNode:s}=this,n={base:t,blend:s};let r=null;return e===Fd.BURN?r=Ed(n):e===Fd.DODGE?r=wd(n):e===Fd.SCREEN?r=Md(n):e===Fd.OVERLAY&&(r=Od(n)),r}}Fd.BURN="burn",Fd.DODGE="dodge",Fd.SCREEN="screen",Fd.OVERLAY="overlay";const Bd=lr(Fd,Fd.BURN),Ud=lr(Fd,Fd.DODGE),Id=lr(Fd,Fd.OVERLAY),Ld=lr(Fd,Fd.SCREEN);In("burn",Bd),In("dodge",Ud),In("overlay",Id),In("screen",Ld),fn("BlendModeNode",Fd);class Dd extends gn{constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){return e.getFrontFacing()}}const Pd=cr(Dd),Gd=br(Pd).mul(2).sub(1);fn("FrontFacingNode",Dd);const kd=hr((({textureNode:e,bumpScale:t})=>{let s=e;if(!0!==s.isTextureNode&&s.traverse((e=>{!0===e.isTextureNode&&(s=e)})),!0!==s.isTextureNode)throw new Error("THREE.TSL: dHdxy_fwd() requires a TextureNode.");const n=br(e),r=s.uvNode||Hi(),i=t=>e.cache().context({getUV:()=>t,forceUVContext:!0});return Nr(br(i(r.add(r.dFdx()))).sub(n),br(i(r.add(r.dFdy()))).sub(n)).mul(t)})),Vd=hr((e=>{const{surf_pos:t,surf_norm:s,dHdxy:n}=e,r=t.dFdx().normalize(),i=s,o=t.dFdy().normalize().cross(i),a=i.cross(r),u=r.dot(o).mul(Gd),l=u.sign().mul(n.x.mul(o).add(n.y.mul(a)));return u.abs().mul(s).sub(l).normalize()}));class zd extends Cn{constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=kd({textureNode:this.textureNode,bumpScale:e});return Vd({surf_pos:Wu,surf_norm:au,dHdxy:t})}}const $d=lr(zd);In("bumpMap",$d),fn("BumpMapNode",zd);const Hd=hr((({color:e,adjustment:t})=>t.mix(Zd(e),e))),Wd=hr((({color:e,adjustment:t})=>{const s=Xi(e.r,e.g,e.b).div(3),n=e.r.max(e.g.max(e.b)),r=n.sub(s).mul(t).mul(-3);return aa(e,n,r)})),jd=hr((({color:e,adjustment:t})=>{const s=Rr(.57735,.57735,.57735),n=t.cos();return Rr(e.rgb.mul(n).add(s.cross(e.rgb).mul(t.sin()).add(s.mul(ea(s,e.rgb).mul(n.oneMinus())))))}));class qd extends Cn{constructor(e,t,s=br(1)){super("vec3"),this.method=e,this.colorNode=t,this.adjustmentNode=s}setup(){const{method:e,colorNode:t,adjustmentNode:s}=this,n={color:t,adjustment:s};let r=null;return e===qd.SATURATION?r=Hd(n):e===qd.VIBRANCE?r=Wd(n):e===qd.HUE&&(r=jd(n)),r}}qd.SATURATION="saturation",qd.VIBRANCE="vibrance",qd.HUE="hue";const Xd=lr(qd,qd.SATURATION),Yd=lr(qd,qd.VIBRANCE),Kd=lr(qd,qd.HUE),Qd=Rr(.2125,.7154,.0721),Zd=(e,t=Qd)=>ea(e,t);In("saturation",Xd),In("vibrance",Yd),In("hue",Kd),fn("ColorAdjustmentNode",qd);const Jd=hr((e=>{const{eye_pos:t,surf_norm:s,mapN:n,uv:r}=e,i=t.dFdx(),o=t.dFdy(),a=r.dFdx(),u=r.dFdy(),l=s,c=o.cross(l),d=l.cross(i),h=c.mul(a.x).add(d.mul(u.x)),p=c.mul(a.y).add(d.mul(u.y)),m=h.dot(h).max(p.dot(p)),g=Gd.mul(m.inverseSqrt());return Xi(h.mul(n.x,g),p.mul(n.y,g),l.mul(n.z)).normalize()}));class eh extends Cn{constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=P}setup(e){const{normalMapType:t,scaleNode:s}=this;let n=this.node.mul(2).sub(1);null!==s&&(n=Rr(n.xy.mul(s),n.z));let r=null;if(t===G)r=Ja.mul(n).normalize();else if(t===P){r=!0===e.hasGeometryAttribute("tangent")?sh.mul(n).normalize():Jd({eye_pos:Wu,surf_norm:au,mapN:n,uv:Hi()})}return r}}const th=lr(eh),sh=Ur(al,td,au);In("normalMap",th),fn("NormalMapNode",eh);class nh extends Cn{constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const rh=lr(nh);In("posterize",rh),fn("PosterizeNode",nh);const ih=hr((({color:e,exposure:t})=>e.mul(t).clamp())),oh=hr((({color:e,exposure:t})=>(e=e.mul(t)).div(e.add(1)).clamp())),ah=hr((({color:e,exposure:t})=>{const s=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),n=e.mul(e.mul(6.2).add(1.7)).add(.06);return s.div(n).pow(2.2)})),uh=hr((({color:e})=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),s=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(s)})),lh=hr((({color:e,exposure:t})=>{const s=Ur(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=Ur(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=s.mul(e),e=uh({color:e}),(e=n.mul(e)).clamp()})),ch={[V]:ih,[z]:oh,[$]:ah,[H]:lh};class dh extends Cn{constructor(e=k,t=br(1),s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}getCacheKey(){let e=super.getCacheKey();return e="{toneMapping:"+this.toneMapping+",nodes:"+e+"}",e}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===k)return t;const n={exposure:this.exposureNode,color:t},r=ch[s];let i=null;return i=r?r(n):t,i}}const hh=(e,t,s)=>or(new dh(e,or(t),or(s)));let ph,mh;fn("ToneMappingNode",dh);class gh extends gn{constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===gh.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=Js.NONE;return this.scope!==gh.RESOLUTION&&this.scope!==gh.VIEWPORT||(e=Js.FRAME),this.updateType=e,e}update({renderer:e}){this.scope===gh.VIEWPORT?e.getViewport(mh):e.getDrawingBufferSize(ph)}setup(){const e=this.scope;if(e===gh.COORDINATE)return;let t=null;if(e===gh.RESOLUTION)t=Xr(ph||(ph=new r));else if(e===gh.VIEWPORT)t=Xr(mh||(mh=new o));else{t=fh.div(xh);let s=t.x,n=t.y;/bottom/i.test(e)&&(n=n.oneMinus()),/right/i.test(e)&&(s=s.oneMinus()),t=Nr(s,n)}return t}generate(e){if(this.scope===gh.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const s=e.getNodeProperties(xh).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${s}.y - ${t}.y )`}return t}return super.generate(e)}}gh.COORDINATE="coordinate",gh.RESOLUTION="resolution",gh.VIEWPORT="viewport",gh.TOP_LEFT="topLeft",gh.BOTTOM_LEFT="bottomLeft",gh.TOP_RIGHT="topRight",gh.BOTTOM_RIGHT="bottomRight";const fh=cr(gh,gh.COORDINATE),xh=cr(gh,gh.RESOLUTION),bh=cr(gh,gh.VIEWPORT),Th=cr(gh,gh.TOP_LEFT),_h=cr(gh,gh.BOTTOM_LEFT),yh=cr(gh,gh.TOP_RIGHT),Nh=cr(gh,gh.BOTTOM_RIGHT);fn("ViewportNode",gh);const vh=new r;class Sh extends Ca{constructor(e=Th,t=null,s=null){null===s&&((s=new W).minFilter=M),super(s,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=Js.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(vh);const s=this.value;s.image.width===vh.width&&s.image.height===vh.height||(s.image.width=vh.width,s.image.height=vh.height,s.needsUpdate=!0);const n=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(s),s.generateMipmaps=n}clone(){return new this.constructor(this.uvNode,this.levelNode,this.value)}}const Ah=lr(Sh),Rh=lr(Sh,null,null,{generateMipmaps:!0});In("viewportTexture",Ah),In("viewportMipTexture",Rh),fn("ViewportTextureNode",Sh);let Ch=null;class Eh extends Sh{constructor(e=Th,t=null){null===Ch&&(Ch=new W),super(e,t,Ch)}}const wh=lr(Eh);In("viewportSharedTexture",wh),fn("ViewportSharedTextureNode",Eh);let Mh=null;class Oh extends Sh{constructor(e=Th,t=null){null===Mh&&(Mh=new x,Mh.minFilter=j,Mh.type=q,Mh.format=X),super(e,t,Mh)}}const Fh=lr(Oh);In("viewportDepthTexture",Fh),fn("ViewportDepthTextureNode",Oh);class Bh extends gn{constructor(e,t=null){super("float"),this.scope=e,this.textureNode=t,this.isViewportDepthNode=!0}setup(){const{scope:e}=this;let t=null;if(e===Bh.DEPTH)t=Uh(Wu.z,Ha,Wa);else if(e===Bh.DEPTH_TEXTURE){const e=this.textureNode||Fh(),s=Dh(e,Ha,Wa);t=Uh(s,Ha,Wa)}return t}}const Uh=(e,t,s)=>e.add(t).div(t.sub(s)),Ih=(e,t,s)=>t.sub(s).mul(e).sub(t),Lh=(e,t,s)=>t.add(e).mul(s).div(t.sub(s).mul(e)),Dh=(e,t,s)=>t.mul(s).div(s.sub(t).mul(e).sub(s));Bh.DEPTH="depth",Bh.DEPTH_TEXTURE="depthTexture";const Ph=cr(Bh,Bh.DEPTH),Gh=lr(Bh,Bh.DEPTH_TEXTURE);fn("ViewportDepthNode",Bh);class kh extends gn{constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=s,this._includes=t}setIncludes(e){return this._includes=e,this}getIncludes(){return this._includes}generate(e){const t=this.getIncludes(e);for(const s of t)s.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const Vh=lr(kh),zh=(e,t)=>Vh(e,t,"js"),$h=(e,t)=>Vh(e,t,"wgsl"),Hh=(e,t)=>Vh(e,t,"glsl");fn("CodeNode",kh);class Wh extends Cn{constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],s=this.functionNode,n=s.getInputs(e),r=this.parameters;if(Array.isArray(r))for(let s=0;s<r.length;s++){const i=n[s],o=r[s];t.push(o.build(e,i.type))}else for(const s of n){const n=r[s.name];if(void 0===n)throw new Error(`FunctionCallNode: Input '${s.name}' not found in FunctionNode.`);t.push(n.build(e,s.type))}return`${s.build(e,"property")}( ${t.join(", ")} )`}}const jh=(e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?ur(t):ar(t[0]),or(new Wh(or(e),t)));In("call",jh),fn("FunctionCallNode",Wh);class qh extends kh{constructor(e="",t=[],s=""){super(e,t,s),this.keywords={}}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return void 0===s&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),n=s.name,r=s.type,i=e.getCodeFromNode(this,r);""!==n&&(i.name=n);const o=e.getPropertyName(i);let a=this.getNodeFunction(e).getCode(o);const u=this.keywords,l=Object.keys(u);if(l.length>0)for(const t of l){const s=new RegExp(`\\b${t}\\b`,"g"),n=u[t].build(e,"property");a=a.replace(s,n)}return i.code=a+"\n","property"===t?o:e.format(`${o}()`,r,t)}}const Xh=(e,t=[],s="")=>{for(let e=0;e<t.length;e++){const s=t[e];"function"==typeof s&&(t[e]=s.functionNode)}const n=or(new qh(e,t,s)),r=(...e)=>n.call(...e);return r.functionNode=n,r},Yh=(e,t)=>Xh(e,t,"glsl"),Kh=(e,t)=>Xh(e,t,"wgsl");fn("FunctionNode",qh);class Qh extends gn{constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new l,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:br()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=cn(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?dn(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const Zh=lr(Qh);In("scriptableValue",Zh),fn("ScriptableValueNode",Qh);class Jh extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(null!==t){const n=t(...s);return this.set(e,n),n}}}class ep{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const tp=new Jh;class sp extends gn{constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new Jh,this._output=Zh(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return void 0===s[e]?s[e]=Zh(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):void 0===s[e]?(s[e]=Zh(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const s=this.getObject()[e];if("function"==typeof s)return s(...t)}async callAsync(e,...t){const s=this.getObject()[e];if("function"==typeof s)return"AsyncFunction"===s.constructor.name?await s(...t):s(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new ep(this),t=tp.get("THREE"),s=tp.get("TSL"),n=this.getMethod(this.codeNode),r=[e,this._local,tp,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,s];this._object=n(...r);const i=this._object.layout;if(i&&(!1===i.cache&&this._local.clear(),this._output.outputType=i.outputType||null,Array.isArray(i.elements)))for(const e of i.elements){const t=e.id||e.name;e.inputType&&(void 0===this.getParameter(t)&&this.setParameter(t,null),this.getParameter(t).inputType=e.inputType),e.outputType&&(void 0===this.getOutput(t)&&this.setOutput(t,null),this.getOutput(t).outputType=e.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const e in this.parameters){let t=this.parameters[e];t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:br()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",s="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],s),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const np=lr(sp);In("scriptable",np),fn("ScriptableNode",sp);class rp extends gn{constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}mixAssign(e){return this.mix(e,this.colorNode)}setup(){return this.factorNode}}const ip=lr(rp);In("fog",ip),fn("FogNode",rp);class op extends rp{constructor(e,t,s){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=s}setup(){return da(this.nearNode,this.farNode,Wu.z.negate())}}const ap=lr(op);In("rangeFog",ap),fn("FogRangeNode",op);class up extends rp{constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(){const e=Wu.z.negate(),t=this.densityNode;return t.mul(t,e,e).negate().exp().oneMinus()}}const lp=lr(up);In("densityFog",lp),fn("FogExp2Node",up);let cp=null,dp=null;class hp extends gn{constructor(e=br(),t=br()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(un(this.minNode.value)),s=e.getTypeLength(un(this.maxNode.value));return t>s?t:s}getNodeType(e){return!0===e.object.isInstancedMesh?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(!0===t.isInstancedMesh){const n=this.minNode.value,r=this.maxNode.value,i=e.getTypeLength(un(n)),a=e.getTypeLength(un(r));cp=cp||new o,dp=dp||new o,cp.setScalar(0),dp.setScalar(0),1===i?cp.setScalar(n):n.isColor?cp.set(n.r,n.g,n.b):cp.set(n.x,n.y,n.z||0,n.w||0),1===a?dp.setScalar(r):r.isColor?dp.set(r.r,r.g,r.b):dp.set(r.x,r.y,r.z||0,r.w||0);const u=4,l=u*t.count,d=new Float32Array(l);for(let e=0;e<l;e++){const t=e%u,s=cp.getComponent(t),n=dp.getComponent(t);d[e]=c.lerp(s,n,Math.random())}const h=this.getNodeType(e);s=nl(d,"vec4",t.count).element(pi).convert(h)}else s=br(0);return s}}const pp=lr(hp);fn("RangeNode",hp);class mp extends gn{constructor(e,t,s=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=s,this.dispatchCount=0,this.version=1,this.updateBeforeType=Js.OBJECT,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let s=t[0];for(let e=1;e<t.length;e++)s*=t[e];this.dispatchCount=Math.ceil(e/s)}onInit(){}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if("compute"===t){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t)}}}const gp=(e,t,s)=>or(new mp(or(e),t,s));In("compute",gp),fn("ComputeNode",mp);class fp extends gn{constructor(e=fp.TARGET_DIRECTION,t=null){super(),this.scope=e,this.light=t}setup(){const{scope:e,light:t}=this;let s=null;return e===fp.TARGET_DIRECTION&&(s=ja.transformDirection(Ga(t).sub(Ga(t.target)))),s}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}fp.TARGET_DIRECTION="targetDirection";const xp=lr(fp,fp.TARGET_DIRECTION);fn("LightNode",fp);const bp=hr((e=>{const{lightDistance:t,cutoffDistance:s,decayExponent:n}=e,r=t.pow(n).max(.01).reciprocal();return s.greaterThan(0).cond(r.mul(t.div(s).pow4().oneMinus().clamp().pow2()),r)}));class Tp extends yl{constructor(e=null){super(e),this.cutoffDistanceNode=Xr(0),this.decayExponentNode=Xr(0)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setup(e){const{colorNode:t,cutoffDistanceNode:s,decayExponentNode:n,light:r}=this,i=e.context.lightingModel,o=Va(r).sub(Wu),a=o.normalize(),u=o.length(),l=bp({lightDistance:u,cutoffDistance:s,decayExponent:n}),c=t.mul(l),d=e.context.reflectedLight;i.direct({lightDirection:a,lightColor:c,reflectedLight:d},e.stack,e)}}fn("PointLightNode",Tp),Rl(Y,Tp);class _p extends yl{constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,s=this.colorNode,n=xp(this.light),r=e.context.reflectedLight;t.direct({lightDirection:n,lightColor:s,reflectedLight:r},e.stack,e)}}fn("DirectionalLightNode",_p),Rl(K,_p);class yp extends yl{constructor(e=null){super(e),this.coneCosNode=Xr(0),this.penumbraCosNode=Xr(0),this.cutoffDistanceNode=Xr(0),this.decayExponentNode=Xr(0)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:s}=this;return da(t,s,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:s,cutoffDistanceNode:n,decayExponentNode:r,light:i}=this,o=Va(i).sub(Wu),a=o.normalize(),u=a.dot(xp(i)),l=this.getSpotAttenuation(u),c=o.length(),d=bp({lightDistance:c,cutoffDistance:n,decayExponent:r}),h=s.mul(l).mul(d),p=e.context.reflectedLight;t.direct({lightDirection:a,lightColor:h,reflectedLight:p},e.stack,e)}}fn("SpotLightNode",yp),Rl(Q,yp);class Np extends yp{getSpotAttenuation(e){const t=this.light.iesMap;let s=null;if(t&&!0===t.isTexture){const n=e.acos().mul(1/Math.PI);s=Ea(t,Nr(n,0),0).r}else s=super.getSpotAttenuation(e);return s}}fn("IESSpotLightNode",Np),Rl(class extends Q{constructor(e,t,s,n,r,i){super(e,t,s,n,r,i),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}},Np);class vp extends yl{constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}fn("AmbientLightNode",vp),Rl(Z,vp);class Sp extends yl{constructor(e=null){super(e),this.lightPositionNode=Ga(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Xr(new n)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:n}=this,r=au.dot(n).mul(.5).add(.5),i=aa(s,t,r);e.context.irradiance.addAssign(i)}}fn("HemisphereLightNode",Sp),Rl(J,Sp);const Ap=hr((e=>{const t=e.uv.mul(2),s=t.x.floor(),n=t.y.floor();return s.add(n).mod(2).sign()}));class Rp extends Cn{constructor(e=Hi()){super("float"),this.uvNode=e}setup(){return Ap({uv:this.uvNode})}}const Cp=lr(Rp);In("checker",Cp),fn("CheckerNode",Rp);class Ep extends ee{constructor(e){super(e),this.textures={}}load(e,t,s,n){const r=new te(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,(s=>{try{t(this.parse(JSON.parse(s)))}catch(t){n&&n(t),this.manager.itemError(e)}}),s,n)}parseNodes(e){const t={};if(void 0!==e){for(const s of e){const{uuid:e,type:n}=s;t[e]=or(xn(n)),t[e].uuid=e}const s={nodes:t,textures:this.textures};for(const n of e){n.meta=s;t[n.uuid].deserialize(n),delete n.meta}}return t}parse(e){const t=or(xn(e.type));t.uuid=e.uuid;const s={nodes:this.parseNodes(e.nodes),textures:this.textures};return e.meta=s,t.deserialize(e),delete e.meta,t}setTextures(e){return this.textures=e,this}}const wp=new se;class Mp extends Gl{constructor(e={}){super(),this.normals=!1,this.lights=!1,this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.pointWidth=1,this.pointColorNode=null,this.setDefaultValues(wp),this.setupShaders(),this.setValues(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor;this.vertexNode=hr((()=>{Jr(Nr(),"vUv").assign(Hi());const e=ti("instancePosition"),t=Si("vec4","mvPos");t.assign(Za.mul(Mr(e,1)));const s=bh.z.div(bh.w),n=$a.mul(t),r=Si("vec2","offset");return r.assign(Vu.xy),r.assign(r.mul(Gu)),r.assign(r.div(bh.z)),r.y.assign(r.y.mul(s)),r.assign(r.mul(n.w)),n.assign(n.add(Mr(r,0,0))),n}))(),this.colorNode=hr((()=>{const s=Jr(Nr(),"vUv"),n=Si("float","alpha");n.assign(1);const r=s.x,i=s.y,o=r.mul(r).add(i.mul(i));if(e){const e=Si("float","dlen");e.assign(o.fwidth()),n.assign(da(e.oneMinus(),e.add(1),o).oneMinus())}else o.greaterThan(1).discard();let a;if(this.pointColorNode)a=this.pointColorNode;else if(t){a=ti("instanceColor").mul(gu)}else a=gu;return Mr(a,n)}))(),this.needsUpdate=!0}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.setupShaders())}}kl("InstancedPointsNodeMaterial",Mp);const Op=new ne;class Fp extends Gl{constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.normals=!1,this.setDefaultValues(Op),this.setValues(e)}}kl("LineBasicNodeMaterial",Fp);const Bp=new re;class Up extends Gl{constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.normals=!1,this.setDefaultValues(Bp),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode,t=this.dashScaleNode?br(this.dashScaleNode):Uu,s=this.dashSizeNode?br(this.dashSizeNode):Iu,n=this.dashSizeNode?br(this.dashGapNode):Lu;Pi.assign(s),Gi.assign(n);const r=Jr(ti("lineDistance").mul(t));(e?r.add(e):r).mod(Pi.add(Gi)).greaterThan(Pi).discard()}}kl("LineDashedNodeMaterial",Up);const Ip=new re;class Lp extends Gl{constructor(e={}){super(),this.normals=!1,this.lights=!1,this.setDefaultValues(Ip),this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.useDash=e.dashed,this.useWorldUnits=!1,this.dashOffset=0,this.lineWidth=1,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setupShaders(),this.setValues(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor,s=this.dashed,n=this.worldUnits,r=hr((({start:e,end:t})=>{const s=$a.element(2).element(2),n=$a.element(3).element(2).mul(-.5).div(s).sub(e.z).div(t.z.sub(e.z));return Mr(aa(e.xyz,t.xyz,n),t.w)}));this.vertexNode=hr((()=>{Jr(Nr(),"vUv").assign(Hi());const e=ti("instanceStart"),t=ti("instanceEnd"),i=Si("vec4","start"),o=Si("vec4","end");i.assign(Za.mul(Mr(e,1))),o.assign(Za.mul(Mr(t,1))),n&&(Jr(Rr(),"worldStart").assign(i.xyz),Jr(Rr(),"worldEnd").assign(o.xyz));const a=bh.z.div(bh.w),u=$a.element(2).element(3).equal(-1);gr(u,(()=>{gr(i.z.lessThan(0).and(o.z.greaterThan(0)),(()=>{o.assign(r({start:i,end:o}))})).elseif(o.z.lessThan(0).and(i.z.greaterThanEqual(0)),(()=>{i.assign(r({start:o,end:i}))}))}));const l=$a.mul(i),c=$a.mul(o),d=l.xyz.div(l.w),h=c.xyz.div(c.w),p=h.xy.sub(d.xy).temp();p.x.assign(p.x.mul(a)),p.assign(p.normalize());const m=fi(Mr());if(n){const e=o.xyz.sub(i.xyz).normalize(),t=Vu.y.lessThan(.5).cond(i.xyz.cross(e).normalize(),o.xyz.cross(e).normalize());t.assign(Vu.x.lessThan(0).cond(t.negate(),t));const n=e.dot(Rr(0,0,1));s||(i.assign(i.sub(Mr(e.mul(Du).mul(.5),0))),o.assign(o.add(Mr(e.mul(Du).mul(.5),0))),t.assign(t.sub(Rr(p.mul(n),0))),t.z.assign(t.z.add(.5))),gr(Vu.y.greaterThan(1).or(Vu.y.lessThan(0)),(()=>{t.assign(t.add(Rr(p.mul(2).mul(n),0)))})),t.assign(t.mul(Du).mul(.5));const r=Jr(Mr(),"worldPos");r.assign(Vu.y.lessThan(.5).cond(i,o)),r.assign(r.add(Mr(t,0))),m.assign($a.mul(r));const a=fi(Rr());a.assign(Vu.y.lessThan(.5).cond(d,h)),m.z.assign(a.z.mul(m.w))}else{const e=Si("vec2","offset");e.assign(Nr(p.y,p.x.negate())),p.x.assign(p.x.div(a)),e.x.assign(e.x.div(a)),e.assign(Vu.x.lessThan(0).cond(e.negate(),e)),gr(Vu.y.lessThan(0),(()=>{e.assign(e.sub(p))})).elseif(Vu.y.greaterThan(1),(()=>{e.assign(e.add(p))})),e.assign(e.mul(Du)),e.assign(e.div(bh.w)),m.assign(Vu.y.lessThan(.5).cond(l,c)),e.assign(e.mul(m.w)),m.assign(m.add(Mr(e,0,0)))}return m}))();const i=hr((({p1:e,p2:t,p3:s,p4:n})=>{const r=e.sub(s),i=n.sub(s),o=t.sub(e),a=r.dot(i),u=i.dot(o),l=r.dot(o),c=i.dot(i),d=o.dot(o).mul(c).sub(u.mul(u)),h=a.mul(u).sub(l.mul(c)).div(d).clamp(),p=a.add(u.mul(h)).div(c).clamp();return Nr(h,p)}));this.colorNode=hr((()=>{const r=Jr(Nr(),"vUv");if(s){const e=this.offsetNode?br(this.offsetNodeNode):Pu,t=this.dashScaleNode?br(this.dashScaleNode):Uu,s=this.dashSizeNode?br(this.dashSizeNode):Iu,n=this.dashSizeNode?br(this.dashGapNode):Lu;Pi.assign(s),Gi.assign(n);const i=ti("instanceDistanceStart"),o=ti("instanceDistanceEnd"),a=Vu.y.lessThan(.5).cond(t.mul(i),Uu.mul(o)),u=Jr(a.add(Pu)),l=e?u.add(e):u;r.y.lessThan(-1).or(r.y.greaterThan(1)).discard(),l.mod(Pi.add(Gi)).greaterThan(Pi).discard()}const o=Si("float","alpha");if(o.assign(1),n){const t=Jr(Rr(),"worldStart"),n=Jr(Rr(),"worldEnd"),r=Jr(Mr(),"worldPos").xyz.normalize().mul(1e5),a=n.sub(t),u=i({p1:t,p2:n,p3:Rr(0,0,0),p4:r}),l=t.add(a.mul(u.x)),c=r.mul(u.y),d=l.sub(c).length().div(Du);if(!s)if(e){const e=d.fwidth();o.assign(da(e.negate().add(.5),e.add(.5),d).oneMinus())}else d.greaterThan(.5).discard()}else if(e){const e=r.x,t=r.y.greaterThan(0).cond(r.y.sub(1),r.y.add(1)),s=e.mul(e).add(t.mul(t)),n=Si("float","dlen");n.assign(s.fwidth()),gr(r.y.abs().greaterThan(1),(()=>{o.assign(da(n.oneMinus(),n.add(1),s).oneMinus())}))}else gr(r.y.abs().greaterThan(1),(()=>{const e=r.x,t=r.y.greaterThan(0).cond(r.y.sub(1),r.y.add(1));e.mul(e).add(t.mul(t)).greaterThan(1).discard()}));let a;if(this.lineColorNode)a=this.lineColorNode;else if(t){const e=ti("instanceColorStart"),t=ti("instanceColorEnd");a=Vu.y.lessThan(.5).cond(e,t).mul(gu)}else a=gu;return Mr(a,o)}))(),this.needsUpdate=!0}get worldUnits(){return this.useWorldUnits}set worldUnits(e){this.useWorldUnits!==e&&(this.useWorldUnits=e,this.setupShaders())}get dashed(){return this.useDash}set dashed(e){this.useDash!==e&&(this.useDash=e,this.setupShaders())}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.setupShaders())}}kl("Line2NodeMaterial",Lp);const Dp=new ie;class Pp extends Gl{constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.colorSpace=!1,this.setDefaultValues(Dp),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?br(this.opacityNode):bu;Ai.assign(Mr(kc(lu),e))}}kl("MeshNormalNodeMaterial",Pp);const Gp=new oe;class kp extends Gl{constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(Gp),this.setValues(e)}}kl("MeshBasicNodeMaterial",kp);const Vp=hr((({f0:e,f90:t,dotVH:s})=>{const n=s.mul(-5.55473).sub(6.98316).mul(s).exp2();return e.mul(n.oneMinus()).add(t.mul(n))})),zp=hr((e=>e.diffuseColor.mul(1/Math.PI))),$p=hr((({dotNH:e})=>Li.mul(.5/Math.PI).add(1).mul(e.pow(Li)))),Hp=hr((({lightDirection:e})=>{const t=e.add(ju).normalize(),s=lu.dot(t).clamp(),n=ju.dot(t).clamp(),r=Vp({f0:Ii,f90:1,dotVH:n}),i=br(.25),o=$p({dotNH:s});return r.mul(i).mul(o)}));class Wp extends mi{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const n=lu.dot(e).clamp().mul(t);s.directDiffuse.addAssign(n.mul(zp({diffuseColor:Ai.rgb}))),!0===this.specular&&s.directSpecular.addAssign(n.mul(Hp({lightDirection:e})).mul(_u))}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(zp({diffuseColor:Ai})))}}const jp=new ae;class qp extends Gl{constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(jp),this.setValues(e)}setupLightingModel(){return new Wp(!1)}}kl("MeshLambertNodeMaterial",qp);const Xp=new ue;class Yp extends Gl{constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(Xp),this.setValues(e)}setupLightingModel(){return new Wp}setupVariants(){const e=(this.shininessNode?br(this.shininessNode):fu).max(1e-4);Li.assign(e);const t=this.specularNode||Tu;Ii.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}kl("MeshPhongNodeMaterial",Yp);const Kp=hr((()=>{const e=iu.dFdx().abs().max(iu.dFdy().abs());return e.x.max(e.y).max(e.z)})),Qp=hr((e=>{const{roughness:t}=e,s=Kp();let n=t.max(.0525);return n=n.add(s),n=n.min(1),n})),Zp=hr((e=>{const{alpha:t,dotNL:s,dotNV:n}=e,r=t.pow2(),i=s.mul(r.add(r.oneMinus().mul(n.pow2())).sqrt()),o=n.mul(r.add(r.oneMinus().mul(s.pow2())).sqrt());return Qi(.5,i.add(o).max(go))})).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),Jp=hr((({alpha:e,dotNH:t})=>{const s=e.pow2(),n=t.pow2().mul(s.oneMinus()).oneMinus();return s.div(n.pow2()).mul(1/Math.PI)})).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),em=hr((e=>{const{lightDirection:t,f0:s,f90:n,roughness:r,iridescenceFresnel:i}=e,o=e.normalView||lu,a=r.pow2(),u=t.add(ju).normalize(),l=o.dot(t).clamp(),c=o.dot(ju).clamp(),d=o.dot(u).clamp(),h=ju.dot(u).clamp();let p=Vp({f0:s,f90:n,dotVH:h});i&&(p=Fi.mix(p,i));const m=Zp({alpha:a,dotNL:l,dotNV:c}),g=Jp({alpha:a,dotNH:d});return p.mul(m).mul(g)})),tm=hr((({roughness:e,dotNV:t})=>{const s=Mr(-1,-.0275,-.572,.022),n=Mr(1,.0425,1.04,-.04),r=e.mul(s).add(n),i=r.x.mul(r.x).min(t.mul(-9.28).exp2()).mul(r.x).add(r.y);return Nr(-1.04,1.04).mul(i).add(r.zw)})).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),sm=hr((e=>{const{dotNV:t,specularColor:s,specularF90:n,roughness:r}=e,i=tm({dotNV:t,roughness:r});return s.mul(i.x).add(n.mul(i.y))})),nm=hr((({f:e,f90:t,dotVH:s})=>{const n=s.oneMinus().saturate(),r=n.mul(n),i=n.mul(r,r).clamp(0,.9999);return e.sub(Rr(t).mul(i)).div(i.oneMinus())})).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),rm=hr((({roughness:e,dotNH:t})=>{const s=e.pow2(),n=br(1).div(s),r=t.pow2().oneMinus().max(.0078125);return br(2).add(n).mul(r.pow(n.mul(.5))).div(2*Math.PI)})).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),im=hr((({dotNV:e,dotNL:t})=>br(1).div(br(4).mul(t.add(e).sub(t.mul(e)))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),om=hr((({lightDirection:e})=>{const t=e.add(ju).normalize(),s=lu.dot(e).clamp(),n=lu.dot(ju).clamp(),r=lu.dot(t).clamp(),i=rm({roughness:Oi,dotNH:r}),o=im({dotNV:n,dotNL:s});return Mi.mul(i).mul(o)})),am=Ur(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),um=(e,t)=>e.sub(t).div(e.add(t)).pow2(),lm=(e,t)=>{const s=e.mul(2*Math.PI*1e-9),n=Rr(54856e-17,44201e-17,52481e-17),r=Rr(1681e3,1795300,2208400),i=Rr(43278e5,93046e5,66121e5),o=br(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(s.mul(2239900).add(t.x).cos()).mul(s.pow2().mul(-45282e5).exp());let a=n.mul(i.mul(2*Math.PI).sqrt()).mul(r.mul(s).add(t).cos()).mul(s.pow2().negate().mul(i).exp());a=Rr(a.x.add(o),a.y,a.z).div(1.0685e-7);return am.mul(a)},cm=hr((({outsideIOR:e,eta2:t,cosTheta1:s,thinFilmThickness:n,baseF0:r})=>{const i=aa(e,t,da(0,.03,n)),o=e.div(i).pow2().mul(br(1).sub(s.pow2())),a=br(1).sub(o).sqrt(),u=um(i,e),l=Vp({f0:u,f90:1,dotVH:s}),c=l.oneMinus(),d=i.lessThan(e).cond(Math.PI,0),h=br(Math.PI).sub(d),p=(e=>{const t=e.sqrt();return Rr(1).add(t).div(Rr(1).sub(t))})(r.clamp(0,.9999)),m=um(p,i.vec3()),g=Vp({f0:m,f90:1,dotVH:a}),f=Rr(p.x.lessThan(i).cond(Math.PI,0),p.y.lessThan(i).cond(Math.PI,0),p.z.lessThan(i).cond(Math.PI,0)),x=i.mul(n,a,2),b=Rr(h).add(f),T=l.mul(g).clamp(1e-5,.9999),_=T.sqrt(),y=c.pow2().mul(g).div(Rr(1).sub(T));let N=l.add(y),v=y.sub(c);for(let e=1;e<=2;++e){v=v.mul(_);const t=lm(br(e).mul(x),br(e).mul(b)).mul(2);N=N.add(v.mul(t))}return N.max(Rr(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),dm=hr((({normal:e,viewDir:t,roughness:s})=>{const n=e.dot(t).saturate(),r=s.pow2(),i=rc(s.lessThan(.25),br(-339.2).mul(r).add(br(161.4).mul(s)).sub(25.9),br(-8.48).mul(r).add(br(14.3).mul(s)).sub(9.95)),o=rc(s.lessThan(.25),br(44).mul(r).sub(br(23.7).mul(s)).add(3.26),br(1.97).mul(r).sub(br(3.27).mul(s)).add(.72));return rc(s.lessThan(.25),0,br(.1).mul(s).sub(.025)).add(i.mul(n).add(o).exp()).mul(1/Math.PI).saturate()})),hm=Rr(.04),pm=Rr(1);class mm extends mi{constructor(e=!1,t=!1,s=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(){if(!0===this.clearcoat&&(this.clearcoatRadiance=Rr().temp("clearcoatRadiance"),this.clearcoatSpecularDirect=Rr().temp("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=Rr().temp("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=Rr().temp("sheenSpecularDirect"),this.sheenSpecularIndirect=Rr().temp("sheenSpecularIndirect")),!0===this.iridescence){const e=lu.dot(ju).clamp();this.iridescenceFresnel=cm({outsideIOR:br(1),eta2:Bi,cosTheta1:e,thinFilmThickness:Ui,baseF0:Ii}),this.iridescenceF0=nm({f:this.iridescenceFresnel,f90:1,dotVH:e})}}computeMultiscattering(e,t,s=br(1)){const n=lu.dot(ju).clamp(),r=tm({roughness:Ri,dotNV:n}),i=(this.iridescenceF0?Fi.mix(Ii,this.iridescenceF0):Ii).mul(r.x).add(s.mul(r.y)),o=r.x.add(r.y).oneMinus(),a=Ii.add(Ii.oneMinus().mul(.047619)),u=i.mul(a).div(o.mul(a).oneMinus());e.addAssign(i),t.addAssign(u.mul(o))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const n=lu.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(n.mul(om({lightDirection:e}))),!0===this.clearcoat){const s=du.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(s.mul(em({lightDirection:e,f0:hm,f90:pm,roughness:wi,normalView:du})))}s.directDiffuse.addAssign(n.mul(zp({diffuseColor:Ai.rgb}))),s.directSpecular.addAssign(n.mul(em({lightDirection:e,f0:Ii,f90:1,roughness:Ri,iridescence:this.iridescence,iridescenceFresnel:this.iridescenceFresnel})))}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(zp({diffuseColor:Ai})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:s}){if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(t.mul(Mi,dm({normal:lu,viewDir:ju,roughness:Oi}))),!0===this.clearcoat){const e=du.dot(ju).clamp(),t=sm({dotNV:e,specularColor:hm,specularF90:pm,roughness:wi});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const n=Rr().temp("singleScattering"),r=Rr().temp("multiScattering"),i=t.mul(1/Math.PI);this.computeMultiscattering(n,r);const o=n.add(r),a=Ai.mul(o.r.max(o.g).max(o.b).oneMinus());s.indirectSpecular.addAssign(e.mul(n)),s.indirectSpecular.addAssign(r.mul(i)),s.indirectDiffuse.addAssign(a.mul(i))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const s=lu.dot(ju).clamp().add(e),n=Ri.mul(-16).oneMinus().negate().exp2(),r=e.sub(s.pow(n).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(e),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(r)}finish(e){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=du.dot(ju).clamp(),s=Vp({dotVH:e,f0:hm,f90:pm}),n=t.mul(Ei.mul(s).oneMinus()).add(this.clearcoatSpecularDirect,this.clearcoatSpecularIndirect).mul(Ei);t.assign(n)}if(!0===this.sheen){const e=Mi.r.max(Mi.g).max(Mi.b).mul(.157).oneMinus(),s=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(s)}}}const gm=new le;class fm extends Gl{constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(gm),this.setValues(e)}setupLightingModel(){return new mm}setupVariants(){const e=this.metalnessNode?br(this.metalnessNode):vu;Ci.assign(e);let t=this.roughnessNode?br(this.roughnessNode):Nu;t=Qp({roughness:t}),Ri.assign(t);const s=aa(Rr(.04),Ai.rgb,e);Ii.assign(s),Ai.assign(Mr(Ai.rgb.mul(e.oneMinus()),Ai.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}kl("MeshStandardNodeMaterial",fm);const xm=new ce;class bm extends fm{constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.setDefaultValues(xm),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}setupLightingModel(){return new mm(this.useClearcoat,this.useSheen,this.useIridescence)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?br(this.clearcoatNode):Au,t=this.clearcoatRoughnessNode?br(this.clearcoatRoughnessNode):Ru;Ei.assign(e),wi.assign(t)}if(this.useSheen){const e=this.sheenNode?Rr(this.sheenNode):wu,t=this.sheenRoughnessNode?br(this.sheenRoughnessNode):Mu;Mi.assign(e),Oi.assign(t)}if(this.useIridescence){const e=this.iridescenceNode?br(this.iridescenceNode):Ou,t=this.iridescenceIORNode?br(this.iridescenceIORNode):Fu,s=this.iridescenceThicknessNode?br(this.iridescenceThicknessNode):Bu;Fi.assign(e),Bi.assign(t),Ui.assign(s)}}setupNormal(e){super.setupNormal(e);const t=this.clearcoatNormalNode?Rr(this.clearcoatNormalNode):Cu;du.assign(t)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,super.copy(e)}}kl("MeshPhysicalNodeMaterial",bm);const Tm=new se;class _m extends Gl{constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.normals=!1,this.transparent=!0,this.colorNode=null,this.opacityNode=null,this.alphaTestNode=null,this.lightNode=null,this.sizeNode=null,this.positionNode=null,this.setDefaultValues(Tm),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}kl("PointsNodeMaterial",_m);const ym=new de;class Nm extends Gl{constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this.normals=!1,this.colorNode=null,this.opacityNode=null,this.alphaTestNode=null,this.lightNode=null,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(ym),this.setValues(e)}setupPosition({object:e,context:t}){const{positionNode:s,rotationNode:n,scaleNode:r}=this,i=zu;let o=Za.mul(Rr(s||0)),a=Nr(eu[0].xyz.length(),eu[1].xyz.length());null!==r&&(a=a.mul(r));let u=i.xy;e.center&&!0===e.center.isVector2&&(u=u.sub(Xr(e.center).sub(.5))),u=u.mul(a);const l=br(n||Eu),c=l.cos(),d=l.sin(),h=Nr(Nr(c,d.negate()).dot(u),Nr(d,c).dot(u));o=Mr(o.xy.add(h),o.zw);const p=$a.mul(o);return t.vertex=i,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}}kl("SpriteNodeMaterial",Nm);const vm=he.createMaterialFromType;he.createMaterialFromType=function(e){const t=Vl(e);return void 0!==t?t:vm.call(this,e)};class Sm extends he{constructor(e){super(e),this.nodes={}}parse(e){const t=super.parse(e),s=this.nodes,n=e.inputNodes;for(const e in n){const r=n[e];t[e]=s[r]}return t}setNodes(e){return this.nodes=e,this}}class Am extends pe{constructor(e){super(e),this._nodesJSON=null}parse(e,t){this._nodesJSON=e.nodes;const s=super.parse(e,t);return this._nodesJSON=null,s}parseNodes(e,t){if(void 0!==e){const s=new Ep;return s.setTextures(t),s.parseNodes(e)}return{}}parseMaterials(e,t){const s={};if(void 0!==e){const n=this.parseNodes(this._nodesJSON,t),r=new Sm;r.setTextures(t),r.setNodes(n);for(let t=0,n=e.length;t<n;t++){const n=e[t];s[n.uuid]=r.parse(n)}}return s}}class Rm{parseFunction(){}}class Cm{constructor(e,t,s="",n=""){this.type=e,this.inputs=t,this.name=s,this.presicion=n}getCode(){}}Cm.isNodeFunction=!0;const Em=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,wm=/[a-z_0-9]+/gi,Mm="#pragma main";class Om extends Cm{constructor(e){const{type:t,inputs:s,name:n,presicion:r,inputsCode:i,blockCode:o,headerCode:a}=(e=>{const t=(e=e.trim()).indexOf(Mm),s=-1!==t?e.slice(t+12):e,n=s.match(Em);if(null!==n&&5===n.length){const r=n[4],i=[];let o=null;for(;null!==(o=wm.exec(r));)i.push(o);const a=[];let u=0;for(;u<i.length;){const e="const"===i[u][0];!0===e&&u++;let t=i[u][0];"in"===t||"out"===t||"inout"===t?u++:t="";const s=i[u++][0];let n=Number.parseInt(i[u][0]);!1===Number.isNaN(n)?u++:n=null;const r=i[u++][0];a.push(new gc(s,r,n,t,e))}const l=s.substring(n[0].length),c=void 0!==n[3]?n[3]:"";return{type:n[2],inputs:a,name:c,presicion:void 0!==n[1]?n[1]:"",inputsCode:r,blockCode:l,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,s,n,r),this.inputsCode=i,this.blockCode=o,this.headerCode=a}getCode(e=this.name){let t;const s=this.blockCode;if(""!==s){const{type:n,inputsCode:r,headerCode:i,presicion:o}=this;let a=`${n} ${e} ( ${r.trim()} )`;""!==o&&(a=`${o} ${a}`),t=i+a+s}else t="";return t}}class Fm extends Rm{parseFunction(e){return new Om(e)}}const Bm=[Hh('float mx_select(bool b, float t, float f)\n{\n    return b ? t : f;\n}\n\nfloat mx_negate_if(float val, bool b)\n{\n    return b ? -val : val;\n}\n\nint mx_floor(float x)\n{\n    return int(floor(x));\n}\n\n// return mx_floor as well as the fractional remainder\nfloat mx_floorfrac(float x, out int i)\n{\n    i = mx_floor(x);\n    return x - float(i);\n}\n\nfloat mx_bilerp(float v0, float v1, float v2, float v3, float s, float t)\n{\n    float s1 = 1.0 - s;\n    return (1.0 - t) * (v0*s1 + v1*s) + t * (v2*s1 + v3*s);\n}\nvec3 mx_bilerp(vec3 v0, vec3 v1, vec3 v2, vec3 v3, float s, float t)\n{\n    float s1 = 1.0 - s;\n    return (1.0 - t) * (v0*s1 + v1*s) + t * (v2*s1 + v3*s);\n}\nfloat mx_trilerp(float v0, float v1, float v2, float v3, float v4, float v5, float v6, float v7, float s, float t, float r)\n{\n    float s1 = 1.0 - s;\n    float t1 = 1.0 - t;\n    float r1 = 1.0 - r;\n    return (r1*(t1*(v0*s1 + v1*s) + t*(v2*s1 + v3*s)) +\n            r*(t1*(v4*s1 + v5*s) + t*(v6*s1 + v7*s)));\n}\nvec3 mx_trilerp(vec3 v0, vec3 v1, vec3 v2, vec3 v3, vec3 v4, vec3 v5, vec3 v6, vec3 v7, float s, float t, float r)\n{\n    float s1 = 1.0 - s;\n    float t1 = 1.0 - t;\n    float r1 = 1.0 - r;\n    return (r1*(t1*(v0*s1 + v1*s) + t*(v2*s1 + v3*s)) +\n            r*(t1*(v4*s1 + v5*s) + t*(v6*s1 + v7*s)));\n}\n\n// 2 and 3 dimensional gradient functions - perform a dot product against a\n// randomly chosen vector. Note that the gradient vector is not normalized, but\n// this only affects the overal "scale" of the result, so we simply account for\n// the scale by multiplying in the corresponding "perlin" function.\nfloat mx_gradient_float(uint hash, float x, float y)\n{\n    // 8 possible directions (+-1,+-2) and (+-2,+-1)\n    uint h = hash & 7u;\n    float u = mx_select(h<4u, x, y);\n    float v = 2.0 * mx_select(h<4u, y, x);\n    // compute the dot product with (x,y).\n    return mx_negate_if(u, bool(h&1u)) + mx_negate_if(v, bool(h&2u));\n}\nfloat mx_gradient_float(uint hash, float x, float y, float z)\n{\n    // use vectors pointing to the edges of the cube\n    uint h = hash & 15u;\n    float u = mx_select(h<8u, x, y);\n    float v = mx_select(h<4u, y, mx_select((h==12u)||(h==14u), x, z));\n    return mx_negate_if(u, bool(h&1u)) + mx_negate_if(v, bool(h&2u));\n}\nvec3 mx_gradient_vec3(uvec3 hash, float x, float y)\n{\n    return vec3(mx_gradient_float(hash.x, x, y), mx_gradient_float(hash.y, x, y), mx_gradient_float(hash.z, x, y));\n}\nvec3 mx_gradient_vec3(uvec3 hash, float x, float y, float z)\n{\n    return vec3(mx_gradient_float(hash.x, x, y, z), mx_gradient_float(hash.y, x, y, z), mx_gradient_float(hash.z, x, y, z));\n}\n// Scaling factors to normalize the result of gradients above.\n// These factors were experimentally calculated to be:\n//    2D:   0.6616\n//    3D:   0.9820\nfloat mx_gradient_scale2d(float v) { return 0.6616 * v; }\nfloat mx_gradient_scale3d(float v) { return 0.9820 * v; }\nvec3 mx_gradient_scale2d(vec3 v) { return 0.6616 * v; }\nvec3 mx_gradient_scale3d(vec3 v) { return 0.9820 * v; }\n\n/// Bitwise circular rotation left by k bits (for 32 bit unsigned integers)\nuint mx_rotl32(uint x, int k)\n{\n    return (x<<k) | (x>>(32-k));\n}\n\nvoid mx_bjmix(inout uint a, inout uint b, inout uint c)\n{\n    a -= c; a ^= mx_rotl32(c, 4); c += b;\n    b -= a; b ^= mx_rotl32(a, 6); a += c;\n    c -= b; c ^= mx_rotl32(b, 8); b += a;\n    a -= c; a ^= mx_rotl32(c,16); c += b;\n    b -= a; b ^= mx_rotl32(a,19); a += c;\n    c -= b; c ^= mx_rotl32(b, 4); b += a;\n}\n\n// Mix up and combine the bits of a, b, and c (doesn\'t change them, but\n// returns a hash of those three original values).\nuint mx_bjfinal(uint a, uint b, uint c)\n{\n    c ^= b; c -= mx_rotl32(b,14);\n    a ^= c; a -= mx_rotl32(c,11);\n    b ^= a; b -= mx_rotl32(a,25);\n    c ^= b; c -= mx_rotl32(b,16);\n    a ^= c; a -= mx_rotl32(c,4);\n    b ^= a; b -= mx_rotl32(a,14);\n    c ^= b; c -= mx_rotl32(b,24);\n    return c;\n}\n\n// Convert a 32 bit integer into a floating point number in [0,1]\nfloat mx_bits_to_01(uint bits)\n{\n    return float(bits) / float(uint(0xffffffff));\n}\n\nfloat mx_fade(float t)\n{\n   return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n}\n\nuint mx_hash_int(int x)\n{\n    uint len = 1u;\n    uint seed = uint(0xdeadbeef) + (len << 2u) + 13u;\n    return mx_bjfinal(seed+uint(x), seed, seed);\n}\n\nuint mx_hash_int(int x, int y)\n{\n    uint len = 2u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z)\n{\n    uint len = 3u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z, int xx)\n{\n    uint len = 4u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    mx_bjmix(a, b, c);\n    a += uint(xx);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z, int xx, int yy)\n{\n    uint len = 5u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    mx_bjmix(a, b, c);\n    a += uint(xx);\n    b += uint(yy);\n    return mx_bjfinal(a, b, c);\n}\n\nuvec3 mx_hash_vec3(int x, int y)\n{\n    uint h = mx_hash_int(x, y);\n    // we only need the low-order bits to be random, so split out\n    // the 32 bit result into 3 parts for each channel\n    uvec3 result;\n    result.x = (h      ) & 0xFFu;\n    result.y = (h >> 8 ) & 0xFFu;\n    result.z = (h >> 16) & 0xFFu;\n    return result;\n}\n\nuvec3 mx_hash_vec3(int x, int y, int z)\n{\n    uint h = mx_hash_int(x, y, z);\n    // we only need the low-order bits to be random, so split out\n    // the 32 bit result into 3 parts for each channel\n    uvec3 result;\n    result.x = (h      ) & 0xFFu;\n    result.y = (h >> 8 ) & 0xFFu;\n    result.z = (h >> 16) & 0xFFu;\n    return result;\n}\n\nfloat mx_perlin_noise_float(vec2 p)\n{\n    int X, Y;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float result = mx_bilerp(\n        mx_gradient_float(mx_hash_int(X  , Y  ), fx    , fy     ),\n        mx_gradient_float(mx_hash_int(X+1, Y  ), fx-1.0, fy     ),\n        mx_gradient_float(mx_hash_int(X  , Y+1), fx    , fy-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y+1), fx-1.0, fy-1.0),\n        u, v);\n    return mx_gradient_scale2d(result);\n}\n\nfloat mx_perlin_noise_float(vec3 p)\n{\n    int X, Y, Z;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float fz = mx_floorfrac(p.z, Z);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float w = mx_fade(fz);\n    float result = mx_trilerp(\n        mx_gradient_float(mx_hash_int(X  , Y  , Z  ), fx    , fy    , fz     ),\n        mx_gradient_float(mx_hash_int(X+1, Y  , Z  ), fx-1.0, fy    , fz     ),\n        mx_gradient_float(mx_hash_int(X  , Y+1, Z  ), fx    , fy-1.0, fz     ),\n        mx_gradient_float(mx_hash_int(X+1, Y+1, Z  ), fx-1.0, fy-1.0, fz     ),\n        mx_gradient_float(mx_hash_int(X  , Y  , Z+1), fx    , fy    , fz-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y  , Z+1), fx-1.0, fy    , fz-1.0),\n        mx_gradient_float(mx_hash_int(X  , Y+1, Z+1), fx    , fy-1.0, fz-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y+1, Z+1), fx-1.0, fy-1.0, fz-1.0),\n        u, v, w);\n    return mx_gradient_scale3d(result);\n}\n\nvec3 mx_perlin_noise_vec3(vec2 p)\n{\n    int X, Y;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    vec3 result = mx_bilerp(\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  ), fx    , fy     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  ), fx-1.0, fy     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1), fx    , fy-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1), fx-1.0, fy-1.0),\n        u, v);\n    return mx_gradient_scale2d(result);\n}\n\nvec3 mx_perlin_noise_vec3(vec3 p)\n{\n    int X, Y, Z;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float fz = mx_floorfrac(p.z, Z);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float w = mx_fade(fz);\n    vec3 result = mx_trilerp(\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  , Z  ), fx    , fy    , fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  , Z  ), fx-1.0, fy    , fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1, Z  ), fx    , fy-1.0, fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1, Z  ), fx-1.0, fy-1.0, fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  , Z+1), fx    , fy    , fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  , Z+1), fx-1.0, fy    , fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1, Z+1), fx    , fy-1.0, fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1, Z+1), fx-1.0, fy-1.0, fz-1.0),\n        u, v, w);\n    return mx_gradient_scale3d(result);\n}\n\nfloat mx_cell_noise_float(float p)\n{\n    int ix = mx_floor(p);\n    return mx_bits_to_01(mx_hash_int(ix));\n}\n\nfloat mx_cell_noise_float(vec2 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    return mx_bits_to_01(mx_hash_int(ix, iy));\n}\n\nfloat mx_cell_noise_float(vec3 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    return mx_bits_to_01(mx_hash_int(ix, iy, iz));\n}\n\nfloat mx_cell_noise_float(vec4 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    int iw = mx_floor(p.w);\n    return mx_bits_to_01(mx_hash_int(ix, iy, iz, iw));\n}\n\nvec3 mx_cell_noise_vec3(float p)\n{\n    int ix = mx_floor(p);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, 0)),\n            mx_bits_to_01(mx_hash_int(ix, 1)),\n            mx_bits_to_01(mx_hash_int(ix, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec2 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec3 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec4 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    int iw = mx_floor(p.w);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 2))\n    );\n}\n\nfloat mx_fractal_noise_float(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    float result = 0.0;\n    float amplitude = 1.0;\n    for (int i = 0;  i < octaves; ++i)\n    {\n        result += amplitude * mx_perlin_noise_float(p);\n        amplitude *= diminish;\n        p *= lacunarity;\n    }\n    return result;\n}\n\nvec3 mx_fractal_noise_vec3(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    vec3 result = vec3(0.0);\n    float amplitude = 1.0;\n    for (int i = 0;  i < octaves; ++i)\n    {\n        result += amplitude * mx_perlin_noise_vec3(p);\n        amplitude *= diminish;\n        p *= lacunarity;\n    }\n    return result;\n}\n\nvec2 mx_fractal_noise_vec2(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    return vec2(mx_fractal_noise_float(p, octaves, lacunarity, diminish),\n                mx_fractal_noise_float(p+vec3(19, 193, 17), octaves, lacunarity, diminish));\n}\n\nvec4 mx_fractal_noise_vec4(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    vec3  c = mx_fractal_noise_vec3(p, octaves, lacunarity, diminish);\n    float f = mx_fractal_noise_float(p+vec3(19, 193, 17), octaves, lacunarity, diminish);\n    return vec4(c, f);\n}\n\nfloat mx_worley_distance(vec2 p, int x, int y, int xoff, int yoff, float jitter, int metric)\n{\n    vec3  tmp = mx_cell_noise_vec3(vec2(x+xoff, y+yoff));\n    vec2  off = vec2(tmp.x, tmp.y);\n\n    off -= 0.5f;\n    off *= jitter;\n    off += 0.5f;\n\n    vec2 cellpos = vec2(float(x), float(y)) + off;\n    vec2 diff = cellpos - p;\n    if (metric == 2)\n        return abs(diff.x) + abs(diff.y);       // Manhattan distance\n    if (metric == 3)\n        return max(abs(diff.x), abs(diff.y));   // Chebyshev distance\n    // Either Euclidian or Distance^2\n    return dot(diff, diff);\n}\n\nfloat mx_worley_distance(vec3 p, int x, int y, int z, int xoff, int yoff, int zoff, float jitter, int metric)\n{\n    vec3  off = mx_cell_noise_vec3(vec3(x+xoff, y+yoff, z+zoff));\n\n    off -= 0.5f;\n    off *= jitter;\n    off += 0.5f;\n\n    vec3 cellpos = vec3(float(x), float(y), float(z)) + off;\n    vec3 diff = cellpos - p;\n    if (metric == 2)\n        return abs(diff.x) + abs(diff.y) + abs(diff.z); // Manhattan distance\n    if (metric == 3)\n        return max(max(abs(diff.x), abs(diff.y)), abs(diff.z)); // Chebyshev distance\n    // Either Euclidian or Distance^2\n    return dot(diff, diff);\n}\n\nfloat mx_worley_noise_float(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    float sqdist = 1e6f;        // Some big number for jitter > 1 (not all GPUs may be IEEE)\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            sqdist = min(sqdist, dist);\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec2 mx_worley_noise_vec2(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    vec2 sqdist = vec2(1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            if (dist < sqdist.x)\n            {\n                sqdist.y = sqdist.x;\n                sqdist.x = dist;\n            }\n            else if (dist < sqdist.y)\n            {\n                sqdist.y = dist;\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec3 mx_worley_noise_vec3(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    vec3 sqdist = vec3(1e6f, 1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            if (dist < sqdist.x)\n            {\n                sqdist.z = sqdist.y;\n                sqdist.y = sqdist.x;\n                sqdist.x = dist;\n            }\n            else if (dist < sqdist.y)\n            {\n                sqdist.z = sqdist.y;\n                sqdist.y = dist;\n            }\n            else if (dist < sqdist.z)\n            {\n                sqdist.z = dist;\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nfloat mx_worley_noise_float(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    float sqdist = 1e6f;\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                sqdist = min(sqdist, dist);\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec2 mx_worley_noise_vec2(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    vec2 sqdist = vec2(1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                if (dist < sqdist.x)\n                {\n                    sqdist.y = sqdist.x;\n                    sqdist.x = dist;\n                }\n                else if (dist < sqdist.y)\n                {\n                    sqdist.y = dist;\n                }\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec3 mx_worley_noise_vec3(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    vec3 sqdist = vec3(1e6f, 1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                if (dist < sqdist.x)\n                {\n                    sqdist.z = sqdist.y;\n                    sqdist.y = sqdist.x;\n                    sqdist.x = dist;\n                }\n                else if (dist < sqdist.y)\n                {\n                    sqdist.z = sqdist.y;\n                    sqdist.y = dist;\n                }\n                else if (dist < sqdist.z)\n                {\n                    sqdist.z = dist;\n                }\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}')],Um=Yh("float mx_perlin_noise_float( any p )",Bm),Im=Yh("vec2 mx_perlin_noise_vec2( any p )",Bm),Lm=Yh("vec3 mx_perlin_noise_vec3( any p )",Bm),Dm=Yh("float mx_cell_noise_float( vec3 p )",Bm),Pm=Yh("float mx_worley_noise_float( any p, float jitter, int metric )",Bm),Gm=Yh("vec2 mx_worley_noise_vec2( any p, float jitter, int metric )",Bm),km=Yh("vec3 mx_worley_noise_vec3( any p, float jitter, int metric )",Bm),Vm=Yh("float mx_fractal_noise_float( vec3 p, int octaves, float lacunarity, float diminish )",Bm),zm=Yh("vec2 mx_fractal_noise_vec2( vec3 p, int octaves, float lacunarity, float diminish )",Bm),$m=Yh("vec3 mx_fractal_noise_vec3( vec3 p, int octaves, float lacunarity, float diminish )",Bm),Hm=Yh("vec4 mx_fractal_noise_vec4( vec3 p, int octaves, float lacunarity, float diminish )",Bm),Wm=Yh("vec3 mx_hsvtorgb(vec3 hsv)\n{\n    // Reference for this technique: Foley & van Dam\n    float h = hsv.x; float s = hsv.y; float v = hsv.z;\n    if (s < 0.0001f) {\n      return vec3 (v, v, v);\n    } else {\n        h = 6.0f * (h - floor(h));  // expand to [0..6)\n        int hi = int(trunc(h));\n        float f = h - float(hi);\n        float p = v * (1.0f-s);\n        float q = v * (1.0f-s*f);\n        float t = v * (1.0f-s*(1.0f-f));\n        if (hi == 0)\n            return vec3 (v, t, p);\n        else if (hi == 1)\n            return vec3 (q, v, p);\n        else if (hi == 2)\n            return vec3 (p, v, t);\n        else if (hi == 3)\n            return vec3 (p, q, v);\n        else if (hi == 4)\n            return vec3 (t, p, v);\n        return vec3 (v, p, q);\n    }\n}"),jm=Yh("vec3 mx_rgbtohsv(vec3 c)\n{\n    // See Foley & van Dam\n    float r = c.x; float g = c.y; float b = c.z;\n    float mincomp = min (r, min(g, b));\n    float maxcomp = max (r, max(g, b));\n    float delta = maxcomp - mincomp;  // chroma\n    float h, s, v;\n    v = maxcomp;\n    if (maxcomp > 0.0f)\n        s = delta / maxcomp;\n    else s = 0.0f;\n    if (s <= 0.0f)\n        h = 0.0f;\n    else {\n        if      (r >= maxcomp) h = (g-b) / delta;\n        else if (g >= maxcomp) h = 2.0f + (b-r) / delta;\n        else                   h = 4.0f + (r-g) / delta;\n        h *= (1.0f/6.0f);\n        if (h < 0.0f)\n            h += 1.0f;\n    }\n    return vec3(h, s, v);\n}"),qm=Yh("vec3 mx_srgb_texture_to_lin_rec709( vec3 color )",[Hh("#define M_AP1_TO_REC709 mat3(1.705079555511475, -0.1297005265951157, -0.02416634373366833, -0.6242334842681885, 1.138468623161316, -0.1246141716837883, -0.0808461606502533, -0.008768022060394287, 1.148780584335327)\n\nvec3 mx_srgb_texture_to_lin_rec709(vec3 color)\n{\n    bvec3 isAbove = greaterThan(color, vec3(0.04045));\n    vec3 linSeg = color / 12.92;\n    vec3 powSeg = pow(max(color + vec3(0.055), vec3(0.0)) / 1.055, vec3(2.4));\n    return mix(linSeg, powSeg, isAbove);\n}")]),Xm=(e,t)=>{e=br(e),t=br(t);const s=Nr(t.dFdx(),t.dFdy()).length().mul(.7071067811865476);return da(e.sub(s),e.add(s),t)},Ym=(e,t,s,n)=>aa(e,t,s[n].clamp()),Km=(e,t,s=Hi())=>Ym(e,t,s,"x"),Qm=(e,t,s=Hi())=>Ym(e,t,s,"y"),Zm=(e,t,s,n,r)=>aa(e,t,Xm(s,n[r])),Jm=(e,t,s,n=Hi())=>Zm(e,t,s,n,"x"),eg=(e,t,s,n=Hi())=>Zm(e,t,s,n,"y"),tg=(e=1,t=0,s=Hi())=>s.mul(e).add(t),sg=(e,t=1)=>(e=br(e)).abs().pow(t).mul(e.sign()),ng=(e,t=1,s=.5)=>br(e).sub(s).mul(t).add(s),rg=(e=Hi(),t=1,s=0)=>Um(e.convert("vec2|vec3")).mul(t).add(s),ig=(e=Hi(),t=1,s=0)=>Im(e.convert("vec2|vec3")).mul(t).add(s),og=(e=Hi(),t=1,s=0)=>Lm(e.convert("vec2|vec3")).mul(t).add(s),ag=(e=Hi(),t=1,s=0)=>{e=e.convert("vec2|vec3");return Mr(Lm(e),Um(e.add(Nr(19,73)))).mul(t).add(s)},ug=(e=Hi(),t=1)=>Pm(e.convert("vec2|vec3"),t,1),lg=(e=Hi(),t=1)=>Gm(e.convert("vec2|vec3"),t,1),cg=(e=Hi(),t=1)=>km(e.convert("vec2|vec3"),t,1),dg=(e=Hi())=>Dm(e.convert("vec2|vec3")),hg=(e=Hi(),t=3,s=2,n=.5,r=1)=>Vm(e,t,s,n).mul(r),pg=(e=Hi(),t=3,s=2,n=.5,r=1)=>zm(e,t,s,n).mul(r),mg=(e=Hi(),t=3,s=2,n=.5,r=1)=>$m(e,t,s,n).mul(r),gg=(e=Hi(),t=3,s=2,n=.5,r=1)=>Hm(e,t,s,n).mul(r);function fg(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function xg(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}class bg{constructor(){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparent=[],this.lightsNode=new vl([]),this.lightsArray=[],this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparent.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,n,r,i){let o=this.renderItems[this.renderItemsIndex];return void 0===o?(o={id:e.id,object:e,geometry:t,material:s,groupOrder:n,renderOrder:e.renderOrder,z:r,group:i},this.renderItems[this.renderItemsIndex]=o):(o.id=e.id,o.object=e,o.geometry=t,o.material=s,o.groupOrder=n,o.renderOrder=e.renderOrder,o.z=r,o.group=i),this.renderItemsIndex++,o}push(e,t,s,n,r,i){const o=this.getNextRenderItem(e,t,s,n,r,i);!0===e.occlusionTest&&this.occlusionQueryCount++,(!0===s.transparent?this.transparent:this.opaque).push(o)}unshift(e,t,s,n,r,i){const o=this.getNextRenderItem(e,t,s,n,r,i);(!0===s.transparent?this.transparent:this.opaque).unshift(o)}pushLight(e){this.lightsArray.push(e)}getLightsNode(){return this.lightsNode.fromLights(this.lightsArray)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||fg),this.transparent.length>1&&this.transparent.sort(t||xg)}finish(){this.lightsNode.fromLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null}}}class Tg{constructor(){this.lists=new Os}get(e,t){const s=this.lists,n=[e,t];let r=s.get(n);return void 0===r&&(r=new bg,s.set(n,r)),r}dispose(){this.lists=new Os}}let _g=0;class yg{constructor(){this.id=_g++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!0,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new o,this.scissor=!1,this.scissorValue=new o,this.texture=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0}}class Ng{constructor(){this.chainMaps={}}get(e,t,s=null){const n=[e,t];let r;if(null===s)r="default";else{let e,t;s.isWebGLMultipleRenderTargets?(e=s.texture[0].format,t=s.texture.length):(e=s.texture.format,t=1),r=`${t}:${e}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const i=this.getChainMap(r);let o=i.get(n);return void 0===o&&(o=new yg,i.set(n,o)),null!==s&&(o.sampleCount=0===s.samples?1:s.samples),o}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Os)}dispose(){this.chainMaps={}}}const vg=new i;class Sg extends Is{constructor(e,t){super(),this.backend=e,this.info=t}updateRenderTarget(e,t=0){const s=this.get(e),n=0===e.samples?1:e.samples,r=s.depthTextureMips||(s.depthTextureMips={});let i,o;e.isWebGLMultipleRenderTargets?(o=e.texture,i=e.texture[0]):(o=[e.texture],i=e.texture);const a=this.getSize(i),u=a.width>>t,l=a.height>>t;let c=e.depthTexture||r[t],d=!1;void 0===c&&(c=new x,c.format=me,c.type=ge,c.image.width=u,c.image.height=l,r[t]=c),s.width===a.width&&a.height===s.height||(d=!0,c.needsUpdate=!0,c.image.width=u,c.image.height=l),s.width=a.width,s.height=a.height,s.textures=o,s.depthTexture=c,s.sampleCount!==n&&(d=!0,c.needsUpdate=!0,s.sampleCount=n);const h={sampleCount:n};for(let e=0;e<o.length;e++){const t=o[e];d&&(t.needsUpdate=!0),this.updateTexture(t,h)}if(this.updateTexture(c,h),!0!==s.initialized){s.initialized=!0;const t=()=>{if(e.removeEventListener("dispose",t),void 0!==o)for(let e=0;e<o.length;e++)this._destroyTexture(o[e]);else this._destroyTexture(i);this._destroyTexture(c)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const s=this.get(e);if(!0===s.initialized&&s.version===e.version)return;const n=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,r=this.backend;n&&!0===s.initialized&&(r.destroySampler(e),r.destroyTexture(e));const{width:i,height:o,depth:a}=this.getSize(e);if(t.width=i,t.height=o,t.depth=a,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,i,o):1,n||!0===e.isStorageTexture)r.createSampler(e),r.createTexture(e,t);else{if(!0!==s.initialized&&r.createSampler(e),e.version>0){const n=e.image;if(void 0===n);else if(!1===n.complete);else{if(e.images){const s=[];for(const t of e.images)s.push(t);t.images=s}else t.image=n;void 0!==s.isDefaultTexture&&!0!==s.isDefaultTexture||(r.createTexture(e,t),s.isDefaultTexture=!1),r.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&r.generateMipmaps(e)}}else r.createDefaultTexture(e),s.isDefaultTexture=!0}if(!0!==s.initialized){s.initialized=!0,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",t)}s.version=e.version}getSize(e,t=vg){let s=e.images?e.images[0]:e.image;return s?(void 0!==s.image&&(s=s.image),t.width=s.width,t.height=s.height,t.depth=e.isCubeTexture?6:s.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let n;return n=e.isCompressedTexture?e.mipmaps.length:Math.floor(Math.log2(Math.max(t,s)))+1,n}needsMipmaps(e){return!!this.isEnvironmentTexture(e)||(!0===e.isCompressedTexture||e.minFilter!==b&&e.minFilter!==O)}isEnvironmentTexture(e){const t=e.mapping;return t===fe||t===xe||t===be||t===Te}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}let Ag;const Rg=new n;class Cg extends Is{constructor(e,t){super(),this.renderer=e,this.nodes=t,this.backgroundMesh=null,this.backgroundMeshNode=null}update(e,t,s){const n=this.renderer,r=this.nodes.getBackgroundNode(e)||e.background;let i=!1;if(null===r)Rg.copyLinearToSRGB(n._clearColor),Ag=n._clearAlpha;else if(!0===r.isColor)Rg.copyLinearToSRGB(r),Ag=1,i=!0;else if(!0===r.isNode){const s=this.get(e),i=r;Rg.copy(n._clearColor),Ag=n._clearAlpha;let o=this.backgroundMesh;if(null===o){this.backgroundMeshNode=li(i,{getUV:()=>uu,getTextureLevel:()=>_d}).mul(yd);let e=Xu();e=e.setZ(e.w);const t=new Gl;t.outputNode=this.backgroundMeshNode,t.side=R,t.depthTest=!1,t.depthWrite=!1,t.fog=!1,t.vertexNode=e,this.backgroundMesh=o=new E(new _e(1,32,32),t),o.frustumCulled=!1,o.onBeforeRender=function(e,t,s){this.matrixWorld.copyPosition(s.matrixWorld)}}const a=i.getCacheKey();s.backgroundCacheKey!==a&&(this.backgroundMeshNode.node=i,o.material.needsUpdate=!0,s.backgroundCacheKey=a),t.unshift(o,o.geometry,o.material,0,0,null)}if(!0===n.autoClear||!0===i){Rg.multiplyScalar(Ag);const e=s.clearColorValue;e.r=Rg.r,e.g=Rg.g,e.b=Rg.b,e.a=Ag,s.depthClearValue=n._clearDepth,s.stencilClearValue=n._clearStencil,s.clearColor=!0===n.autoClearColor,s.clearDepth=!0===n.autoClearDepth,s.clearStencil=!0===n.autoClearStencil}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}class Eg{constructor(e,t,s,n,r,i,o){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.nodeAttributes=n,this.bindings=r,this.updateNodes=i,this.updateBeforeNodes=o,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings){let s=t;!0!==t.shared&&(s=t.clone()),e.push(s)}return e}}class wg extends Is{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new mc,this.nodeBuilderCache=new Map,this.callHashCache=new Os,this.groupsData=new Os}updateGroup(e){const t=e.groupNode,s=t.name;if(s===Sn.name)return!0;if(s===vn.name){const t=this.get(e),s=this.nodeFrame.renderId;return t.renderId!==s&&(t.renderId=s,!0)}if(s===Nn.name){const t=this.get(e),s=this.nodeFrame.frameId;return t.frameId!==s&&(t.frameId=s,!0)}const n=[t,e];let r=this.groupsData.get(n);return void 0===r&&this.groupsData.set(n,r={}),r.version!==t.version&&(r.version=t.version,!0)}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const{nodeBuilderCache:n}=this,r=this.getForRenderCacheKey(e);if(s=n.get(r),void 0===s){const t=this.backend.createNodeBuilder(e.object,this.renderer,e.scene);t.material=e.material,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.toneMappingNode=this.getToneMappingNode(),t.build(),s=this._createNodeBuilderState(t),n.set(r,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const n=this.backend.createNodeBuilder(e,this.renderer);n.build(),s=this._createNodeBuilderState(n),t.nodeBuilderState=n}return s}_createNodeBuilderState(e){return new Eg(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getToneMappingNode(){return!1===this.isToneMappingState?null:this.renderer.toneMappingNode||this.get(this.renderer).toneMappingNode||null}getCacheKey(e,t){const s=[e,t],n=this.renderer.info.calls;let r=this.callHashCache.get(s);if(void 0===r||r.callId!==n){const i=this.getEnvironmentNode(e),o=this.getFogNode(e),a=this.getToneMappingNode(),u=[];t&&u.push(t.getCacheKey()),i&&u.push(i.getCacheKey()),o&&u.push(o.getCacheKey()),a&&u.push(a.getCacheKey()),r={callId:n,cacheKey:u.join(",")},this.callHashCache.set(s,r)}return r.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e),this.updateToneMapping()}get isToneMappingState(){const e=this.renderer.getRenderTarget();return!e||!e.isCubeRenderTarget}updateToneMapping(){const e=this.renderer,t=this.get(e),s=e.toneMapping;if(this.isToneMappingState&&s!==k){if(t.toneMapping!==s){const n=t.rendererToneMappingNode||hh(s,Oa("toneMappingExposure","float",e));n.toneMapping=s,t.rendererToneMappingNode=n,t.toneMappingNode=n,t.toneMapping=s}}else delete t.toneMappingNode,delete t.toneMapping}updateBackground(e){const t=this.get(e),s=e.background;if(s){if(t.background!==s){let e=null;if(!0===s.isCubeTexture)e=bl(s,uu);else if(!0===s.isTexture){let t=null;t=s.mapping===fe||s.mapping===xe?Ol():_h,e=Ea(s,t).setUpdateMatrix(!0)}else s.isColor;t.backgroundNode=e,t.background=s}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){let e=null;s.isFogExp2?e=lp(Oa("color","color",s),Oa("density","float",s)):s.isFog&&(e=ap(Oa("color","color",s),Oa("near","float",s),Oa("far","float",s))),t.fogNode=e,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){let e=null;!0===s.isCubeTexture?e=bl(s):!0===s.isTexture&&(e=Ea(s)),t.environmentNode=e,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,s=null,n=null,r=null){const i=this.nodeFrame;return i.renderer=e,i.scene=t,i.object=s,i.camera=n,i.material=r,i}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}updateBefore(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const e of s.updateBeforeNodes)t.updateBeforeNode(e)}updateForCompute(e){const t=this.getNodeFrame(),s=this.getForCompute(e);for(const e of s.updateNodes)t.updateNode(e)}updateForRender(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const e of s.updateNodes)t.updateNode(e)}dispose(){super.dispose(),this.nodeFrame=new mc,this.nodeBuilderCache=new Map}}const Mg=new w,Og=new r,Fg=new o,Bg=new ye,Ug=new u,Ig=new i;class Lg{constructor(e){this.isRenderer=!0,this.domElement=e.getDomElement(),this.backend=e,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.outputColorSpace=h,this.toneMapping=k,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=!0,this.stencil=!0,this.info=new Hs,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new o(0,0,this._width,this._height),this._scissor=new o(0,0,this._width,this._height),this._scissorTest=!1,this._properties=null,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._currentRenderContext=null,this._lastRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._clearAlpha=1,this._clearColor=new n(0),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._initialized=!1,this._initPromise=null,this.shadowMap={enabled:!1,type:null},this.xr={enabled:!1}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise((async(e,t)=>{const s=this.backend;try{await s.init(this)}catch(e){return void t(e)}this._nodes=new wg(this,s),this._animation=new Ms(this._nodes,this.info),this._attributes=new ks(s),this._background=new Cg(this,this._nodes),this._geometries=new $s(this._attributes,this.info),this._textures=new Sg(s,this.info),this._pipelines=new Ks(s,this._nodes),this._bindings=new Qs(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new Us(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new Tg,this._renderContexts=new Ng,this._initialized=!0,e()}))),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compile(){}async render(e,t){!1===this._initialized&&await this.init();const s=this._nodes.nodeFrame,n=s.renderId,r=this._currentRenderContext,i=this._currentRenderObjectFunction,o=!0===e.isScene?e:Mg,a=this._renderTarget,u=this._renderContexts.get(e,t,a),l=this._activeCubeFace,c=this._activeMipmapLevel;this._currentRenderContext=u,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,s.renderId=this.info.calls;const d=this.coordinateSystem;t.coordinateSystem!==d&&(t.coordinateSystem=d,t.updateProjectionMatrix()),!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===this.info.autoReset&&this.info.reset();let h=this._viewport,p=this._scissor,m=this._pixelRatio;null!==a&&(h=a.viewport,p=a.scissor,m=1),this.getDrawingBufferSize(Og),Fg.set(0,0,Og.width,Og.height);const g=void 0===h.minDepth?0:h.minDepth,f=void 0===h.maxDepth?1:h.maxDepth;u.viewportValue.copy(h).multiplyScalar(m).floor(),u.viewportValue.width>>=c,u.viewportValue.height>>=c,u.viewportValue.minDepth=g,u.viewportValue.maxDepth=f,u.viewport=!1===u.viewportValue.equals(Fg),u.scissorValue.copy(p).multiplyScalar(m).floor(),u.scissor=this._scissorTest&&!1===u.scissorValue.equals(Fg),u.scissorValue.width>>=c,u.scissorValue.height>>=c,u.depth=this.depth,u.stencil=this.stencil,o.onBeforeRender(this,e,t,a),Ug.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Bg.setFromProjectionMatrix(Ug,d);const x=this._renderLists.get(e,t);if(x.begin(),this._projectObject(e,t,0,x),x.finish(),!0===this.sortObjects&&x.sort(this._opaqueSort,this._transparentSort),null!==a){this._textures.updateRenderTarget(a,c);const e=this._textures.get(a);u.textures=e.textures,u.depthTexture=e.depthTexture,u.width=e.width,u.height=e.height}else u.textures=null,u.depthTexture=null,u.width=this.domElement.width,u.height=this.domElement.height;u.width>>=c,u.height>>=c,u.activeCubeFace=l,u.activeMipmapLevel=c,u.occlusionQueryCount=x.occlusionQueryCount,this._nodes.updateScene(o),this._background.update(o,x,u),this.backend.beginRender(u);const b=x.opaque,T=x.transparent,_=x.lightsNode;b.length>0&&this._renderObjects(b,t,o,_),T.length>0&&this._renderObjects(T,t,o,_),this.backend.finishRender(u),s.renderId=n,this._currentRenderContext=r,this._currentRenderObjectFunction=i,this._lastRenderContext=u,o.onAfterRender(this,e,t,a)}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(e)}getArrayBuffer(e){return this.getArrayBufferAsync(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this._context}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio=e,this.setSize(this._width,this._height,!1)}setDrawingBufferSize(e,t,s){this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,s=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===s&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,n){const r=this._scissor;e.isVector4?r.copy(e):r.set(e,t,s,n)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,n,r=0,i=1){const o=this._viewport;e.isVector4?o.copy(e):o.set(e,t,s,n),o.minDepth=r,o.maxDepth=i}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearAlpha=t}getClearAlpha(){return this._clearAlpha}setClearAlpha(e){this._clearAlpha=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext||this._lastRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){const n=this._currentRenderContext||this._lastRenderContext;n&&this.backend.clear(n,e,t,s)}clearColor(){this.clear(!0,!1,!1)}clearDepth(){this.clear(!1,!0,!1)}clearStencil(){this.clear(!1,!1,!0)}dispose(){this.info.dispose(),this._animation.dispose(),this._objects.dispose(),this._properties.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}async compute(e){!1===this._initialized&&await this.init();const t=this._nodes.nodeFrame,s=t.renderId;this.info.calls++,this.info.compute.calls++,t.renderId=this.info.calls;const n=this.backend,r=this._pipelines,i=this._bindings,o=this._nodes,a=Array.isArray(e)?e:[e];if(void 0===a[0]||!0!==a[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");n.beginCompute(e);for(const t of a){if(!1===r.has(t)){const e=()=>{t.removeEventListener("dispose",e),r.delete(t),i.delete(t),o.delete(t)};t.addEventListener("dispose",e),t.onInit({renderer:this})}o.updateForCompute(t),i.updateForCompute(t);const s=i.getForCompute(t),a=r.getForCompute(t,s);n.compute(e,t,s,a)}n.finishCompute(e),t.renderId=s}hasFeature(e){return this.backend.hasFeature(e)}copyFramebufferToTexture(e){const t=this._currentRenderContext||this._lastRenderContext;this._textures.updateTexture(e),this.backend.copyFramebufferToTexture(e,t)}readRenderTargetPixelsAsync(e,t,s,n,r){return this.backend.copyTextureToBuffer(e.texture,t,s,n,r)}_projectObject(e,t,s,n){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)s=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)n.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||Bg.intersectsSprite(e)){!0===this.sortObjects&&Ig.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ug);const t=e.geometry,r=e.material;r.visible&&n.push(e,t,r,s,Ig.z,null)}}else if(e.isLineLoop);else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||Bg.intersectsObject(e))){const t=e.geometry,r=e.material;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),Ig.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Ug)),Array.isArray(r)){const i=t.groups;for(let o=0,a=i.length;o<a;o++){const a=i[o],u=r[a.materialIndex];u&&u.visible&&n.push(e,t,u,s,Ig.z,a)}}else r.visible&&n.push(e,t,r,s,Ig.z,null)}const r=e.children;for(let e=0,i=r.length;e<i;e++)this._projectObject(r[e],t,s,n)}_renderObjects(e,t,s,n){for(let r=0,i=e.length;r<i;r++){const i=e[r],{object:o,geometry:a,material:u,group:l}=i;if(t.isArrayCamera){const e=t.cameras;for(let t=0,r=e.length;t<r;t++){const r=e[t];if(o.layers.test(r.layers)){const e=r.viewport,t=void 0===e.minDepth?0:e.minDepth,i=void 0===e.maxDepth?1:e.maxDepth,c=this._currentRenderContext.viewportValue;c.copy(e).multiplyScalar(this._pixelRatio).floor(),c.minDepth=t,c.maxDepth=i,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(o,s,r,a,u,l,n)}}}else this._currentRenderObjectFunction(o,s,t,a,u,l,n)}}renderObject(e,t,s,n,r,i,o){r=null!==t.overrideMaterial?t.overrideMaterial:r,e.onBeforeRender(this,t,s,n,r,i),r.onBeforeRender(this,t,s,n,r,i),!0===r.transparent&&r.side===Ne&&!1===r.forceSinglePass?(r.side=R,this._renderObjectDirect(e,r,t,s,o,"backSide"),r.side=ve,this._renderObjectDirect(e,r,t,s,o),r.side=Ne):this._renderObjectDirect(e,r,t,s,o),e.onAfterRender(this,t,s,n,r,i)}_renderObjectDirect(e,t,s,n,r,i){const o=this._objects.get(e,t,s,n,r,this._currentRenderContext,i);this._nodes.updateBefore(o),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),this._nodes.updateForRender(o),this._geometries.updateForRender(o),this._bindings.updateForRender(o),this._pipelines.updateForRender(o),this.backend.draw(o,this.info)}}class Dg{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function Pg(e){return e+(Gs-e%Gs)%Gs}function Gg(e,t=4){return Pg(kg(t)*e)}function kg(e){return e+(4-e%4)%4}class Vg extends Dg{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return Pg(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class zg extends Vg{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}class $g extends zg{constructor(e){super(e),this.isUniformsGroup=!0,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,s=this.uniforms.length;t<s;t++){const s=this.uniforms[t],n=e%Gs;0!==n&&Gs-n-s.boundary<0?e+=Gs-n:n%s.boundary!=0&&(e+=n%s.boundary),s.offset=e/this.bytesPerElement,e+=s.itemSize*this.bytesPerElement}return Math.ceil(e/Gs)*Gs}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isFloatUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void 0}updateNumber(e){let t=!1;const s=this.buffer,n=e.getValue(),r=e.offset;return s[r]!==n&&(s[r]=n,t=!0),t}updateVector2(e){let t=!1;const s=this.buffer,n=e.getValue(),r=e.offset;return s[r+0]===n.x&&s[r+1]===n.y||(s[r+0]=n.x,s[r+1]=n.y,t=!0),t}updateVector3(e){let t=!1;const s=this.buffer,n=e.getValue(),r=e.offset;return s[r+0]===n.x&&s[r+1]===n.y&&s[r+2]===n.z||(s[r+0]=n.x,s[r+1]=n.y,s[r+2]=n.z,t=!0),t}updateVector4(e){let t=!1;const s=this.buffer,n=e.getValue(),r=e.offset;return s[r+0]===n.x&&s[r+1]===n.y&&s[r+2]===n.z&&s[r+4]===n.w||(s[r+0]=n.x,s[r+1]=n.y,s[r+2]=n.z,s[r+3]=n.w,t=!0),t}updateColor(e){let t=!1;const s=this.buffer,n=e.getValue(),r=e.offset;return s[r+0]===n.r&&s[r+1]===n.g&&s[r+2]===n.b||(s[r+0]=n.r,s[r+1]=n.g,s[r+2]=n.b,t=!0),t}updateMatrix3(e){let t=!1;const s=this.buffer,n=e.getValue().elements,r=e.offset;return s[r+0]===n[0]&&s[r+1]===n[1]&&s[r+2]===n[2]&&s[r+4]===n[3]&&s[r+5]===n[4]&&s[r+6]===n[5]&&s[r+8]===n[6]&&s[r+9]===n[7]&&s[r+10]===n[8]||(s[r+0]=n[0],s[r+1]=n[1],s[r+2]=n[2],s[r+4]=n[3],s[r+5]=n[4],s[r+6]=n[5],s[r+8]=n[6],s[r+9]=n[7],s[r+10]=n[8],t=!0),t}updateMatrix4(e){let t=!1;const s=this.buffer,n=e.getValue().elements,r=e.offset;return!1===function(e,t,s){for(let n=0,r=t.length;n<r;n++)if(e[s+n]!==t[n])return!1;return!0}(s,n,r)&&(s.set(n,r),t=!0),t}}let Hg=0;class Wg extends $g{constructor(e,t){super(e),this.id=Hg++,this.groupNode=t,this.isNodeUniformsGroup=!0}get shared(){return this.groupNode.shared}getNodes(){const e=[];for(const t of this.uniforms){const s=t.nodeUniform.node;if(!s)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(s)}return e}}let jg=0;class qg extends Dg{constructor(e,t){super(e),this.id=jg++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.isSampledTexture=!0}get needsBindingsUpdate(){const{texture:e,version:t}=this;return!!e.isVideoTexture||t!==e.version}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}}class Xg extends qg{constructor(e,t){super(e,t?t.value:null),this.textureNode=t}get needsBindingsUpdate(){return this.textureNode.value!==this.texture||super.needsBindingsUpdate}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class Yg extends Xg{constructor(e,t){super(e,t),this.isSampledCubeTexture=!0}}const Kg={[mo.ATAN2]:"atan",textureDimensions:"textureSize"},Qg={low:"lowp",medium:"mediump",high:"highp"},Zg={instance:!0};class Jg extends pc{constructor(e,t,s=null){super(e,t,new Fm,s),this.uniformGroups={}}getMethod(e){return Kg[e]||e}getPropertyName(e,t){return e.isOutputStructVar?"":super.getPropertyName(e,t)}buildFunctionNode(e){const t=e.layout,s=this.flowShaderNode(e),n=[];for(const e of t.inputs)n.push(this.getType(e.type)+" "+e.name);const r=`${this.getType(t.type)} ${t.name}( ${n.join(", ")} ) {\n\n\t${s.vars}\n\n${s.code}\n\treturn ${s.result};\n\n}`;return new qh(r)}generateTexture(e,t,s,n){return e.isTextureCube?`textureCube( ${t}, ${s} )`:e.isDepthTexture?`texture( ${t}, ${s} ).x`:(n&&(s=`vec3( ${s}, ${n} )`),`texture( ${t}, ${s} )`)}generateTextureLevel(e,t,s,n){return`textureLod( ${t}, ${s}, ${n} )`}generateTextureCompare(e,t,s,n,r,i=this.shaderStage){if("fragment"===i)return`texture( ${t}, vec3( ${s}, ${n} ) )`}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)e.isOutputStructVar||t.push(`${this.getVar(e.type,e.name)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],s=[],n={};for(const e of t){let t=null,r=!1;if("texture"===e.type){const s=e.node.value;t=s.compareFunction?`sampler2DShadow ${e.name};`:!0===s.isDataArrayTexture?`sampler2DArray ${e.name};`:`sampler2D ${e.name};`}else if("cubeTexture"===e.type)t=`samplerCube ${e.name};`;else if("buffer"===e.type){const s=e.node,n=this.getType(s.bufferType),r=s.bufferCount,i=r>0?r:"";t=`${s.name} {\n\t${n} ${e.name}[${i}];\n};\n`}else{t=`${this.getVectorType(e.type)} ${e.name};`,r=!0}const i=e.node.precision;if(null!==i&&(t=Qg[i]+" "+t),r){t="\t"+t;const s=e.groupNode.name;(n[s]||(n[s]=[])).push(t)}else t="uniform "+t,s.push(t)}let r="";for(const t in n){const s=n[t];r+=this._getGLSLUniformStruct(e+"_"+t,s.join("\n"))+"\n"}return r+=s.join("\n"),r}getAttributes(e){let t="";if("vertex"===e){const e=this.getAttributesArray();let s=0;for(const n of e)t+=`layout( location = ${s++} ) in ${n.type} ${n.name};\n`}return t}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const n=s[e];t.push(`layout( location = ${e} ) out ${n} m${e};`)}return t.join("\n")}getStructs(e){const t=[],s=this.structs[e];if(0===s.length)return"layout( location = 0 ) out vec4 fragColor;\n";for(let e=0,n=s.length;e<n;e++){const n=s[e];let r="\n";r+=this.getStructMembers(n),r+="\n",t.push(r)}return t.join("\n\n")}getVaryings(e){let t="";const s=this.varyings;if("vertex"===e)for(const e of s){const s=e.type;t+=`${"int"===s||"uint"===s?"flat ":""}${e.needsInterpolation?"out":"/*out*/"} ${s} ${e.name};\n`}else if("fragment"===e)for(const e of s)if(e.needsInterpolation){const s=e.type;t+=`${"int"===s||"uint"===s?"flat ":""}in ${s} ${e.name};\n`}return t}getVertexIndex(){return"gl_VertexID"}getInstanceIndex(){return"uint( gl_InstanceID )"}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord"}isAvailable(e){return!0===Zg[e]}isFlipY(){return!0}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\nprecision highp float;\nprecision highp int;\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\nprecision highp float;\nprecision highp int;\nprecision highp sampler2DArray;\nprecision lowp sampler2DShadow;\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};for(const t in e){let s="// code\n\n";s+=this.flowCode[t];const n=this.flowNodes[t],r=n[n.length-1];for(const e of n){const n=this.getFlowData(e),i=e.name;i&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${i}\n\t`),s+=`${n.code}\n\t`,e===r&&"compute"!==t&&(s+="// result\n\t","vertex"===t?(s+="gl_Position = ",s+=`${n.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${n.result};`)))}const i=e[t];i.uniforms=this.getUniforms(t),i.attributes=this.getAttributes(t),i.varyings=this.getVaryings(t),i.vars=this.getVars(t),i.structs=this.getStructs(t),i.codes=this.getCodes(t),i.flow=s}null!==this.material&&(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment))}getUniformFromNode(e,t,s,n=null){const r=super.getUniformFromNode(e,t,s,n),i=this.getDataFromNode(e,s);let o=i.uniformGPU;if(void 0===o){if("texture"===t)o=new Xg(r.name,r.node),this.bindings[s].push(o);else if("cubeTexture"===t)o=new Yg(r.name,r.node),this.bindings[s].push(o);else if("buffer"===t){e.name=`NodeBuffer_${e.id}`;const t=new zg(e.name,e.value);r.name=`buffer${e.id}`,this.bindings[s].push(t),o=t}else{const n=e.groupNode,i=n.name,a=this.uniformGroups[s]||(this.uniformGroups[s]={});let u=a[i];void 0===u&&(u=new Wg(s+"_"+i,n),a[i]=u,this.bindings[s].push(u)),o=this.getNodeUniform(r,t),u.addUniform(o)}i.uniformGPU=o}return r}build(){const{object:e,material:t}=this;return null!==t?Gl.fromMaterial(t).build(this):this.addFlow("compute",e),super.build()}}let ef=null,tf=null;class sf{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(e){}finish(e){}draw(e,t){}createProgram(e){}destroyProgram(e){}createBindings(e){}updateBindings(e){}createRenderPipeline(e){}createComputePipeline(e,t){}destroyPipeline(e){}needsUpdate(e){}getCacheKey(e){}createNodeBuilder(e){}createSampler(e){}createDefaultTexture(e){}createTexture(e){}copyTextureToBuffer(e,t,s,n,r){}createAttribute(e){}createIndexAttribute(e){}updateAttribute(e){}destroyAttribute(e){}updateSize(){}hasFeature(e){}getInstanceCount(e){const{object:t,geometry:s}=e;return s.isInstancedBufferGeometry?s.instanceCount:t.isInstancedMesh?t.count:1}getDrawingBufferSize(){return ef=ef||new r,this.renderer.getDrawingBufferSize(ef)}getScissor(){return tf=tf||new o,this.renderer.getScissor(tf)}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:Se(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${D}`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){this.data.delete(e)}}class nf{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:n}=s,r=e.array,i=e.usage||n.STATIC_DRAW,o=e.isInterleavedBufferAttribute?e.data:e,a=s.get(o);let u,l=a.bufferGPU;void 0===l&&(l=n.createBuffer(),n.bindBuffer(t,l),n.bufferData(t,r,i),n.bindBuffer(t,null),a.bufferGPU=l,a.bufferType=t,a.version=o.version);let c=!1;if(r instanceof Float32Array)u=n.FLOAT,c=!0;else if(r instanceof Uint16Array)e.isFloat16BufferAttribute?(u=n.HALF_FLOAT,c=!0):u=n.UNSIGNED_SHORT;else if(r instanceof Int16Array)u=n.SHORT;else if(r instanceof Uint32Array)u=n.UNSIGNED_INT;else if(r instanceof Int32Array)u=n.INT;else if(r instanceof Int8Array)u=n.BYTE;else if(r instanceof Uint8Array)u=n.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+r);u=n.UNSIGNED_BYTE}s.set(e,{bufferGPU:l,type:u,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,isFloat:c})}updateAttribute(e){const t=this.backend,{gl:s}=t,n=e.array,r=e.isInterleavedBufferAttribute?e.data:e,i=t.get(r),o=i.bufferType;s.bindBuffer(o,i.bufferGPU),s.bufferSubData(o,0,n),s.bindBuffer(o,null),i.version=r.version}}let rf,of,af=!1;class uf{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,!1===af&&(this._init(this.gl),af=!0)}_init(e){rf={[Ae]:e.FUNC_ADD,[Re]:e.FUNC_SUBTRACT,[Ce]:e.FUNC_REVERSE_SUBTRACT},of={[Ee]:e.ZERO,[we]:e.ONE,[Me]:e.SRC_COLOR,[Oe]:e.SRC_ALPHA,[Fe]:e.SRC_ALPHA_SATURATE,[Be]:e.DST_COLOR,[Ue]:e.DST_ALPHA,[Ie]:e.ONE_MINUS_SRC_COLOR,[Le]:e.ONE_MINUS_SRC_ALPHA,[De]:e.ONE_MINUS_DST_COLOR,[Pe]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==Ge?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===ke?t.cullFace(t.BACK):e===Ve?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setBlending(e,t,s,n,r,i,o,a){const{gl:u}=this;if(e!==C){if(!1===this.currentBlendingEnabled&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e===ze)r=r||t,i=i||s,o=o||n,t===this.currentBlendEquation&&r===this.currentBlendEquationAlpha||(u.blendEquationSeparate(rf[t],rf[r]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),s===this.currentBlendSrc&&n===this.currentBlendDst&&i===this.currentBlendSrcAlpha&&o===this.currentBlendDstAlpha||(u.blendFuncSeparate(of[s],of[n],of[i],of[o]),this.currentBlendSrc=s,this.currentBlendDst=n,this.currentBlendSrcAlpha=i,this.currentBlendDstAlpha=o),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||a!==this.currentPremultipledAlpha){if(this.currentBlendEquation===Ae&&this.currentBlendEquationAlpha===Ae||(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=Ae,this.currentBlendEquationAlpha=Ae),a)switch(e){case je:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case We:u.blendFunc(u.ONE,u.ONE);break;case He:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case $e:u.blendFuncSeparate(u.ZERO,u.SRC_COLOR,u.ZERO,u.SRC_ALPHA)}else switch(e){case je:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case We:u.blendFunc(u.SRC_ALPHA,u.ONE);break;case He:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case $e:u.blendFunc(u.ZERO,u.SRC_COLOR)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=a}}else!0===this.currentBlendingEnabled&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1)}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case et:t.depthFunc(t.NEVER);break;case Je:t.depthFunc(t.ALWAYS);break;case Ze:t.depthFunc(t.LESS);break;case Qe:t.depthFunc(t.LEQUAL);break;case Ke:t.depthFunc(t.EQUAL);break;case Ye:t.depthFunc(t.GEQUAL);break;case Xe:t.depthFunc(t.GREATER);break;case qe:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===s||(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===s||(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t){const{gl:s}=this;e.side===Ne?this.disable(s.CULL_FACE):this.enable(s.CULL_FACE);let n=e.side===R;t&&(n=!n),this.setFlipSided(n),e.blending===je&&!1===e.transparent?this.setBlending(C):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const r=e.stencilWrite;this.setStencilTest(r),r&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?this.enable(s.SAMPLE_ALPHA_TO_COVERAGE):this.disable(s.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(e,t,s){const{gl:n}=this;e?(this.enable(n.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===s||(n.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(n.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}}class lf{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=N){const{gl:s,extensions:n}=this;let r;if(e===tt)return s.UNSIGNED_BYTE;if(e===st)return s.UNSIGNED_SHORT_4_4_4_4;if(e===nt)return s.UNSIGNED_SHORT_5_5_5_1;if(e===rt)return s.BYTE;if(e===it)return s.SHORT;if(e===ot)return s.UNSIGNED_SHORT;if(e===at)return s.INT;if(e===q)return s.UNSIGNED_INT;if(e===ut)return s.FLOAT;if(e===lt)return s.HALF_FLOAT;if(e===ct)return s.ALPHA;if(e===dt)return s.RGBA;if(e===ht)return s.LUMINANCE;if(e===pt)return s.LUMINANCE_ALPHA;if(e===X)return s.DEPTH_COMPONENT;if(e===me)return s.DEPTH_STENCIL;if(e===mt)return s.RED;if(e===gt)return s.RED_INTEGER;if(e===ft)return s.RG;if(e===xt)return s.RG_INTEGER;if(e===bt)return s.RGBA_INTEGER;if(e===Tt||e===_t||e===yt||e===Nt)if(t===h){if(r=n.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(e===Tt)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===_t)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===yt)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Nt)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=n.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(e===Tt)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===_t)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===yt)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Nt)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===vt||e===St||e===At||e===Rt){if(r=n.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(e===vt)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===St)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===At)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Rt)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===Ct)return r=n.get("WEBGL_compressed_texture_etc1"),null!==r?r.COMPRESSED_RGB_ETC1_WEBGL:null;if(e===Et||e===wt){if(r=n.get("WEBGL_compressed_texture_etc"),null===r)return null;if(e===Et)return t===h?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(e===wt)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(e===Mt||e===Ot||e===Ft||e===Bt||e===Ut||e===It||e===Lt||e===Dt||e===Pt||e===Gt||e===kt||e===Vt||e===zt||e===$t){if(r=n.get("WEBGL_compressed_texture_astc"),null===r)return null;if(e===Mt)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Ot)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Ft)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Bt)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Ut)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===It)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Lt)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Dt)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Pt)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Gt)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===kt)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===Vt)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===zt)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===$t)return t===h?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===Ht){if(r=n.get("EXT_texture_compression_bptc"),null===r)return null;if(e===Ht)return t===h?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===Wt||e===jt||e===qt||e===Xt){if(r=n.get("EXT_texture_compression_rgtc"),null===r)return null;if(e===Ht)return r.COMPRESSED_RED_RGTC1_EXT;if(e===jt)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===qt)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Xt)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===ge?s.UNSIGNED_INT_24_8:void 0!==s[e]?s[e]:null}}let cf,df,hf,pf=!1;class mf{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,!1===pf&&(this._init(this.gl),pf=!0)}_init(e){cf={[Yt]:e.REPEAT,[Kt]:e.CLAMP_TO_EDGE,[Qt]:e.MIRRORED_REPEAT},df={[b]:e.NEAREST,[j]:e.NEAREST_MIPMAP_NEAREST,[Zt]:e.NEAREST_MIPMAP_LINEAR,[O]:e.LINEAR,[Jt]:e.LINEAR_MIPMAP_NEAREST,[M]:e.LINEAR_MIPMAP_LINEAR},hf={[es]:e.NEVER,[ts]:e.ALWAYS,[T]:e.LESS,[ss]:e.LEQUAL,[ns]:e.EQUAL,[rs]:e.GEQUAL,[is]:e.GREATER,[os]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===b||e===j||e===Zt?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let s;return s=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isDataArrayTexture?t.TEXTURE_2D_ARRAY:t.TEXTURE_2D,s}getInternalFormat(e,t,s,n,r=!1){const{gl:i,extensions:o}=this;if(null!==e&&void 0!==i[e])return i[e];let a=t;return t===i.RED&&(s===i.FLOAT&&(a=i.R32F),s===i.HALF_FLOAT&&(a=i.R16F),s===i.UNSIGNED_BYTE&&(a=i.R8)),t===i.RED_INTEGER&&(s===i.UNSIGNED_BYTE&&(a=i.R8UI),s===i.UNSIGNED_SHORT&&(a=i.R16UI),s===i.UNSIGNED_INT&&(a=i.R32UI),s===i.BYTE&&(a=i.R8I),s===i.SHORT&&(a=i.R16I),s===i.INT&&(a=i.R32I)),t===i.RG&&(s===i.FLOAT&&(a=i.RG32F),s===i.HALF_FLOAT&&(a=i.RG16F),s===i.UNSIGNED_BYTE&&(a=i.RG8)),t===i.RGBA&&(s===i.FLOAT&&(a=i.RGBA32F),s===i.HALF_FLOAT&&(a=i.RGBA16F),s===i.UNSIGNED_BYTE&&(a=n===h&&!1===r?i.SRGB8_ALPHA8:i.RGBA8),s===i.UNSIGNED_SHORT_4_4_4_4&&(a=i.RGBA4),s===i.UNSIGNED_SHORT_5_5_5_1&&(a=i.RGB5_A1)),t===i.DEPTH_COMPONENT&&(s===i.UNSIGNED_INT&&(a=i.DEPTH24_STENCIL8),s===i.FLOAT&&(a=i.DEPTH_COMPONENT32F)),t===i.DEPTH_STENCIL&&s===i.UNSIGNED_INT_24_8&&(a=i.DEPTH24_STENCIL8),a!==i.R16F&&a!==i.R32F&&a!==i.RG16F&&a!==i.RG32F&&a!==i.RGBA16F&&a!==i.RGBA32F||o.get("EXT_color_buffer_float"),a}setTextureParameters(e,t){const{gl:s,extensions:n}=this;if(s.texParameteri(e,s.TEXTURE_WRAP_S,cf[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,cf[t.wrapT]),e!==s.TEXTURE_3D&&e!==s.TEXTURE_2D_ARRAY||s.texParameteri(e,s.TEXTURE_WRAP_R,cf[t.wrapR]),s.texParameteri(e,s.TEXTURE_MAG_FILTER,df[t.magFilter]),s.texParameteri(e,s.TEXTURE_MIN_FILTER,df[t.minFilter]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,hf[t.compareFunction])),!0===n.has("EXT_texture_filter_anisotropic")){if(t.magFilter===b)return;if(t.minFilter!==Zt&&t.minFilter!==M)return;if(t.type===ut&&!1===n.has("OES_texture_float_linear"))return;t.anisotropy}}}class gf{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions()}get(e){return this.gl.getExtension(e)}has(e){return this.availableExtensions.includes(e)}}class ff extends sf{constructor(e={}){super(e),this.isWebGLBackend=!0}async init(e){await super.init(e);const t=this.parameters,s=void 0!==t.context?t.context:e.domElement.getContext("webgl2");this.gl=s,this.extensions=new gf(this),this.attributeUtils=new nf(this),this.textureUtils=new mf(this),this.state=new uf(this),this.utils=new lf(this),this.defaultTextures={},this.extensions.get("EXT_color_buffer_float"),this._currentContext=null}get coordinateSystem(){return as}beginRender(e){const{gl:t}=this,s=this.get(e);s.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e,e.clearColor,e.clearDepth,e.clearStencil),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight);const n=e.occlusionQueryCount;n>0&&(s.currentOcclusionQueries=s.occlusionQueries,s.currentOcclusionQueryObjects=s.occlusionQueryObjects,s.lastOcclusionObject=null,s.occlusionQueries=new Array(n),s.occlusionQueryObjects=new Array(n),s.occlusionQueryIndex=0)}finishRender(e){const t=this.get(e).previousContext;if(this._currentContext=t,null!==t)if(this._setFramebuffer(t),t.viewport)this.updateViewport(t);else{const e=this.gl;e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight)}const s=e.occlusionQueryCount;if(s>0){if(s>this.get(e).occlusionQueryIndex){const{gl:e}=this;e.endQuery(e.ANY_SAMPLES_PASSED)}this.resolveOccludedAsync(e)}}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:n}=t;if(s&&n){const e=new WeakSet,{gl:r}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const i=()=>{let o=0;for(let t=0;t<s.length;t++){const i=s[t];null!==i&&(r.getQueryParameter(i,r.QUERY_RESULT_AVAILABLE)&&(r.getQueryParameter(i,r.QUERY_RESULT)>0&&e.add(n[t]),s[t]=null,r.deleteQuery(i),o++))}o<s.length?requestAnimationFrame(i):t.occluded=e};i()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const t=this.gl,{x:s,y:n,width:r,height:i}=e.viewportValue;t.viewport(s,n,r,i)}clear(e,t,s,n){const{gl:r}=this;let i=0;if(t&&(i|=r.COLOR_BUFFER_BIT),s&&(i|=r.DEPTH_BUFFER_BIT),n&&(i|=r.STENCIL_BUFFER_BIT),0!==i){const o=e.clearColorValue;if(s&&this.state.setDepthMask(!0),null===e.textures)r.clearColor(o.r,o.g,o.b,o.a),r.clear(i);else{if(t)for(let t=0;t<e.textures.length;t++)r.clearBufferfv(r.COLOR,t,[o.r,o.g,o.b,o.a]);s&&n?r.clearBufferfi(r.DEPTH_STENCIL,0,1,0):s?r.clearBufferfv(r.DEPTH,0,[1]):n&&r.clearBufferiv(r.STENCIL,0,[0])}}}beginCompute(){}compute(){}finishCompute(){}draw(e,t){const{pipeline:s,material:n,context:r}=e,{programGPU:i,vaoGPU:o}=this.get(s),{gl:a,state:u}=this,l=this.get(r),c=e.getBindings();for(const e of c){const t=this.get(e),s=t.index;e.isUniformsGroup||e.isUniformBuffer?a.bindBufferBase(a.UNIFORM_BUFFER,s,t.bufferGPU):e.isSampledTexture&&(a.activeTexture(a.TEXTURE0+s),a.bindTexture(t.glTextureType,t.textureGPU))}u.setMaterial(n),a.useProgram(i),a.bindVertexArray(o);const d=e.getIndex(),h=e.object,p=e.geometry,m=p.drawRange,g=m.start,f=l.lastOcclusionObject;if(f!==h&&void 0!==f){if(null!==f&&!0===f.occlusionTest&&(a.endQuery(a.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),!0===h.occlusionTest){const e=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,e),l.occlusionQueries[l.occlusionQueryIndex]=e,l.occlusionQueryObjects[l.occlusionQueryIndex]=h}l.lastOcclusionObject=h}let x;x=h.isPoints?a.POINTS:h.isLineSegments?a.LINES:h.isLine?a.LINE_STRIP:h.isLineLoop?a.LINE_LOOP:a.TRIANGLES;const b=this.getInstanceCount(e);if(null!==d){const e=this.get(d),s=m.count!==1/0?m.count:d.count;b>1?a.drawElementsInstanced(x,d.count,e.type,g,b):a.drawElements(x,d.count,e.type,g),t.update(h,s,1)}else{const e=p.attributes.position,s=m.count!==1/0?m.count:e.count;b>1?a.drawArraysInstanced(x,0,s,b):a.drawArrays(x,0,s),t.update(h,s,1)}a.bindVertexArray(null)}needsUpdate(e){return!1}getCacheKey(e){return e.geometry.id}createSampler(){}destroySampler(){}createDefaultTexture(e){const{gl:t,textureUtils:s,defaultTextures:n}=this,r=s.getGLTextureType(e);let i=n[r];void 0===i&&(i=t.createTexture(),t.bindTexture(r,i),t.texParameteri(r,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(r,t.TEXTURE_MAG_FILTER,t.NEAREST),n[r]=i),this.set(e,{textureGPU:i,glTextureType:r,isDefault:!0})}createTexture(e,t){const{gl:s,utils:n,textureUtils:r}=this,{levels:i,width:o,height:a,depth:u}=t,l=n.convert(e.format,e.colorSpace),c=n.convert(e.type),d=r.getInternalFormat(e.internalFormat,l,c,e.colorSpace,e.isVideoTexture),h=s.createTexture(),p=r.getGLTextureType(e);s.bindTexture(p,h),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,e.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,e.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE),r.setTextureParameters(p,e),s.bindTexture(p,h),e.isDataArrayTexture?s.texStorage3D(s.TEXTURE_2D_ARRAY,i,d,o,a,u):e.isVideoTexture||s.texStorage2D(p,i,d,o,a),this.set(e,{textureGPU:h,glTextureType:p,glFormat:l,glType:c,glInternalFormat:d})}updateTexture(e,t){const{gl:s}=this,{width:n,height:r}=t,{textureGPU:i,glTextureType:o,glFormat:a,glType:u,glInternalFormat:l}=this.get(e),c=e=>e.isDataTexture?e.image.data:e instanceof ImageBitmap||e instanceof OffscreenCanvas||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement?e:e.data;if(s.bindTexture(o,i),e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const i=c(e[t]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,n,r,a,u,i)}}else if(e.isDataArrayTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,a,u,e.data)}else if(e.isVideoTexture)e.update(),s.texImage2D(o,0,l,a,u,t.image);else{const e=c(t.image);s.texSubImage2D(o,0,0,0,n,r,a,u,e)}}generateMipmaps(e){const{gl:t}=this,{textureGPU:s,glTextureType:n}=this.get(e);t.bindTexture(n,s),t.generateMipmap(n)}destroyTexture(){}copyTextureToBuffer(){}createNodeBuilder(e,t,s=null){return new Jg(e,t,s)}createProgram(e){const t=this.gl,{stage:s,code:n}=e,r="vertex"===s?t.createShader(t.VERTEX_SHADER):t.createShader(t.FRAGMENT_SHADER);t.shaderSource(r,n),t.compileShader(r),this.set(e,{shaderGPU:r})}destroyProgram(){}createRenderPipeline(e){const t=this.gl,s=e.pipeline,{fragmentProgram:n,vertexProgram:r}=s,i=t.createProgram(),o=this.get(n).shaderGPU,a=this.get(r).shaderGPU;t.attachShader(i,o),t.attachShader(i,a),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS),t.useProgram(i);const u=e.getBindings();for(const e of u){const s=this.get(e).index;if(e.isUniformsGroup||e.isUniformBuffer){const n=t.getUniformBlockIndex(i,e.name);t.uniformBlockBinding(i,n,s)}else if(e.isSampledTexture){const n=t.getUniformLocation(i,e.name);t.uniform1i(n,s)}}const l=t.createVertexArray(),c=e.getIndex(),d=e.getAttributes();if(t.bindVertexArray(l),null!==c){const e=this.get(c);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.bufferGPU)}for(let e=0;e<d.length;e++){const s=d[e],n=this.get(s);let r,i;t.bindBuffer(t.ARRAY_BUFFER,n.bufferGPU),t.enableVertexAttribArray(e),!0===s.isInterleavedBufferAttribute?(r=s.data.stride*n.bytesPerElement,i=s.offset*n.bytesPerElement):(r=0,i=0),n.isFloat?t.vertexAttribPointer(e,s.itemSize,n.type,!1,r,i):t.vertexAttribIPointer(e,s.itemSize,n.type,r,i),s.isInstancedBufferAttribute&&!s.isInterleavedBufferAttribute?t.vertexAttribDivisor(e,s.meshPerAttribute):s.isInterleavedBufferAttribute&&s.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(e,s.data.meshPerAttribute)}t.bindVertexArray(null),this.set(s,{programGPU:i,vaoGPU:l})}createComputePipeline(){}createBindings(e){this.updateBindings(e)}updateBindings(e){const{gl:t}=this;let s=0,n=0;for(const r of e)if(r.isUniformsGroup||r.isUniformBuffer){const e=t.createBuffer(),n=r.buffer;t.bindBuffer(t.UNIFORM_BUFFER,e),t.bufferData(t.UNIFORM_BUFFER,n,t.DYNAMIC_DRAW),t.bindBufferBase(t.UNIFORM_BUFFER,s,e),this.set(r,{index:s++,bufferGPU:e})}else if(r.isSampledTexture){const{textureGPU:e,glTextureType:t}=this.get(r.texture);this.set(r,{index:n++,textureGPU:e,glTextureType:t})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const s=this.get(e).bufferGPU,n=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,s),t.bufferData(t.UNIFORM_BUFFER,n,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(){}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(){}updateSize(){}hasFeature(e){return!0}copyFramebufferToTexture(e,t){const{gl:s}=this,{textureGPU:n}=this.get(e),r=e.image.width,i=e.image.height;if(s.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.isDepthTexture){const e=s.createFramebuffer();s.bindFramebuffer(s.DRAW_FRAMEBUFFER,e),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,n,0),s.blitFramebuffer(0,0,r,i,0,0,r,i,s.DEPTH_BUFFER_BIT,s.NEAREST),s.deleteFramebuffer(e)}else s.bindTexture(s.TEXTURE_2D,n),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,0,0,r,i),s.bindTexture(s.TEXTURE_2D,null);e.generateMipmaps&&this.generateMipmaps(e),this._setFramebuffer(t)}_setFramebuffer(e){const{gl:t}=this;if(null!==e.textures){const s=this.get(e);let n=s.framebuffer;if(void 0===n){n=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,n);const r=e.textures,i=[];for(let e=0;e<r.length;e++){const s=r[e],{textureGPU:n}=this.get(s),o=t.COLOR_ATTACHMENT0+e;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,n,0),i.push(o)}if(t.drawBuffers(i),null!==e.depthTexture){const{textureGPU:s}=this.get(e.depthTexture);t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,s,0)}s.framebuffer=n}else t.bindFramebuffer(t.FRAMEBUFFER,n)}else t.bindFramebuffer(t.FRAMEBUFFER,null)}}const xf="point-list",bf="line-list",Tf="line-strip",_f="triangle-list",yf="triangle-strip",Nf="never",vf="less",Sf="equal",Af="less-equal",Rf="greater",Cf="not-equal",Ef="greater-equal",wf="always",Mf="store",Of="load",Ff="clear",Bf="ccw",Uf="none",If="front",Lf="back",Df="uint16",Pf="uint32",Gf={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},kf="clamp-to-edge",Vf="repeat",zf="mirror-repeat",$f="linear",Hf="nearest",Wf={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},jf="add",qf="subtract",Xf="reverse-subtract",Yf="min",Kf="max",Qf=0,Zf=15,Jf="keep",ex="zero",tx="replace",sx="invert",nx="increment-clamp",rx="decrement-clamp",ix="increment-wrap",ox="decrement-wrap",ax="storage",ux="unfilterable-float",lx="depth",cx="2d",dx="3d",hx="2d",px="2d-array",mx="cube",gx="all",fx="vertex",xx="instance",bx={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable"};class Tx extends Dg{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class _x extends Tx{constructor(e,t){super(e,t?t.value:null),this.textureNode=t}}class yx extends Vg{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}class Nx{constructor(e){this.device=e;this.mipmapSampler=e.createSampler({minFilter:$f}),this.flipYSampler=e.createSampler({minFilter:Hf}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:yf,stripIndexFormat:Pf},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:yf,stripIndexFormat:Pf},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const n=t.format,{width:r,height:i}=t.size,o=this.getTransferPipeline(n),a=this.getFlipYPipeline(n),u=this.device.createTexture({size:{width:r,height:i,depthOrArrayLayers:1},format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:hx,baseArrayLayer:s}),c=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:hx,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),h=(e,t,s)=>{const n=e.getBindGroupLayout(0),r=this.device.createBindGroup({layout:n,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),i=d.beginRenderPass({colorAttachments:[{view:s,loadOp:Ff,storeOp:Mf,clearValue:[0,0,0,0]}]});i.setPipeline(e),i.setBindGroup(0,r),i.draw(4,1,0,0),i.end()};h(o,l,c),h(a,c,l),this.device.queue.submit([d.finish()]),u.destroy()}generateMipmaps(e,t,s=0){const n=this.getTransferPipeline(t.format),r=this.device.createCommandEncoder({}),i=n.getBindGroupLayout(0);let o=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:hx,baseArrayLayer:s});for(let a=1;a<t.mipLevelCount;a++){const t=this.device.createBindGroup({layout:i,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:o}]}),u=e.createView({baseMipLevel:a,mipLevelCount:1,dimension:hx,baseArrayLayer:s}),l=r.beginRenderPass({colorAttachments:[{view:u,loadOp:Ff,storeOp:Mf,clearValue:[0,0,0,0]}]});l.setPipeline(n),l.setBindGroup(0,t),l.draw(4,1,0,0),l.end(),o=u}this.device.queue.submit([r.finish()])}}const vx={[es]:"never",[T]:"less",[ns]:"equal",[ss]:"less-equal",[is]:"greater",[rs]:"greater-equal",[ts]:"always",[os]:"not-equal"},Sx=[0,1,3,2,4,5];class Ax{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture=null,this.defaultCubeTexture=null}createSampler(e){const t=this.backend,s=t.device,n=t.get(e),r={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:e.anisotropy};e.isDepthTexture&&null!==e.compareFunction&&(r.compare=vx[e.compareFunction]),n.sampler=s.createSampler(r)}createDefaultTexture(e){let t;t=e.isCubeTexture?this._getDefaultCubeTextureGPU():this._getDefaultTextureGPU(),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,n=s.get(e);if(n.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:r,height:i,depth:o,levels:a}=t,u=this._getDimension(e),l=e.internalFormat||Rx(e,this.device),c=void 0!==t.sampleCount?t.sampleCount:1,d=e.isRenderTargetTexture?1:c;let h=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(h|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&(h|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:r,height:i,depthOrArrayLayers:o},mipLevelCount:a,sampleCount:d,dimension:u,format:l,usage:h};if(e.isVideoTexture){const t=e.source.data,s=new VideoFrame(t);p.size.width=s.displayWidth,p.size.height=s.displayHeight,s.close(),n.externalTexture=t}else{if(void 0===l)return this.createDefaultTexture(e);n.texture=s.device.createTexture(p)}if(e.isRenderTargetTexture&&c>1){const e=Object.assign({},p);e.label=e.label+"-msaa",e.sampleCount=c,n.msaaTexture=s.device.createTexture(e)}n.initialized=!0,n.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture.destroy(),void 0!==s.msaaTexture&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let e=0;e<6;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e);else this._generateMipmaps(t.texture,t.textureDescriptorGPU)}updateTexture(e,t){const s=this.backend.get(e),{textureDescriptorGPU:n}=s;if(!e.isRenderTargetTexture&&void 0!==n){if(e.isDataTexture||e.isData3DTexture)this._copyBufferToTexture(t.image,s.texture,n,0,!1);else if(e.isDataArrayTexture)for(let e=0;e<t.image.depth;e++)this._copyBufferToTexture(t.image,s.texture,n,e,!1,e);else if(e.isCompressedTexture)this._copyCompressedBufferToTexture(e.mipmaps,s.texture,n);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,s.texture,n,e.flipY);else if(e.isVideoTexture){const t=e.source.data;s.externalTexture=t}else this._copyImageToTexture(t.image,s.texture,n,0,e.flipY);s.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,s,n,r){const i=this.backend.device,o=this.backend.get(e),a=o.texture,u=o.textureDescriptorGPU.format,l=this._getBytesPerTexel(u),c=i.createBuffer({size:n*r*l,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),d=i.createCommandEncoder();d.copyTextureToBuffer({texture:a,origin:{x:t,y:s}},{buffer:c,bytesPerRow:n*l},{width:n,height:r});const h=this._getTypedArrayType(u);i.queue.submit([d.finish()]),await c.mapAsync(GPUMapMode.READ);return new h(c.getMappedRange())}_isEnvironmentTexture(e){const t=e.mapping;return t===fe||t===xe||t===be||t===Te}_getDefaultTextureGPU(){let e=this.defaultTexture;if(null===e){const t=new us;t.minFilter=b,t.magFilter=b,this.createTexture(t,{width:1,height:1}),this.defaultTexture=e=t}return this.backend.get(e).texture}_getDefaultCubeTextureGPU(){let e=this.defaultTexture;if(null===e){const t=new ls;t.minFilter=b,t.magFilter=b,this.createTexture(t,{width:1,height:1,depth:6}),this.defaultCubeTexture=e=t}return this.backend.get(e).texture}_copyCubeMapToTexture(e,t,s,n){for(let r=0;r<6;r++){const i=e[r],o=!0===n?Sx[r]:r;i.isDataTexture?this._copyBufferToTexture(i.image,t,s,o,n):this._copyImageToTexture(i,t,s,o,n)}}_copyImageToTexture(e,t,s,n,r){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===r&&this._flipY(t,s,n)}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new Nx(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,n,r,i=0){const o=this.backend.device,a=e.data,u=this._getBytesPerTexel(s.format),l=e.width*u;o.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},a,{offset:e.width*e.height*u*i,bytesPerRow:l},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===r&&this._flipY(t,s,n)}_copyCompressedBufferToTexture(e,t,s){const n=this.backend.device,r=this._getBlockData(s.format);for(let s=0;s<e.length;s++){const i=e[s],o=i.width,a=i.height,u=Math.ceil(o/r.width)*r.byteLength;n.queue.writeTexture({texture:t,mipLevel:s},i.data,{offset:0,bytesPerRow:u},{width:Math.ceil(o/r.width)*r.width,height:Math.ceil(a/r.width)*r.width,depthOrArrayLayers:1})}}_getBlockData(e){return e===Gf.BC1RGBAUnorm||e===Gf.BC1RGBAUnormSRGB?{byteLength:8,width:4,height:4}:e===Gf.BC2RGBAUnorm||e===Gf.BC2RGBAUnormSRGB||e===Gf.BC3RGBAUnorm||e===Gf.BC3RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===Gf.BC4RUnorm||e===Gf.BC4RSNorm?{byteLength:8,width:4,height:4}:e===Gf.BC5RGUnorm||e===Gf.BC5RGSnorm||e===Gf.BC6HRGBUFloat||e===Gf.BC6HRGBFloat||e===Gf.BC7RGBAUnorm||e===Gf.BC7RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===Gf.ETC2RGB8Unorm||e===Gf.ETC2RGB8UnormSRGB||e===Gf.ETC2RGB8A1Unorm||e===Gf.ETC2RGB8A1UnormSRGB?{byteLength:8,width:4,height:4}:e===Gf.ETC2RGBA8Unorm||e===Gf.ETC2RGBA8UnormSRGB?{byteLength:16,width:4,height:4}:e===Gf.EACR11Unorm||e===Gf.EACR11Snorm?{byteLength:8,width:4,height:4}:e===Gf.EACRG11Unorm||e===Gf.EACRG11Snorm||e===Gf.ASTC4x4Unorm||e===Gf.ASTC4x4UnormSRGB?{byteLength:16,width:4,height:4}:e===Gf.ASTC5x4Unorm||e===Gf.ASTC5x4UnormSRGB?{byteLength:16,width:5,height:4}:e===Gf.ASTC5x5Unorm||e===Gf.ASTC5x5UnormSRGB?{byteLength:16,width:5,height:5}:e===Gf.ASTC6x5Unorm||e===Gf.ASTC6x5UnormSRGB?{byteLength:16,width:6,height:5}:e===Gf.ASTC6x6Unorm||e===Gf.ASTC6x6UnormSRGB?{byteLength:16,width:6,height:6}:e===Gf.ASTC8x5Unorm||e===Gf.ASTC8x5UnormSRGB?{byteLength:16,width:8,height:5}:e===Gf.ASTC8x6Unorm||e===Gf.ASTC8x6UnormSRGB?{byteLength:16,width:8,height:6}:e===Gf.ASTC8x8Unorm||e===Gf.ASTC8x8UnormSRGB?{byteLength:16,width:8,height:8}:e===Gf.ASTC10x5Unorm||e===Gf.ASTC10x5UnormSRGB?{byteLength:16,width:10,height:5}:e===Gf.ASTC10x6Unorm||e===Gf.ASTC10x6UnormSRGB?{byteLength:16,width:10,height:6}:e===Gf.ASTC10x8Unorm||e===Gf.ASTC10x8UnormSRGB?{byteLength:16,width:10,height:8}:e===Gf.ASTC10x10Unorm||e===Gf.ASTC10x10UnormSRGB?{byteLength:16,width:10,height:10}:e===Gf.ASTC12x10Unorm||e===Gf.ASTC12x10UnormSRGB?{byteLength:16,width:12,height:10}:e===Gf.ASTC12x12Unorm||e===Gf.ASTC12x12UnormSRGB?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=kf;return e===Yt?t=Vf:e===Qt&&(t=zf),t}_convertFilterMode(e){let t=$f;return e!==b&&e!==j&&e!==Zt||(t=Hf),t}_getBytesPerTexel(e){return e===Gf.R8Unorm?1:e===Gf.R16Float||e===Gf.RG8Unorm?2:e===Gf.RG16Float||e===Gf.R32Float||e===Gf.RGBA8Unorm||e===Gf.RGBA8UnormSRGB?4:e===Gf.RG32Float||e===Gf.RGBA16Float?8:e===Gf.RGBA32Float?16:void 0}_getTypedArrayType(e){return e===Gf.R8Uint?Uint8Array:e===Gf.R8Sint?Int8Array:e===Gf.R8Unorm?Uint8Array:e===Gf.R8Snorm?Int8Array:e===Gf.RG8Uint?Uint8Array:e===Gf.RG8Sint?Int8Array:e===Gf.RG8Unorm?Uint8Array:e===Gf.RG8Snorm?Int8Array:e===Gf.RGBA8Uint?Uint8Array:e===Gf.RGBA8Sint?Int8Array:e===Gf.RGBA8Unorm?Uint8Array:e===Gf.RGBA8Snorm?Int8Array:e===Gf.R16Uint?Uint16Array:e===Gf.R16Sint?Int16Array:e===Gf.RG16Uint?Uint16Array:e===Gf.RG16Sint?Int16Array:e===Gf.RGBA16Uint?Uint16Array:e===Gf.RGBA16Sint?Int16Array:e===Gf.R32Uint?Uint32Array:e===Gf.R32Sint?Int32Array:e===Gf.R32Float?Float32Array:e===Gf.RG32Uint?Uint32Array:e===Gf.RG32Sint?Int32Array:e===Gf.RG32Float?Float32Array:e===Gf.RGBA32Uint?Uint32Array:e===Gf.RGBA32Sint?Int32Array:e===Gf.RGBA32Float?Float32Array:void 0}_getDimension(e){let t;return t=e.isData3DTexture?dx:cx,t}}function Rx(e,t=null){const s=e.format,n=e.type,r=e.colorSpace;let i;if(!0===e.isFramebufferTexture)i=Gf.BGRA8Unorm;else if(!0===e.isCompressedTexture)switch(s){case _t:i=r===h?Gf.BC1RGBAUnormSRGB:Gf.BC1RGBAUnorm;break;case yt:i=r===h?Gf.BC2RGBAUnormSRGB:Gf.BC2RGBAUnorm;break;case Nt:i=r===h?Gf.BC3RGBAUnormSRGB:Gf.BC3RGBAUnorm;break;case Et:i=r===h?Gf.ETC2RGB8UnormSRGB:Gf.ETC2RGB8Unorm;break;case wt:i=r===h?Gf.ETC2RGBA8UnormSRGB:Gf.ETC2RGBA8Unorm;break;case Mt:i=r===h?Gf.ASTC4x4UnormSRGB:Gf.ASTC4x4Unorm;break;case Ot:i=r===h?Gf.ASTC5x4UnormSRGB:Gf.ASTC5x4Unorm;break;case Ft:i=r===h?Gf.ASTC5x5UnormSRGB:Gf.ASTC5x5Unorm;break;case Bt:i=r===h?Gf.ASTC6x5UnormSRGB:Gf.ASTC6x5Unorm;break;case Ut:i=r===h?Gf.ASTC6x6UnormSRGB:Gf.ASTC6x6Unorm;break;case It:i=r===h?Gf.ASTC8x5UnormSRGB:Gf.ASTC8x5Unorm;break;case Lt:i=r===h?Gf.ASTC8x6UnormSRGB:Gf.ASTC8x6Unorm;break;case Dt:i=r===h?Gf.ASTC8x8UnormSRGB:Gf.ASTC8x8Unorm;break;case Pt:i=r===h?Gf.ASTC10x5UnormSRGB:Gf.ASTC10x5Unorm;break;case Gt:i=r===h?Gf.ASTC10x6UnormSRGB:Gf.ASTC10x6Unorm;break;case kt:i=r===h?Gf.ASTC10x8UnormSRGB:Gf.ASTC10x8Unorm;break;case Vt:i=r===h?Gf.ASTC10x10UnormSRGB:Gf.ASTC10x10Unorm;break;case zt:i=r===h?Gf.ASTC12x10UnormSRGB:Gf.ASTC12x10Unorm;break;case $t:i=r===h?Gf.ASTC12x12UnormSRGB:Gf.ASTC12x12Unorm}else switch(s){case dt:switch(n){case tt:i=r===h?Gf.RGBA8UnormSRGB:Gf.RGBA8Unorm;break;case lt:i=Gf.RGBA16Float;break;case ut:i=Gf.RGBA32Float}break;case mt:switch(n){case tt:i=Gf.R8Unorm;break;case lt:i=Gf.R16Float;break;case ut:i=Gf.R32Float}break;case ft:switch(n){case tt:i=Gf.RG8Unorm;break;case lt:i=Gf.RG16Float;break;case ut:i=Gf.RG32Float}break;case X:switch(n){case ot:i=Gf.Depth16Unorm;break;case q:i=Gf.Depth24Plus;break;case ut:i=Gf.Depth32Float}break;case me:switch(n){case ge:i=Gf.Depth24PlusStencil8;break;case ut:t&&t.features.has(bx.Depth32FloatStencil8),i=Gf.Depth32FloatStencil8}}return i}const Cx=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+)?/i,Ex=/[a-z_0-9]+|<(.*?)>+/gi,wx={f32:"float"};class Mx extends Cm{constructor(e){const{type:t,inputs:s,name:n,inputsCode:r,blockCode:i}=(e=>{const t=(e=e.trim()).match(Cx);if(null!==t&&4===t.length){const s=t[2],n=[];let r=null;for(;null!==(r=Ex.exec(s));)n.push(r);const i=[];let o=0;for(;o<n.length;){const e=n[o++][0];let t=n[o++][0];t=wx[t]||t,o<n.length&&!0===n[o][0].startsWith("<")&&o++,i.push(new gc(t,e))}const a=e.substring(t[0].length),u=void 0!==t[1]?t[1]:"";return{type:t[3]||"void",inputs:i,name:u,inputsCode:s,blockCode:a}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,s,n),this.inputsCode=r,this.blockCode=i}getCode(e=this.name){const t="void"!==this.type?"-> "+this.type:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class Ox extends Rm{parseFunction(e){return new Mx(e)}}const Fx={vertex:GPUShaderStage.VERTEX,fragment:GPUShaderStage.FRAGMENT,compute:GPUShaderStage.COMPUTE},Bx={instance:!0},Ux={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat3:"mat3x3<f32>",imat3:"mat3x3<i32>",umat3:"mat3x3<u32>",bmat3:"mat3x3<bool>",mat4:"mat4x4<f32>",imat4:"mat4x4<i32>",umat4:"mat4x4<u32>",bmat4:"mat4x4<bool>"},Ix={dFdx:"dpdx",dFdy:"- dpdy",mod:"threejs_mod",lessThanEqual:"threejs_lessThanEqual",inversesqrt:"inverseSqrt"},Lx={lessThanEqual:new kh("\nfn threejs_lessThanEqual( a : vec3<f32>, b : vec3<f32> ) -> vec3<bool> {\n\n\treturn vec3<bool>( a.x <= b.x, a.y <= b.y, a.z <= b.z );\n\n}\n"),mod:new kh("\nfn threejs_mod( x : f32, y : f32 ) -> f32 {\n\n\treturn x - y * floor( x / y );\n\n}\n"),repeatWrapping:new kh("\nfn threejs_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {\n\n\tlet uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );\n\n\treturn ( ( uvScaled % dimension ) + dimension ) % dimension;\n\n}\n")};class Dx extends pc{constructor(e,t,s=null){super(e,t,new Ox,s),this.uniformGroups={},this.builtins={vertex:new Map,fragment:new Map,compute:new Map,attribute:new Map}}build(){const{object:e,material:t}=this;return null!==t?Gl.fromMaterial(t).build(this):this.addFlow("compute",e),super.build()}needsColorSpaceToLinear(e){return!0===e.isVideoTexture&&e.colorSpace!==N}_generateTextureSample(e,t,s,n,r=this.shaderStage){return"fragment"===r?n?`textureSample( ${t}, ${t}_sampler, ${s}, ${n} )`:`textureSample( ${t}, ${t}_sampler, ${s} )`:this.generateTextureLod(e,t,s)}_generateVideoSample(e,t,s=this.shaderStage){if("fragment"===s)return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`}_generateTextureSampleLevel(e,t,s,n,r,i=this.shaderStage){return"fragment"===i&&!1===this.isUnfilterable(e)?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${n} )`:this.generateTextureLod(e,t,s,n)}generateTextureLod(e,t,s,n="0"){this._include("repeatWrapping");return`textureLoad( ${t}, threejs_repeatWrapping( ${s}, ${`textureDimensions( ${t}, 0 )`} ), i32( ${n} ) )`}isUnfilterable(e){return!0===e.isDataTexture&&e.type===ut}generateTexture(e,t,s,n,r=this.shaderStage){let i=null;return i=!0===e.isVideoTexture?this._generateVideoSample(t,s,r):this.isUnfilterable(e)?this.generateTextureLod(e,t,s,"0",n,r):this._generateTextureSample(e,t,s,n,r),i}generateTextureCompare(e,t,s,n,r,i=this.shaderStage){if("fragment"===i)return`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${n} )`}generateTextureLevel(e,t,s,n,r,i=this.shaderStage){let o=null;return o=!0===e.isVideoTexture?this._generateVideoSample(t,s,i):this._generateTextureSampleLevel(e,t,s,n,r,i),o}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`NodeVaryings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,s=e.type;return"texture"===s||"cubeTexture"===s?t:"buffer"===s||"storageBuffer"===s?`NodeBuffer_${e.id}.${t}`:e.groupNode.name+"."+t}return super.getPropertyName(e)}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getUniformFromNode(e,t,s,n=null){const r=super.getUniformFromNode(e,t,s,n),i=this.getDataFromNode(e,s);if(void 0===i.uniformGPU){let n;const o=this.bindings[s];if("texture"===t||"cubeTexture"===t){let i=null;if("texture"===t?i=new Xg(r.name,r.node):"cubeTexture"===t&&(i=new Yg(r.name,r.node)),i.store=!0===e.isStoreTextureNode,i.setVisibility(Fx[s]),"fragment"===s&&!1===this.isUnfilterable(e.value)&&!1===i.store){const e=new _x(`${r.name}_sampler`,r.node);e.setVisibility(Fx[s]),o.push(e,i),n=[e,i]}else o.push(i),n=[i]}else if("buffer"===t||"storageBuffer"===t){const r=new("storageBuffer"===t?yx:zg)("NodeBuffer_"+e.id,e.value);r.setVisibility(Fx[s]),o.push(r),n=r}else{const i=e.groupNode,a=i.name,u=this.uniformGroups[s]||(this.uniformGroups[s]={});let l=u[a];if(void 0===l&&(l=new Wg(a,i),l.setVisibility(Fx[s]),u[a]=l,o.push(l)),!0===e.isArrayUniformNode){n=[];for(const s of e.nodes){const e=this.getNodeUniform(s,t);e.boundary=Gg(e.itemSize),e.itemSize=kg(e.itemSize),l.addUniform(e),n.push(e)}}else n=this.getNodeUniform(r,t),l.addUniform(n)}i.uniformGPU=n,"vertex"===s&&(this.bindingsOffset.fragment=o.length)}return r}isReference(e){return super.isReference(e)||"texture_2d"===e||"texture_cube"===e||"texture_storage_2d"===e}getBuiltin(e,t,s,n=this.shaderStage){const r=this.builtins[n];return!1===r.has(e)&&r.set(e,{name:e,property:t,type:s}),t}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionNode(e){const t=e.layout,s=this.flowShaderNode(e),n=[];for(const e of t.inputs)n.push(e.name+" : "+this.getType(e.type));const r=`fn ${t.name}( ${n.join(", ")} ) -> ${this.getType(t.type)} {\n${s.vars}\n${s.code}\n\treturn ${s.result};\n\n}`;return new qh(r)}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>","fragment")+".xy"}isFlipY(){return!1}getAttributes(e){const t=[];if("compute"===e&&this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),"vertex"===e||"compute"===e){for(const{name:e,property:s,type:n}of this.builtins.attribute.values())t.push(`@builtin( ${e} ) ${s} : ${n}`);const e=this.getAttributesArray();for(let s=0,n=e.length;s<n;s++){const n=e[s],r=n.name,i=this.getType(n.type);t.push(`@location( ${s} ) ${r} : ${i}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const n=s[e];t.push(`\t@location( ${e} ) m${e} : ${n}<f32>`)}return t.join(",\n")}getStructs(e){const t=[],s=this.structs[e];for(let e=0,n=s.length;e<n;e++){const n=s[e];let r=`struct ${n.name} {\n`;r+=this.getStructMembers(n),r+="\n}",t.push(r)}return t.join("\n\n")}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`\t${this.getVar(e.type,e.name)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const s=this.varyings,n=this.vars[e];for(let r=0;r<s.length;r++){const i=s[r];if(i.needsInterpolation){let e=`@location( ${r} )`;/^(int|uint|ivec|uvec)/.test(i.type)&&(e+=" @interpolate( flat )"),t.push(`${e} ${i.name} : ${this.getType(i.type)}`)}else"vertex"===e&&!1===n.includes(i)&&n.push(i)}}for(const{name:s,property:n,type:r}of this.builtins[e].values())t.push(`@builtin( ${s} ) ${n} : ${r}`);const s=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("NodeVaryingsStruct","\t"+s):s}getUniforms(e){const t=this.uniforms[e],s=[],n=[],r=[],i={};let o=this.bindingsOffset[e];for(const r of t)if("texture"===r.type||"cubeTexture"===r.type){const t=r.node.value;let n;if("fragment"===e&&!1===this.isUnfilterable(t)&&!0!==r.node.isStoreTextureNode&&(!0===t.isDepthTexture&&null!==t.compareFunction?s.push(`@binding( ${o++} ) @group( 0 ) var ${r.name}_sampler : sampler_comparison;`):s.push(`@binding( ${o++} ) @group( 0 ) var ${r.name}_sampler : sampler;`)),!0===t.isCubeTexture)n="texture_cube<f32>";else if(!0===t.isDataArrayTexture)n="texture_2d_array<f32>";else if(!0===t.isDepthTexture)n="texture_depth_2d";else if(!0===t.isVideoTexture)n="texture_external";else if(!0===r.node.isStoreTextureNode){n="texture_storage_2d<"+Rx(t)+", write>"}else n="texture_2d<f32>";s.push(`@binding( ${o++} ) @group( 0 ) var ${r.name} : ${n};`)}else if("buffer"===r.type||"storageBuffer"===r.type){const e=r.node,t=this.getType(e.bufferType),s=e.bufferCount,i=s>0?", "+s:"",a=`\t${r.name} : array< ${t}${i} >\n`,u=e.isStorageBufferNode?"storage,read_write":"uniform";n.push(this._getWGSLStructBinding("NodeBuffer_"+e.id,a,u,o++))}else{const e=this.getType(this.getVectorType(r.type)),t=r.groupNode.name,s=i[t]||(i[t]={index:o++,snippets:[]});if(!0===Array.isArray(r.value)){const t=r.value.length;s.snippets.push(`uniform ${e}[ ${t} ] ${r.name}`)}else s.snippets.push(`\t${r.name} : ${e}`)}for(const e in i){const t=i[e];r.push(this._getWGSLStructBinding(e,t.snippets.join(",\n"),"uniform",t.index))}let a=s.join("\n");return a+=n.join("\n"),a+=r.join("\n"),a}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};for(const t in e){let s="// code\n\n";s+=this.flowCode[t];const n=this.flowNodes[t],r=n[n.length-1];for(const e of n){const n=this.getFlowData(e),i=e.name;i&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${i}\n\t`),s+=`${n.code}\n\t`,e===r&&"compute"!==t&&(s+="// result\n\t","vertex"===t?s+="NodeVaryings.Vertex = ":"fragment"===t&&(s+="return "),s+=`${n.result};`)}const i=r.outputNode,o=e[t];o.uniforms=this.getUniforms(t),o.attributes=this.getAttributes(t),o.varyings=this.getVaryings(t),o.structs=this.getStructs(t),o.vars=this.getVars(t),o.codes=this.getCodes(t),o.returnType=void 0!==i&&!0===i.isOutputStructNode?i.nodeType:"@location( 0 ) vec4<f32>",o.flow=s}null!==this.material?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e){return void 0!==Lx[e]&&this._include(e),Ix[e]||e}getType(e){return Ux[e]||e}isAvailable(e){return!0===Bx[e]}_include(e){Lx[e].build(this)}_getWGSLVertexCode(e){return`${this.getSignature()}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> NodeVaryingsStruct {\n\n\t// system\n\tvar NodeVaryings: NodeVaryingsStruct;\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn NodeVaryings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n\n// uniforms\n${e.uniforms}\n\n// structs\n${e.structs}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){return`${this.getSignature()}\n// system\nvar<private> instanceIndex : u32;\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${t} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = id.x;\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,s,n=0,r=0){const i=e+"Struct";return`${this._getWGSLStruct(i,t)}\n@binding( ${n} ) @group( ${r} )\nvar<${s}> ${e} : ${i};`}}class Px{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=Gf.Depth24PlusStencil8:e.depth&&(t=Gf.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).texture.format}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):Gf.BGRA8Unorm,t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?xf:e.isLineSegments||e.isMesh&&!0===t.wireframe?bf:e.isLine?Tf:e.isMesh?_f:void 0}getSampleCount(e){return null!==e.textures?e.sampleCount:this.backend.parameters.sampleCount}}const Gx=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),kx=new Map([[L,["float16"]]]),Vx=new Map([[Int32Array,"sint32"],[Uint32Array,"uint32"],[Float32Array,"float32"]]);class zx{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),n=this.backend,r=n.get(s);let i=r.buffer;if(void 0===i){const e=n.device,o=s.array,a=o.byteLength+(4-o.byteLength%4)%4;i=e.createBuffer({label:s.name,size:a,usage:t,mappedAtCreation:!0}),new o.constructor(i.getMappedRange()).set(o),i.unmap(),r.buffer=i}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,n=s.device,r=s.get(t).buffer,i=t.array,o=t.updateRanges;if(0===o.length)n.queue.writeBuffer(r,0,i,0);else{for(let e=0,t=o.length;e<t;e++){const t=o[e];n.queue.writeBuffer(r,0,i,t.start*i.BYTES_PER_ELEMENT,t.count*i.BYTES_PER_ELEMENT)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let e=0;e<t.length;e++){const n=t[e],r=n.array.BYTES_PER_ELEMENT,i=this._getBufferAttribute(n);let o=s.get(i);if(void 0===o){let e,t;!0===n.isInterleavedBufferAttribute?(e=n.data.stride*r,t=n.data.isInstancedInterleavedBuffer?xx:fx):(e=n.itemSize*r,t=n.isInstancedBufferAttribute?xx:fx),o={arrayStride:e,attributes:[],stepMode:t},s.set(i,o)}const a=this._getVertexFormat(n),u=!0===n.isInterleavedBufferAttribute?n.offset*r:0;o.attributes.push({shaderLocation:e,offset:u,format:a})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,n=t.get(this._getBufferAttribute(e)),r=n.buffer,i=r.size;let o=n.readBuffer,a=!0;void 0===o&&(o=s.createBuffer({label:e.name,size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=!1,n.readBuffer=o);const u=s.createCommandEncoder({});u.copyBufferToBuffer(r,0,o,0,i),a&&o.unmap();const l=u.finish();s.queue.submit([l]),await o.mapAsync(GPUMapMode.READ);return o.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,n=e.array.constructor,r=e.constructor;let i;if(1==t)i=Vx.get(n);else{const e=(kx.get(r)||Gx.get(n))[s?1:0];if(e){const s=n.BYTES_PER_ELEMENT*t,r=4*Math.floor((s+3)/4)/n.BYTES_PER_ELEMENT;if(r%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");i=`${e}x${r}`}}return i}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class $x{constructor(e){this.backend=e}createBindingsLayout(e){const t=this.backend.device,s=[];let n=0;for(const t of e){const e={binding:n++,visibility:t.visibility};if(t.isUniformBuffer||t.isStorageBuffer){const s={};t.isStorageBuffer&&(s.type=ax),e.buffer=s}else if(t.isSampler){const s={};t.texture.isDepthTexture&&null!==t.texture.compareFunction&&(s.type="comparison"),e.sampler=s}else if(t.isSampledTexture&&t.texture.isVideoTexture)e.externalTexture={};else if(t.isSampledTexture&&t.store){const s=this.backend.get(t.texture).texture.format;e.storageTexture={format:s}}else if(t.isSampledTexture){const s={};t.texture.isDepthTexture?s.sampleType=lx:t.texture.isDataTexture&&t.texture.type===ut&&(s.sampleType=ux),t.isSampledCubeTexture?s.viewDimension=mx:t.texture.isDataArrayTexture&&(s.viewDimension=px),e.texture=s}s.push(e)}return t.createBindGroupLayout({entries:s})}createBindings(e){const t=this.backend.get(e),s=this.createBindingsLayout(e),n=this.createBindGroup(e,s);t.layout=s,t.group=n,t.bindings=e}updateBinding(e){const t=this.backend,s=t.device,n=e.buffer,r=t.get(e).buffer;s.queue.writeBuffer(r,0,n,0)}createBindGroup(e,t){const s=this.backend,n=s.device;let r=0;const i=[];for(const t of e){if(t.isUniformBuffer){const e=s.get(t);if(void 0===e.buffer){const s=t.byteLength,r=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,i=n.createBuffer({label:"bindingBuffer_"+t.name,size:s,usage:r});e.buffer=i}i.push({binding:r,resource:{buffer:e.buffer}})}else if(t.isStorageBuffer){const e=s.get(t);if(void 0===e.buffer){const n=t.attribute;e.buffer=s.get(n).buffer}i.push({binding:r,resource:{buffer:e.buffer}})}else if(t.isSampler){const e=s.get(t.texture);i.push({binding:r,resource:e.sampler})}else if(t.isSampledTexture){const e=s.get(t.texture);let o,a;if(o=t.isSampledCubeTexture?mx:t.texture.isDataArrayTexture?px:hx,void 0!==e.externalTexture)a=n.importExternalTexture({source:e.externalTexture});else{const t=gx;a=e.texture.createView({aspect:t,dimension:o})}i.push({binding:r,resource:a})}r++}return n.createBindGroup({layout:t,entries:i})}}class Hx{constructor(e){this.backend=e}createRenderPipeline(e){const{object:t,material:s,geometry:n,pipeline:r}=e,{vertexProgram:i,fragmentProgram:o}=r,a=this.backend,u=a.device,l=a.utils,c=a.get(r),d=a.get(e.getBindings()),h=a.attributeUtils.createShaderVertexBuffers(e);let p;!0===s.transparent&&s.blending!==C&&(p=this._getBlending(s));let m={};!0===s.stencilWrite&&(m={compare:this._getStencilCompare(s),failOp:this._getStencilOperation(s.stencilFail),depthFailOp:this._getStencilOperation(s.stencilZFail),passOp:this._getStencilOperation(s.stencilZPass)});const g=this._getColorWriteMask(s),f=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const s=l.getTextureFormatGPU(t[e]);f.push({format:s,blend:p,writeMask:g})}}else{const t=l.getCurrentColorFormat(e.context);f.push({format:t,blend:p,writeMask:g})}const x=a.get(i).module,b=a.get(o).module,T=this._getPrimitiveState(t,n,s),_=this._getDepthCompare(s),y=l.getCurrentDepthStencilFormat(e.context),N=l.getSampleCount(e.context);c.pipeline=u.createRenderPipeline({vertex:Object.assign({},x,{buffers:h}),fragment:Object.assign({},b,{targets:f}),primitive:T,depthStencil:{format:y,depthWriteEnabled:s.depthWrite,depthCompare:_,stencilFront:m,stencilBack:{},stencilReadMask:s.stencilFuncMask,stencilWriteMask:s.stencilWriteMask},multisample:{count:N,alphaToCoverageEnabled:s.alphaToCoverage},layout:u.createPipelineLayout({bindGroupLayouts:[d.layout]})})}createComputePipeline(e,t){const s=this.backend,n=s.device,r=s.get(e.computeProgram).module,i=s.get(e),o=s.get(t);i.pipeline=n.createComputePipeline({compute:r,layout:n.createPipelineLayout({bindGroupLayouts:[o.layout]})})}_getBlending(e){let t,s;const n=e.blending;if(n===ze){const n=null!==e.blendSrcAlpha?e.blendSrcAlpha:Wf.One,r=null!==e.blendDstAlpha?e.blendDstAlpha:Wf.Zero,i=null!==e.blendEquationAlpha?e.blendEquationAlpha:Wf.Add;t={srcFactor:this._getBlendFactor(e.blendSrc),dstFactor:this._getBlendFactor(e.blendDst),operation:this._getBlendOperation(e.blendEquation)},s={srcFactor:this._getBlendFactor(n),dstFactor:this._getBlendFactor(r),operation:this._getBlendOperation(i)}}else{const r=(e,n,r,i)=>{t={srcFactor:e,dstFactor:n,operation:jf},s={srcFactor:r,dstFactor:i,operation:jf}};if(e.premultipliedAlpha)switch(n){case je:r(Wf.SrcAlpha,Wf.OneMinusSrcAlpha,Wf.One,Wf.OneMinusSrcAlpha);break;case We:r(Wf.SrcAlpha,Wf.One,Wf.One,Wf.One);break;case He:r(Wf.Zero,Wf.OneMinusSrc,Wf.Zero,Wf.One);break;case $e:r(Wf.Zero,Wf.Src,Wf.Zero,Wf.SrcAlpha)}else switch(n){case je:r(Wf.SrcAlpha,Wf.OneMinusSrcAlpha,Wf.One,Wf.OneMinusSrcAlpha);break;case We:r(Wf.SrcAlpha,Wf.One,Wf.SrcAlpha,Wf.One);break;case He:r(Wf.Zero,Wf.OneMinusSrc,Wf.Zero,Wf.One);break;case $e:r(Wf.Zero,Wf.Src,Wf.Zero,Wf.Src)}}if(void 0!==t&&void 0!==s)return{color:t,alpha:s}}_getBlendFactor(e){let t;switch(e){case Ee:t=Wf.Zero;break;case we:t=Wf.One;break;case Me:t=Wf.Src;break;case Ie:t=Wf.OneMinusSrc;break;case Oe:t=Wf.SrcAlpha;break;case Le:t=Wf.OneMinusSrcAlpha;break;case Be:t=Wf.Dst;break;case De:t=Wf.OneMinusDstColor;break;case Ue:t=Wf.DstAlpha;break;case Pe:t=Wf.OneMinusDstAlpha;break;case Fe:t=Wf.SrcAlphaSaturated;break;case 211:t=Wf.Constant;break;case 212:t=Wf.OneMinusConstant}return t}_getStencilCompare(e){let t;switch(e.stencilFunc){case xs:t=Nf;break;case fs:t=wf;break;case gs:t=vf;break;case ms:t=Af;break;case ps:t=Sf;break;case hs:t=Ef;break;case ds:t=Rf;break;case cs:t=Cf}return t}_getStencilOperation(e){let t;switch(e){case As:t=Jf;break;case Ss:t=ex;break;case vs:t=tx;break;case Ns:t=sx;break;case ys:t=nx;break;case _s:t=rx;break;case Ts:t=ix;break;case bs:t=ox}return t}_getBlendOperation(e){let t;switch(e){case Ae:t=jf;break;case Re:t=qf;break;case Ce:t=Xf;break;case Cs:t=Yf;break;case Rs:t=Kf}return t}_getPrimitiveState(e,t,s){const n={},r=this.backend.utils;if(n.topology=r.getPrimitiveTopology(e,s),!0===e.isLine&&!0!==e.isLineSegments){const e=t.index?t.index.count:t.attributes.position.count;n.stripIndexFormat=e>65535?Pf:Df}switch(s.side){case ve:n.frontFace=Bf,n.cullMode=Lf;break;case R:n.frontFace=Bf,n.cullMode=If;break;case Ne:n.frontFace=Bf,n.cullMode=Uf}return n}_getColorWriteMask(e){return!0===e.colorWrite?Zf:Qf}_getDepthCompare(e){let t;if(!1===e.depthTest)t=wf;else{switch(e.depthFunc){case et:t=Nf;break;case Je:t=wf;break;case Ze:t=vf;break;case Qe:t=Af;break;case Ke:t=Sf;break;case Ye:t=Ef;break;case Xe:t=Rf;break;case qe:t=Cf}}return t}}let Wx=null;void 0!==navigator.gpu&&(Wx=await navigator.gpu.requestAdapter());class jx extends sf{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.antialias=!0===e.antialias,!0===this.parameters.antialias?this.parameters.sampleCount=void 0===e.sampleCount?4:e.sampleCount:this.parameters.sampleCount=1,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.adapter=null,this.device=null,this.context=null,this.colorBuffer=null,this.defaultDepthTexture=new x,this.defaultDepthTexture.name="depthBuffer",this.utils=new Px(this),this.attributeUtils=new zx(this),this.bindingUtils=new $x(this),this.pipelineUtils=new Hx(this),this.textureUtils=new Ax(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters,s={powerPreference:t.powerPreference},n=await navigator.gpu.requestAdapter(s);if(null===n)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const r=Object.values(bx),i=[];for(const e of r)n.features.has(e)&&i.push(e);const o={requiredFeatures:i,requiredLimits:t.requiredLimits},a=await n.requestDevice(o),u=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.adapter=n,this.device=a,this.context=u,this.updateSize()}get coordinateSystem(){return _}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}beginRender(e){const t=this.get(e),s=this.device,n=e.occlusionQueryCount;let r;n>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,r=s.createQuerySet({type:"occlusion",count:n}),t.occlusionQuerySet=r,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(n),t.lastOcclusionObject=null);const i={colorAttachments:[{view:null}],depthStencilAttachment:{view:null},occlusionQuerySet:r},o=i.colorAttachments[0],a=i.depthStencilAttachment,u=this.parameters.antialias;if(null!==e.textures){const t=e.textures;i.colorAttachments=[];const s=i.colorAttachments;for(let n=0;n<t.length;n++){const r=this.get(t[n]),i=r.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:hx});let o,a;void 0!==r.msaaTexture?(o=r.msaaTexture.createView(),a=i):(o=i,a=void 0),s.push({view:o,resolveTarget:a,loadOp:Of,storeOp:Mf})}const n=this.get(e.depthTexture);a.view=n.texture.createView(),e.stencil&&e.depthTexture.format===X&&(e.stencil=!1)}else!0===u?(o.view=this.colorBuffer.createView(),o.resolveTarget=this.context.getCurrentTexture().createView()):(o.view=this.context.getCurrentTexture().createView(),o.resolveTarget=void 0),a.view=this._getDepthBufferGPU(e).createView();if(null!==e.textures){const t=i.colorAttachments;for(let s=0;s<t.length;s++){const n=t[s];e.clearColor?(n.clearValue=e.clearColorValue,n.loadOp=Ff,n.storeOp=Mf):(n.loadOp=Of,n.storeOp=Mf)}}else e.clearColor?(o.clearValue=e.clearColorValue,o.loadOp=Ff,o.storeOp=Mf):(o.loadOp=Of,o.storeOp=Mf);e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=Ff,a.depthStoreOp=Mf):(a.depthLoadOp=Of,a.depthStoreOp=Mf)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=Ff,a.stencilStoreOp=Mf):(a.stencilLoadOp=Of,a.stencilStoreOp=Mf));const l=s.createCommandEncoder({label:"renderContext_"+e.id}),c=l.beginRenderPass(i);if(t.descriptor=i,t.encoder=l,t.currentPass=c,t.currentSets={attributes:{}},e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:s,width:n,height:r}=e.scissorValue;c.setScissorRect(t,e.height-r-s,n,r)}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;if(s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),s>0){const n=8*s;let r=this.occludedResolveCache.get(n);void 0===r&&(r=this.device.createBuffer({size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(n,r));const i=this.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,r,0),t.encoder.copyBufferToBuffer(r,0,i,0,n),t.occlusionQueryBuffer=i,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const s=t[e];!0===s.generateMipmaps&&this.textureUtils.generateMipmaps(s)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:n}=t;if(s&&n){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const r=s.getMappedRange(),i=new BigUint64Array(r);for(let t=0;t<n.length;t++)0n!==i[t]&&e.add(n[t]);s.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e);let{x:s,y:n,width:r,height:i,minDepth:o,maxDepth:a}=e.viewportValue;t.setViewport(s,e.height-i-n,r,i,o,a)}clear(e,t,s,n){const r=this.device,i=this.get(e),{descriptor:o}=i;s=s&&e.depth,n=n&&e.stencil;const a=o.colorAttachments[0],u=o.depthStencilAttachment;!0===this.parameters.antialias?(a.view=this.colorBuffer.createView(),a.resolveTarget=this.context.getCurrentTexture().createView()):(a.view=this.context.getCurrentTexture().createView(),a.resolveTarget=void 0),o.depthStencilAttachment.view=this._getDepthBufferGPU(e).createView(),t?(a.loadOp=Ff,a.clearValue=e.clearColorValue):a.loadOp=Of,s?(u.depthLoadOp=Ff,u.depthClearValue=e.clearDepthValue):u.depthLoadOp=Of,n?(u.stencilLoadOp=Ff,u.stencilClearValue=e.clearStencilValue):u.stencilLoadOp=Of,i.encoder=r.createCommandEncoder({}),i.currentPass=i.encoder.beginRenderPass(o),i.currentPass.end(),r.queue.submit([i.encoder.finish()])}beginCompute(e){const t=this.get(e);t.cmdEncoderGPU=this.device.createCommandEncoder({}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass()}compute(e,t,s,n){const{passEncoderGPU:r}=this.get(e),i=this.get(n).pipeline;r.setPipeline(i);const o=this.get(s).group;r.setBindGroup(0,o),r.dispatchWorkgroups(t.dispatchCount)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}draw(e,t){const{object:s,geometry:n,context:r,pipeline:i}=e,o=this.get(e.getBindings()),a=this.get(r),u=this.get(i).pipeline,l=a.currentSets,c=a.currentPass;l.pipeline!==u&&(c.setPipeline(u),l.pipeline=u);const d=o.group;c.setBindGroup(0,d);const h=e.getIndex(),p=null!==h;if(!0===p&&l.index!==h){const e=this.get(h).buffer,t=h.array instanceof Uint16Array?Df:Pf;c.setIndexBuffer(e,t),l.index=h}const m=e.getVertexBuffers();for(let e=0,t=m.length;e<t;e++){const t=m[e];if(l.attributes[e]!==t){const s=this.get(t).buffer;c.setVertexBuffer(e,s),l.attributes[e]=t}}if(void 0!==a.occlusionQuerySet){const e=a.lastOcclusionObject;e!==s&&(null!==e&&!0===e.occlusionTest&&(c.endOcclusionQuery(),a.occlusionQueryIndex++),!0===s.occlusionTest&&(c.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=s),a.lastOcclusionObject=s)}const g=n.drawRange,f=g.start,x=this.getInstanceCount(e);if(0!==x)if(!0===p){const e=g.count!==1/0?g.count:h.count;c.drawIndexed(e,x,f,0,0),t.update(s,e,x)}else{const e=n.attributes.position,r=g.count!==1/0?g.count:e.count;c.draw(r,x,f,0),t.update(s,r,x)}}needsUpdate(e){const t=this.get(e),{object:s,material:n}=e,r=this.utils,i=r.getSampleCount(e.context),o=r.getCurrentColorSpace(e.context),a=r.getCurrentColorFormat(e.context),u=r.getCurrentDepthStencilFormat(e.context),l=r.getPrimitiveTopology(s,n);let c=!1;return t.sampleCount===i&&t.colorSpace===o&&t.colorFormat===a&&t.depthStencilFormat===u&&t.primitiveTopology===l||(t.sampleCount=i,t.colorSpace=o,t.colorFormat=a,t.depthStencilFormat=u,t.primitiveTopology=l,c=!0),c}getCacheKey(e){const{object:t,material:s}=e,n=this.utils,r=e.context;return[n.getSampleCount(r),n.getCurrentColorSpace(r),n.getCurrentColorFormat(r),n.getCurrentDepthStencilFormat(r),n.getPrimitiveTopology(t,s)].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,n,r){return this.textureUtils.copyTextureToBuffer(e,t,s,n,r)}createNodeBuilder(e,t,s=null){return new Dx(e,t,s)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e){this.pipelineUtils.createRenderPipeline(e)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}createBindings(e){this.bindingUtils.createBindings(e)}updateBindings(e){this.bindingUtils.createBindings(e)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this._configureContext(),this._setupColorBuffer()}hasFeature(e){const t=this.adapter||Wx;if(!1===Object.values(bx).includes(e))throw new Error("THREE.WebGPURenderer: Unknown WebGPU GPU feature: "+e);return t.features.has(e)}copyFramebufferToTexture(e,t){const s=this.get(t),{encoder:n,descriptor:r}=s;let i=null;e.isFramebufferTexture?i=this.context.getCurrentTexture():e.isDepthTexture&&(i=this._getDepthBufferGPU(t));const o=this.get(e).texture;s.currentPass.end(),n.copyTextureToTexture({texture:i,origin:{x:0,y:0,z:0}},{texture:o},[e.image.width,e.image.height]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),r.colorAttachments[0].loadOp=Of,t.depth&&(r.depthStencilAttachment.depthLoadOp=Of),t.stencil&&(r.depthStencilAttachment.stencilLoadOp=Of),s.currentPass=n.beginRenderPass(r),s.currentSets={attributes:{}}}_getDepthBufferGPU(e){const{width:t,height:s}=this.getDrawingBufferSize(),n=this.defaultDepthTexture,r=this.get(n).texture;let i,o;if(e.stencil?(i=me,o=ge):e.depth&&(i=X,o=q),void 0!==r){if(n.image.width===t&&n.image.height===s&&n.format===i&&n.type===o)return r;this.textureUtils.destroyTexture(n)}return n.name="depthBuffer",n.format=i,n.type=o,n.image.width=t,n.image.height=s,this.textureUtils.createTexture(n,{sampleCount:this.parameters.sampleCount,width:t,height:s}),this.get(n).texture}_configureContext(){this.context.configure({device:this.device,format:Gf.BGRA8Unorm,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:"premultiplied"})}_setupColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const{width:e,height:t}=this.getDrawingBufferSize();this.colorBuffer=this.device.createTexture({label:"colorBuffer",size:{width:e,height:t,depthOrArrayLayers:1},sampleCount:this.parameters.sampleCount,format:Gf.BGRA8Unorm,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC})}}class qx extends Lg{constructor(e={}){let t;t=ws.isAvailable()?jx:ff;super(new t(e)),this.isWebGPURenderer=!0}}class Xx extends Lg{constructor(e={},t=!1){let s;s=ws.isAvailable()&&!t?jx:ff;super(new s(e)),this.isWebGPURenderer=!0}}const Yx="requestVideoFrameCallback"in HTMLVideoElement.prototype,Kx=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,Qx=window.cancelAnimationFrame||window.mozCancelAnimationFrame;let Zx;class Jx{constructor(e,t){this._callback=e,this.video=t,this.animationID=null,this.running=!1}set callback(e){this._callback=e}async animateLegacy(){const e=this.video.currentTime;e>Zx&&((1/(e-Zx)).toFixed(),await this._callback(e,{width:this.video.videoWidth,height:this.video.videoHeight})),Zx=e,this.animationID=Kx((async()=>await this.animateLegacy()))}async animate(e,t){await this._callback(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initAnimate(){this.animateRef=async(e,t)=>await this.animate(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initLegacyAnimate(){this.animateLegacy()}start(){this.stop(),Yx?this.initAnimate():(Zx=new Date,this.initLegacyAnimate()),this.running=!0}stop(){this.running=!1,Yx?this.animateRef=()=>{}:Qx(this.animationID&&this.animationID.data&&this.animationID.data.handleId||this.animationID)}}const eb="requestVideoFrameCallback"in HTMLVideoElement.prototype,tb=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,sb=window.cancelAnimationFrame||window.mozCancelAnimationFrame;let nb;class rb{constructor(e,t){this._callback=e,this.video=t,this.animationID=null,this.running=!1,this.updateNodesRef=()=>{}}set nodes(e){this._nodes=e,e&&(this.updateNodesRef=()=>{this._nodes.nodeFrame.update()})}set callback(e){this._callback=e}async animateLegacy(){const e=this.video.currentTime;e>nb&&((1/(e-nb)).toFixed(),this.updateNodesRef(),await this._callback(e,{width:this.video.videoWidth,height:this.video.videoHeight})),nb=e,this.animationID=tb((async()=>await this.animateLegacy()))}async animate(e,t){this.updateNodesRef(),await this._callback(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initAnimate(){this.animateRef=async(e,t)=>await this.animate(e,t),this.video.requestVideoFrameCallback(this.animateRef)}initLegacyAnimate(){this.animateLegacy()}start(){this.stop(),eb?this.initAnimate():(nb=new Date,this.initLegacyAnimate()),this.running=!0}stop(){this.running=!1,eb?this.animateRef=()=>{}:sb(this.animationID&&this.animationID.data&&this.animationID.data.handleId||this.animationID)}}export{Cl as AONode,vp as AmbientLightNode,yl as AnalyticLightNode,An as ArrayElementNode,Yr as ArrayUniformNode,Kr as AssignNode,ei as AttributeNode,em as BRDF_GGX,zp as BRDF_Lambert,Zc as BitangentNode,Fd as BlendModeNode,Yu as BufferAttributeNode,sl as BufferNode,zd as BumpMapNode,si as BypassNode,oi as CacheNode,za as CameraNode,Rp as CheckerNode,kh as CodeNode,qd as ColorAdjustmentNode,xa as ColorSpaceNode,mp as ComputeNode,nc as CondNode,Fn as ConstNode,ui as ContextNode,Rn as ConvertNode,xl as CubeTextureNode,tm as DFGApprox,Jp as D_GGX,_p as DirectionalLightNode,Nc as DiscardNode,go as EPSILON,Il as EnvironmentNode,Ml as EquirectUVNode,va as ExpressionNode,Vp as F_Schlick,up as FogExp2Node,rp as FogNode,op as FogRangeNode,Dd as FrontFacingNode,Wh as FunctionCallNode,qh as FunctionNode,Fm as GLSLNodeParser,Tc as HashNode,Sp as HemisphereLightNode,Np as IESSpotLightNode,fo as INFINITY,gr as If,di as IndexNode,el as InstanceNode,Mp as InstancedPointsNodeMaterial,En as JoinNode,fp as LightNode,El as LightingContextNode,mi as LightingModel,Tl as LightingNode,vl as LightsNode,Lp as Line2NodeMaterial,Fp as LineBasicNodeMaterial,Up as LineDashedNodeMaterial,Ac as LoopNode,Cc as MatcapUVNode,pu as MaterialNode,Fa as MaterialReferenceNode,mo as MathNode,Aa as MaxMipLevelNode,kp as MeshBasicNodeMaterial,qp as MeshLambertNodeMaterial,Pp as MeshNormalNodeMaterial,Yp as MeshPhongNodeMaterial,bm as MeshPhysicalNodeMaterial,fm as MeshStandardNodeMaterial,Ka as ModelNode,qu as ModelViewProjectionNode,pl as MorphNode,gn as Node,xi as NodeAttribute,pc as NodeBuilder,ii as NodeCache,yi as NodeCode,mc as NodeFrame,gc as NodeFunctionInput,Ni as NodeKeywords,Ep as NodeLoader,Gl as NodeMaterial,Sm as NodeMaterialLoader,Am as NodeObjectLoader,Zs as NodeShaderStage,en as NodeType,bi as NodeUniform,Js as NodeUpdateType,hn as NodeUtils,Ti as NodeVar,_i as NodeVarying,eh as NormalMapNode,ru as NormalNode,Ua as Object3DNode,qi as OperatorNode,Uc as OscNode,xc as OutputStructNode,Gc as PackingNode,Vi as ParameterNode,Wp as PhongLightingModel,mm as PhysicalLightingModel,Tp as PointLightNode,xd as PointUVNode,_m as PointsNodeMaterial,ku as PositionNode,nh as PosterizeNode,vi as PropertyNode,hp as RangeNode,Ma as ReferenceNode,gl as ReflectVectorNode,zc as RemapNode,Wc as RotateUVNode,Td as SceneNode,nm as Schlick_to_F0,sp as ScriptableNode,Qh as ScriptableValueNode,On as SetNode,ir as ShaderNode,dl as SkinningNode,Fl as SpecularMIPLevelNode,Mn as SplitNode,yp as SpotLightNode,Nm as SpriteNodeMaterial,qc as SpriteSheetUVNode,ic as StackNode,Nd as StorageBufferNode,sh as TBNViewMatrix,rl as TangentNode,Cn as TempNode,gd as TextureBicubicNode,Ca as TextureNode,Sd as TextureStoreNode,wc as TimerNode,dh as ToneMappingNode,Yc as TriplanarTexturesNode,$i as UVNode,Tn as UniformGroupNode,qr as UniformNode,Rd as UserDataNode,Zp as V_GGX_SmithCorrelated,gi as VarNode,Zr as VaryingNode,Jx as VideoAnimation,Bh as ViewportDepthNode,Oh as ViewportDepthTextureNode,gh as ViewportNode,Eh as ViewportSharedTextureNode,Sh as ViewportTextureNode,ws as WebGPU,Xx as WebGPUGLRenderer,qx as WebGPURenderer,rb as WebGPUVideoAnimation,Io as abs,Bo as acos,Xi as add,Rl as addLightNode,fn as addNodeClass,In as addNodeElement,kl as addNodeMaterial,io as and,fr as append,$r as arrayBuffer,Fo as asin,Qr as assign,Uo as atan,jo as atan2,ti as attribute,_d as backgroundBlurriness,yd as backgroundIntensity,uo as bitAnd,lo as bitOr,co as bitXor,Jc as bitangentGeometry,ed as bitangentLocal,td as bitangentView,sd as bitangentWorld,Dr as bmat3,Vr as bmat4,yr as bool,nl as buffer,Ku as bufferAttribute,$d as bumpMap,Bd as burn,Ar as bvec2,wr as bvec3,Br as bvec4,ni as bypass,ai as cache,jh as call,Wa as cameraFar,Ha as cameraNear,qa as cameraNormalMatrix,Ya as cameraPosition,$a as cameraProjectionMatrix,ja as cameraViewMatrix,Xa as cameraWorldMatrix,Ro as ceil,Cp as checker,ua as clamp,Ei as clearcoat,wi as clearcoatRoughness,Vh as code,xr as color,_a as colorSpaceToLinear,Vc as colorToDirection,gp as compute,rc as cond,li as context,Wr as convert,Mo as cos,xn as createNodeFromType,Vl as createNodeMaterialFromType,ta as cross,bl as cubeTexture,ko as dFdx,Vo as dFdy,Pi as dashSize,sn as defaultBuildStages,tn as defaultShaderStages,bo as degrees,lp as densityFog,Ph as depth,Gh as depthTexture,Jo as difference,Ai as diffuseColor,kc as directionToColor,Sc as discard,Zo as distance,Qi as div,Ud as dodge,ea as dot,Qu as dynamicBufferAttribute,Hr as element,Ji as equal,Ol as equirectUV,To as exp,_o as exp2,Sa as expression,Gd as faceDirection,ha as faceForward,br as float,Ao as floor,ip as fog,Eo as fract,Nn as frameGroup,Bc as frameId,Pd as frontFacing,Wo as fwidth,Gi as gapSize,rr as getConstNodeType,mr as getCurrentStack,bp as getDistanceAttenuation,Kp as getGeometryRoughness,Qp as getRoughness,tp as global,Hh as glsl,Yh as glslFn,so as greaterThan,ro as greaterThanEqual,_c as hash,Kd as hue,Ir as imat3,Gr as imat4,tl as instance,pi as instanceIndex,Zu as instancedBufferAttribute,Ju as instancedDynamicBufferAttribute,Tr as int,So as inverseSqrt,Fi as iridescence,Bi as iridescenceIOR,Ui as iridescenceThickness,vr as ivec2,Cr as ivec3,Or as ivec4,zh as js,ci as label,Do as length,to as lessThan,no as lessThanEqual,Al as lightNodes,xp as lightTargetDirection,wl as lightingContext,Sl as lights,Ta as linearToColorSpace,ya as linearTosRGB,yo as log,No as log2,Rc as loop,Qd as lumaCoeffs,Zd as luminance,Ur as mat3,Pr as mat4,Ec as matcapUV,mu as materialAlphaTest,Au as materialClearcoat,Cu as materialClearcoatNormal,Ru as materialClearcoatRoughness,gu as materialColor,xu as materialEmissive,Ou as materialIridescence,Fu as materialIridescenceIOR,Bu as materialIridescenceThickness,Pu as materialLineDashOffset,Iu as materialLineDashSize,Lu as materialLineGapSize,Uu as materialLineScale,Du as materialLineWidth,vu as materialMetalness,Su as materialNormal,bu as materialOpacity,Gu as materialPointWidth,Ba as materialReference,yu as materialReflectivity,Eu as materialRotation,Nu as materialRoughness,wu as materialSheen,Mu as materialSheenRoughness,fu as materialShininess,Tu as materialSpecularColor,_u as materialSpecularStrength,Xo as max,Ra as maxMipLevel,Ci as metalness,qo as min,aa as mix,Yo as mod,Qa as modelDirection,Ja as modelNormalMatrix,tu as modelPosition,su as modelScale,Za as modelViewMatrix,nu as modelViewPosition,Xu as modelViewProjection,eu as modelWorldMatrix,ml as morph,Ki as mul,Xm as mx_aastep,dg as mx_cell_noise_float,ng as mx_contrast,hg as mx_fractal_noise_float,pg as mx_fractal_noise_vec2,mg as mx_fractal_noise_vec3,gg as mx_fractal_noise_vec4,Wm as mx_hsvtorgb,rg as mx_noise_float,ig as mx_noise_vec2,og as mx_noise_vec3,ag as mx_noise_vec4,Km as mx_ramplr,Qm as mx_ramptb,jm as mx_rgbtohsv,sg as mx_safepower,Jm as mx_splitlr,eg as mx_splittb,qm as mx_srgb_texture_to_lin_rec709,tg as mx_transform_uv,ug as mx_worley_noise_float,lg as mx_worley_noise_vec2,cg as mx_worley_noise_vec3,Po as negate,ur as nodeArray,cr as nodeImmutable,or as nodeObject,ar as nodeObjects,lr as nodeProxy,iu as normalGeometry,ou as normalLocal,th as normalMap,au as normalView,uu as normalWorld,Co as normalize,Ia as objectDirection,Sn as objectGroup,Da as objectNormalMatrix,Ga as objectPosition,ka as objectScale,La as objectViewMatrix,Va as objectViewPosition,Pa as objectWorldMatrix,Go as oneMinus,oo as or,Ih as orthographicDepthToViewZ,Pc as oscSawtooth,Ic as oscSine,Lc as oscSquare,Dc as oscTriangle,Di as output,bc as outputStruct,Id as overlay,zi as parameter,Dh as perspectiveDepthToViewZ,bd as pointUV,ki as pointWidth,Vu as positionGeometry,zu as positionLocal,Wu as positionView,ju as positionViewDirection,$u as positionWorld,Hu as positionWorldDirection,rh as posterize,sa as pow,na as pow2,ra as pow3,ia as pow4,Si as property,xo as radians,pp as range,ap as rangeFog,$o as reciprocal,Oa as reference,Qo as reflect,fl as reflectVector,ca as refract,Zi as remainder,$c as remap,Hc as remapClamp,vn as renderGroup,jc as rotateUV,Ri as roughness,zo as round,Na as sRGBToLinear,wa as sampler,la as saturate,Xd as saturation,Ld as screen,np as scriptable,Zh as scriptableValue,pr as setCurrentStack,dr as shader,nn as shaderStages,Mi as sheen,Oi as sheenRoughness,ho as shiftLeft,po as shiftRight,Li as shininess,Lo as sign,wo as sin,hl as skinning,da as smoothstep,Ii as specularColor,Bl as specularMIPLevel,jr as split,Xc as spritesheetUV,vo as sqrt,oc as stack,Ko as step,vd as storage,zr as string,Yi as sub,Oo as tan,il as tangentGeometry,ol as tangentLocal,al as tangentView,ul as tangentWorld,fi as temp,Ea as texture,fd as textureBicubic,Ad as textureStore,Fc as timerDelta,Oc as timerGlobal,Mc as timerLocal,hh as toneMapping,oa as transformDirection,nd as transformedBitangentView,rd as transformedBitangentWorld,du as transformedClearcoatNormalView,lu as transformedNormalView,cu as transformedNormalWorld,ll as transformedTangentView,cl as transformedTangentWorld,Qc as triplanarTexture,Kc as triplanarTextures,Ho as trunc,hr as tslFn,_r as uint,Lr as umat3,kr as umat4,Xr as uniform,_n as uniformGroup,Cd as userData,Hi as uv,Sr as uvec2,Er as uvec3,Fr as uvec4,Jr as varying,Nr as vec2,Rr as vec3,Mr as vec4,rn as vectorComponents,hi as vertexIndex,Yd as vibrance,Uh as viewZToOrthographicDepth,Lh as viewZToPerspectiveDepth,bh as viewport,_h as viewportBottomLeft,Nh as viewportBottomRight,fh as viewportCoordinate,Fh as viewportDepthTexture,Rh as viewportMipTexture,xh as viewportResolution,wh as viewportSharedTexture,Ah as viewportTexture,Th as viewportTopLeft,yh as viewportTopRight,$h as wgsl,Kh as wgslFn,ao as xor};
